#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ULS_Site.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ULS_db1")]
	public partial class uls_dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertequip_type_avt(equip_type_avt instance);
    partial void Updateequip_type_avt(equip_type_avt instance);
    partial void Deleteequip_type_avt(equip_type_avt instance);
    partial void Insertmake_avt(make_avt instance);
    partial void Updatemake_avt(make_avt instance);
    partial void Deletemake_avt(make_avt instance);
    partial void Insertfuel_avt(fuel_avt instance);
    partial void Updatefuel_avt(fuel_avt instance);
    partial void Deletefuel_avt(fuel_avt instance);
    partial void Insertimage(image instance);
    partial void Updateimage(image instance);
    partial void Deleteimage(image instance);
    partial void Insertmodel_avt(model_avt instance);
    partial void Updatemodel_avt(model_avt instance);
    partial void Deletemodel_avt(model_avt instance);
    partial void Inserttool_mfgs_avt(tool_mfgs_avt instance);
    partial void Updatetool_mfgs_avt(tool_mfgs_avt instance);
    partial void Deletetool_mfgs_avt(tool_mfgs_avt instance);
    partial void Inserttool_size_avt(tool_size_avt instance);
    partial void Updatetool_size_avt(tool_size_avt instance);
    partial void Deletetool_size_avt(tool_size_avt instance);
    partial void Inserttools_descr_avt(tools_descr_avt instance);
    partial void Updatetools_descr_avt(tools_descr_avt instance);
    partial void Deletetools_descr_avt(tools_descr_avt instance);
    partial void Inserttools_item_avt(tools_item_avt instance);
    partial void Updatetools_item_avt(tools_item_avt instance);
    partial void Deletetools_item_avt(tools_item_avt instance);
    partial void Insertservice_due_parm(service_due_parm instance);
    partial void Updateservice_due_parm(service_due_parm instance);
    partial void Deleteservice_due_parm(service_due_parm instance);
    partial void Insertequip_loc_avt(equip_loc_avt instance);
    partial void Updateequip_loc_avt(equip_loc_avt instance);
    partial void Deleteequip_loc_avt(equip_loc_avt instance);
    partial void Inserttools_serv(tools_serv instance);
    partial void Updatetools_serv(tools_serv instance);
    partial void Deletetools_serv(tools_serv instance);
    partial void Inserttools_serv_avt(tools_serv_avt instance);
    partial void Updatetools_serv_avt(tools_serv_avt instance);
    partial void Deletetools_serv_avt(tools_serv_avt instance);
    partial void Insertservice(service instance);
    partial void Updateservice(service instance);
    partial void Deleteservice(service instance);
    partial void Insertservices_avt(services_avt instance);
    partial void Updateservices_avt(services_avt instance);
    partial void Deleteservices_avt(services_avt instance);
    partial void Insertsmalltool(smalltool instance);
    partial void Updatesmalltool(smalltool instance);
    partial void Deletesmalltool(smalltool instance);
    partial void Inserttools_assign(tools_assign instance);
    partial void Updatetools_assign(tools_assign instance);
    partial void Deletetools_assign(tools_assign instance);
    partial void Insertassignment(assignment instance);
    partial void Updateassignment(assignment instance);
    partial void Deleteassignment(assignment instance);
    partial void Insertassign_to(assign_to instance);
    partial void Updateassign_to(assign_to instance);
    partial void Deleteassign_to(assign_to instance);
    partial void Insertdefault_div(default_div instance);
    partial void Updatedefault_div(default_div instance);
    partial void Deletedefault_div(default_div instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertsvc_schedule_day(svc_schedule_day instance);
    partial void Updatesvc_schedule_day(svc_schedule_day instance);
    partial void Deletesvc_schedule_day(svc_schedule_day instance);
    partial void Insertsvc_crew(svc_crew instance);
    partial void Updatesvc_crew(svc_crew instance);
    partial void Deletesvc_crew(svc_crew instance);
    partial void Insertsvc_foreman(svc_foreman instance);
    partial void Updatesvc_foreman(svc_foreman instance);
    partial void Deletesvc_foreman(svc_foreman instance);
    partial void Insertsvc_appointment(svc_appointment instance);
    partial void Updatesvc_appointment(svc_appointment instance);
    partial void Deletesvc_appointment(svc_appointment instance);
    partial void Insertequip_edit_log(equip_edit_log instance);
    partial void Updateequip_edit_log(equip_edit_log instance);
    partial void Deleteequip_edit_log(equip_edit_log instance);
    partial void Inserttool_edit_log(tool_edit_log instance);
    partial void Updatetool_edit_log(tool_edit_log instance);
    partial void Deletetool_edit_log(tool_edit_log instance);
    partial void Inserthelp_msg(help_msg instance);
    partial void Updatehelp_msg(help_msg instance);
    partial void Deletehelp_msg(help_msg instance);
    partial void Insertsvc_contact(svc_contact instance);
    partial void Updatesvc_contact(svc_contact instance);
    partial void Deletesvc_contact(svc_contact instance);
    partial void Insertelectronics_make_avt(electronics_make_avt instance);
    partial void Updateelectronics_make_avt(electronics_make_avt instance);
    partial void Deleteelectronics_make_avt(electronics_make_avt instance);
    partial void Insertelectronics_model_avt(electronics_model_avt instance);
    partial void Updateelectronics_model_avt(electronics_model_avt instance);
    partial void Deleteelectronics_model_avt(electronics_model_avt instance);
    partial void Insertelectronics_type_avt(electronics_type_avt instance);
    partial void Updateelectronics_type_avt(electronics_type_avt instance);
    partial void Deleteelectronics_type_avt(electronics_type_avt instance);
    partial void Insertelectronic(electronic instance);
    partial void Updateelectronic(electronic instance);
    partial void Deleteelectronic(electronic instance);
    partial void Insertelectronics_edit_log(electronics_edit_log instance);
    partial void Updateelectronics_edit_log(electronics_edit_log instance);
    partial void Deleteelectronics_edit_log(electronics_edit_log instance);
    partial void Insertelectronics_assgn(electronics_assgn instance);
    partial void Updateelectronics_assgn(electronics_assgn instance);
    partial void Deleteelectronics_assgn(electronics_assgn instance);
    partial void Inserttool(tool instance);
    partial void Updatetool(tool instance);
    partial void Deletetool(tool instance);
    partial void Insertmanage_by_history(manage_by_history instance);
    partial void Updatemanage_by_history(manage_by_history instance);
    partial void Deletemanage_by_history(manage_by_history instance);
    partial void InsertempQual(empQual instance);
    partial void UpdateempQual(empQual instance);
    partial void DeleteempQual(empQual instance);
    partial void Insertqualification(qualification instance);
    partial void Updatequalification(qualification instance);
    partial void Deletequalification(qualification instance);
    partial void InsertempJobClass(empJobClass instance);
    partial void UpdateempJobClass(empJobClass instance);
    partial void DeleteempJobClass(empJobClass instance);
    partial void Insertqual_notification(qual_notification instance);
    partial void Updatequal_notification(qual_notification instance);
    partial void Deletequal_notification(qual_notification instance);
    partial void InsertempWarnRecognition(empWarnRecognition instance);
    partial void UpdateempWarnRecognition(empWarnRecognition instance);
    partial void DeleteempWarnRecognition(empWarnRecognition instance);
    partial void Insertequipment(equipment instance);
    partial void Updateequipment(equipment instance);
    partial void Deleteequipment(equipment instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    #endregion
		
		public uls_dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ULS_db1ConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public uls_dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public uls_dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public uls_dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public uls_dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<office_location> office_locations
		{
			get
			{
				return this.GetTable<office_location>();
			}
		}
		
		public System.Data.Linq.Table<equip_type_avt> equip_type_avts
		{
			get
			{
				return this.GetTable<equip_type_avt>();
			}
		}
		
		public System.Data.Linq.Table<make_avt> make_avts
		{
			get
			{
				return this.GetTable<make_avt>();
			}
		}
		
		public System.Data.Linq.Table<division_avt> division_avts
		{
			get
			{
				return this.GetTable<division_avt>();
			}
		}
		
		public System.Data.Linq.Table<fuel_avt> fuel_avts
		{
			get
			{
				return this.GetTable<fuel_avt>();
			}
		}
		
		public System.Data.Linq.Table<condition_avt> condition_avts
		{
			get
			{
				return this.GetTable<condition_avt>();
			}
		}
		
		public System.Data.Linq.Table<image> images
		{
			get
			{
				return this.GetTable<image>();
			}
		}
		
		public System.Data.Linq.Table<model_avt> model_avts
		{
			get
			{
				return this.GetTable<model_avt>();
			}
		}
		
		public System.Data.Linq.Table<tool_mfgs_avt> tool_mfgs_avts
		{
			get
			{
				return this.GetTable<tool_mfgs_avt>();
			}
		}
		
		public System.Data.Linq.Table<tool_size_avt> tool_size_avts
		{
			get
			{
				return this.GetTable<tool_size_avt>();
			}
		}
		
		public System.Data.Linq.Table<tools_descr_avt> tools_descr_avts
		{
			get
			{
				return this.GetTable<tools_descr_avt>();
			}
		}
		
		public System.Data.Linq.Table<tools_item_avt> tools_item_avts
		{
			get
			{
				return this.GetTable<tools_item_avt>();
			}
		}
		
		public System.Data.Linq.Table<service_due_parm> service_due_parms
		{
			get
			{
				return this.GetTable<service_due_parm>();
			}
		}
		
		public System.Data.Linq.Table<equip_loc_avt> equip_loc_avts
		{
			get
			{
				return this.GetTable<equip_loc_avt>();
			}
		}
		
		public System.Data.Linq.Table<tools_serv> tools_servs
		{
			get
			{
				return this.GetTable<tools_serv>();
			}
		}
		
		public System.Data.Linq.Table<tools_serv_avt> tools_serv_avts
		{
			get
			{
				return this.GetTable<tools_serv_avt>();
			}
		}
		
		public System.Data.Linq.Table<service> services
		{
			get
			{
				return this.GetTable<service>();
			}
		}
		
		public System.Data.Linq.Table<services_avt> services_avts
		{
			get
			{
				return this.GetTable<services_avt>();
			}
		}
		
		public System.Data.Linq.Table<smalltool> smalltools
		{
			get
			{
				return this.GetTable<smalltool>();
			}
		}
		
		public System.Data.Linq.Table<vw_SmallToolsGrid> vw_SmallToolsGrids
		{
			get
			{
				return this.GetTable<vw_SmallToolsGrid>();
			}
		}
		
		public System.Data.Linq.Table<tools_assign> tools_assigns
		{
			get
			{
				return this.GetTable<tools_assign>();
			}
		}
		
		public System.Data.Linq.Table<assignment> assignments
		{
			get
			{
				return this.GetTable<assignment>();
			}
		}
		
		public System.Data.Linq.Table<assign_to> assign_tos
		{
			get
			{
				return this.GetTable<assign_to>();
			}
		}
		
		public System.Data.Linq.Table<default_div> default_divs
		{
			get
			{
				return this.GetTable<default_div>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<svc_schedule_day> svc_schedule_days
		{
			get
			{
				return this.GetTable<svc_schedule_day>();
			}
		}
		
		public System.Data.Linq.Table<svc_crew> svc_crews
		{
			get
			{
				return this.GetTable<svc_crew>();
			}
		}
		
		public System.Data.Linq.Table<svc_foreman> svc_foremans
		{
			get
			{
				return this.GetTable<svc_foreman>();
			}
		}
		
		public System.Data.Linq.Table<svc_appointment> svc_appointments
		{
			get
			{
				return this.GetTable<svc_appointment>();
			}
		}
		
		public System.Data.Linq.Table<equip_edit_log> equip_edit_logs
		{
			get
			{
				return this.GetTable<equip_edit_log>();
			}
		}
		
		public System.Data.Linq.Table<tool_edit_log> tool_edit_logs
		{
			get
			{
				return this.GetTable<tool_edit_log>();
			}
		}
		
		public System.Data.Linq.Table<help_msg> help_msgs
		{
			get
			{
				return this.GetTable<help_msg>();
			}
		}
		
		public System.Data.Linq.Table<vw_EquipAssignGrid> vw_EquipAssignGrids
		{
			get
			{
				return this.GetTable<vw_EquipAssignGrid>();
			}
		}
		
		public System.Data.Linq.Table<vw_ToolsAssignGrid> vw_ToolsAssignGrids
		{
			get
			{
				return this.GetTable<vw_ToolsAssignGrid>();
			}
		}
		
		public System.Data.Linq.Table<svc_contact> svc_contacts
		{
			get
			{
				return this.GetTable<svc_contact>();
			}
		}
		
		public System.Data.Linq.Table<electronics_make_avt> electronics_make_avts
		{
			get
			{
				return this.GetTable<electronics_make_avt>();
			}
		}
		
		public System.Data.Linq.Table<electronics_model_avt> electronics_model_avts
		{
			get
			{
				return this.GetTable<electronics_model_avt>();
			}
		}
		
		public System.Data.Linq.Table<electronics_type_avt> electronics_type_avts
		{
			get
			{
				return this.GetTable<electronics_type_avt>();
			}
		}
		
		public System.Data.Linq.Table<electronic> electronics
		{
			get
			{
				return this.GetTable<electronic>();
			}
		}
		
		public System.Data.Linq.Table<vw_ElectronicsGrid> vw_ElectronicsGrids
		{
			get
			{
				return this.GetTable<vw_ElectronicsGrid>();
			}
		}
		
		public System.Data.Linq.Table<vw_ElectronicsAssignGrid> vw_ElectronicsAssignGrids
		{
			get
			{
				return this.GetTable<vw_ElectronicsAssignGrid>();
			}
		}
		
		public System.Data.Linq.Table<electronics_edit_log> electronics_edit_logs
		{
			get
			{
				return this.GetTable<electronics_edit_log>();
			}
		}
		
		public System.Data.Linq.Table<electronics_assgn> electronics_assgns
		{
			get
			{
				return this.GetTable<electronics_assgn>();
			}
		}
		
		public System.Data.Linq.Table<tool> tools
		{
			get
			{
				return this.GetTable<tool>();
			}
		}
		
		public System.Data.Linq.Table<manage_by_history> manage_by_histories
		{
			get
			{
				return this.GetTable<manage_by_history>();
			}
		}
		
		public System.Data.Linq.Table<vw_ToolsGrid> vw_ToolsGrids
		{
			get
			{
				return this.GetTable<vw_ToolsGrid>();
			}
		}
		
		public System.Data.Linq.Table<empQual> empQuals
		{
			get
			{
				return this.GetTable<empQual>();
			}
		}
		
		public System.Data.Linq.Table<qualification> qualifications
		{
			get
			{
				return this.GetTable<qualification>();
			}
		}
		
		public System.Data.Linq.Table<vw_QualificationsGrid> vw_QualificationsGrids
		{
			get
			{
				return this.GetTable<vw_QualificationsGrid>();
			}
		}
		
		public System.Data.Linq.Table<empJobClass> empJobClasses
		{
			get
			{
				return this.GetTable<empJobClass>();
			}
		}
		
		public System.Data.Linq.Table<vw_QualificationsAdmin> vw_QualificationsAdmins
		{
			get
			{
				return this.GetTable<vw_QualificationsAdmin>();
			}
		}
		
		public System.Data.Linq.Table<qual_notification> qual_notifications
		{
			get
			{
				return this.GetTable<qual_notification>();
			}
		}
		
		public System.Data.Linq.Table<empWarnRecognition> empWarnRecognitions
		{
			get
			{
				return this.GetTable<empWarnRecognition>();
			}
		}
		
		public System.Data.Linq.Table<vw_EquipGrid> vw_EquipGrids
		{
			get
			{
				return this.GetTable<vw_EquipGrid>();
			}
		}
		
		public System.Data.Linq.Table<equipment> equipments
		{
			get
			{
				return this.GetTable<equipment>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<vw_EquipAssignXferGrid> vw_EquipAssignXferGrids
		{
			get
			{
				return this.GetTable<vw_EquipAssignXferGrid>();
			}
		}
		
		public System.Data.Linq.Table<vw_ToolsAssignXferGrid> vw_ToolsAssignXferGrids
		{
			get
			{
				return this.GetTable<vw_ToolsAssignXferGrid>();
			}
		}
		
		[Function(Name="dbo.UpdateObsoleteId")]
		public int UpdateObsoleteId([Parameter(DbType="VarChar(30)")] string id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.office_locations")]
	public partial class office_location
	{
		
		private string _location_name;
		
		private string _location_address;
		
		private string _default_from;
		
		public office_location()
		{
		}
		
		[Column(Storage="_location_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string location_name
		{
			get
			{
				return this._location_name;
			}
			set
			{
				if ((this._location_name != value))
				{
					this._location_name = value;
				}
			}
		}
		
		[Column(Storage="_location_address", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string location_address
		{
			get
			{
				return this._location_address;
			}
			set
			{
				if ((this._location_address != value))
				{
					this._location_address = value;
				}
			}
		}
		
		[Column(Storage="_default_from", DbType="VarChar(250)")]
		public string default_from
		{
			get
			{
				return this._default_from;
			}
			set
			{
				if ((this._default_from != value))
				{
					this._default_from = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.equip_type_avt")]
	public partial class equip_type_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _type_id;
		
		private string _type_desc;
		
		private EntitySet<service_due_parm> _service_due_parms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontype_idChanging(short value);
    partial void Ontype_idChanged();
    partial void Ontype_descChanging(string value);
    partial void Ontype_descChanged();
    #endregion
		
		public equip_type_avt()
		{
			this._service_due_parms = new EntitySet<service_due_parm>(new Action<service_due_parm>(this.attach_service_due_parms), new Action<service_due_parm>(this.detach_service_due_parms));
			OnCreated();
		}
		
		[Column(Storage="_type_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[Column(Storage="_type_desc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type_desc
		{
			get
			{
				return this._type_desc;
			}
			set
			{
				if ((this._type_desc != value))
				{
					this.Ontype_descChanging(value);
					this.SendPropertyChanging();
					this._type_desc = value;
					this.SendPropertyChanged("type_desc");
					this.Ontype_descChanged();
				}
			}
		}
		
		[Association(Name="equip_type_avt_service_due_parm", Storage="_service_due_parms", ThisKey="type_id", OtherKey="type_id")]
		public EntitySet<service_due_parm> service_due_parms
		{
			get
			{
				return this._service_due_parms;
			}
			set
			{
				this._service_due_parms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_service_due_parms(service_due_parm entity)
		{
			this.SendPropertyChanging();
			entity.equip_type_avt = this;
		}
		
		private void detach_service_due_parms(service_due_parm entity)
		{
			this.SendPropertyChanging();
			entity.equip_type_avt = null;
		}
	}
	
	[Table(Name="dbo.make_avt")]
	public partial class make_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _make_id;
		
		private string _make_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmake_idChanging(short value);
    partial void Onmake_idChanged();
    partial void Onmake_descrChanging(string value);
    partial void Onmake_descrChanged();
    #endregion
		
		public make_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_make_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short make_id
		{
			get
			{
				return this._make_id;
			}
			set
			{
				if ((this._make_id != value))
				{
					this.Onmake_idChanging(value);
					this.SendPropertyChanging();
					this._make_id = value;
					this.SendPropertyChanged("make_id");
					this.Onmake_idChanged();
				}
			}
		}
		
		[Column(Storage="_make_descr", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string make_descr
		{
			get
			{
				return this._make_descr;
			}
			set
			{
				if ((this._make_descr != value))
				{
					this.Onmake_descrChanging(value);
					this.SendPropertyChanging();
					this._make_descr = value;
					this.SendPropertyChanged("make_descr");
					this.Onmake_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.division_avt")]
	public partial class division_avt
	{
		
		private string _div_name;
		
		private string _password;
		
		public division_avt()
		{
		}
		
		[Column(Storage="_div_name", DbType="NVarChar(10)")]
		public string div_name
		{
			get
			{
				return this._div_name;
			}
			set
			{
				if ((this._div_name != value))
				{
					this._div_name = value;
				}
			}
		}
		
		[Column(Storage="_password", DbType="NVarChar(8)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.fuel_avt")]
	public partial class fuel_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _fuel_id;
		
		private string _fuel_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfuel_idChanging(short value);
    partial void Onfuel_idChanged();
    partial void Onfuel_descrChanging(string value);
    partial void Onfuel_descrChanged();
    #endregion
		
		public fuel_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_fuel_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short fuel_id
		{
			get
			{
				return this._fuel_id;
			}
			set
			{
				if ((this._fuel_id != value))
				{
					this.Onfuel_idChanging(value);
					this.SendPropertyChanging();
					this._fuel_id = value;
					this.SendPropertyChanged("fuel_id");
					this.Onfuel_idChanged();
				}
			}
		}
		
		[Column(Storage="_fuel_descr", DbType="NVarChar(50)")]
		public string fuel_descr
		{
			get
			{
				return this._fuel_descr;
			}
			set
			{
				if ((this._fuel_descr != value))
				{
					this.Onfuel_descrChanging(value);
					this.SendPropertyChanging();
					this._fuel_descr = value;
					this.SendPropertyChanged("fuel_descr");
					this.Onfuel_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.condition_avt")]
	public partial class condition_avt
	{
		
		private short _condition_id;
		
		private string _condition_descr;
		
		public condition_avt()
		{
		}
		
		[Column(Storage="_condition_id", DbType="SmallInt NOT NULL")]
		public short condition_id
		{
			get
			{
				return this._condition_id;
			}
			set
			{
				if ((this._condition_id != value))
				{
					this._condition_id = value;
				}
			}
		}
		
		[Column(Storage="_condition_descr", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string condition_descr
		{
			get
			{
				return this._condition_descr;
			}
			set
			{
				if ((this._condition_descr != value))
				{
					this._condition_descr = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.images")]
	public partial class image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _image_id;
		
		private string _entity_id;
		
		private string _image_type;
		
		private string _image_path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimage_idChanging(int value);
    partial void Onimage_idChanged();
    partial void Onentity_idChanging(string value);
    partial void Onentity_idChanged();
    partial void Onimage_typeChanging(string value);
    partial void Onimage_typeChanged();
    partial void Onimage_pathChanging(string value);
    partial void Onimage_pathChanged();
    #endregion
		
		public image()
		{
			OnCreated();
		}
		
		[Column(Storage="_image_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[Column(Storage="_entity_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string entity_id
		{
			get
			{
				return this._entity_id;
			}
			set
			{
				if ((this._entity_id != value))
				{
					this.Onentity_idChanging(value);
					this.SendPropertyChanging();
					this._entity_id = value;
					this.SendPropertyChanged("entity_id");
					this.Onentity_idChanged();
				}
			}
		}
		
		[Column(Storage="_image_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string image_type
		{
			get
			{
				return this._image_type;
			}
			set
			{
				if ((this._image_type != value))
				{
					this.Onimage_typeChanging(value);
					this.SendPropertyChanging();
					this._image_type = value;
					this.SendPropertyChanged("image_type");
					this.Onimage_typeChanged();
				}
			}
		}
		
		[Column(Storage="_image_path", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string image_path
		{
			get
			{
				return this._image_path;
			}
			set
			{
				if ((this._image_path != value))
				{
					this.Onimage_pathChanging(value);
					this.SendPropertyChanging();
					this._image_path = value;
					this.SendPropertyChanged("image_path");
					this.Onimage_pathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.model_avt")]
	public partial class model_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _model_id;
		
		private string _model_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmodel_idChanging(short value);
    partial void Onmodel_idChanged();
    partial void Onmodel_descrChanging(string value);
    partial void Onmodel_descrChanged();
    #endregion
		
		public model_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_model_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short model_id
		{
			get
			{
				return this._model_id;
			}
			set
			{
				if ((this._model_id != value))
				{
					this.Onmodel_idChanging(value);
					this.SendPropertyChanging();
					this._model_id = value;
					this.SendPropertyChanged("model_id");
					this.Onmodel_idChanged();
				}
			}
		}
		
		[Column(Storage="_model_descr", DbType="NVarChar(25)")]
		public string model_descr
		{
			get
			{
				return this._model_descr;
			}
			set
			{
				if ((this._model_descr != value))
				{
					this.Onmodel_descrChanging(value);
					this.SendPropertyChanging();
					this._model_descr = value;
					this.SendPropertyChanged("model_descr");
					this.Onmodel_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tool_mfgs_avt")]
	public partial class tool_mfgs_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _tool_mfg_id;
		
		private string _tool_mfg_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontool_mfg_idChanging(short value);
    partial void Ontool_mfg_idChanged();
    partial void Ontool_mfg_descrChanging(string value);
    partial void Ontool_mfg_descrChanged();
    #endregion
		
		public tool_mfgs_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_tool_mfg_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short tool_mfg_id
		{
			get
			{
				return this._tool_mfg_id;
			}
			set
			{
				if ((this._tool_mfg_id != value))
				{
					this.Ontool_mfg_idChanging(value);
					this.SendPropertyChanging();
					this._tool_mfg_id = value;
					this.SendPropertyChanged("tool_mfg_id");
					this.Ontool_mfg_idChanged();
				}
			}
		}
		
		[Column(Storage="_tool_mfg_descr", DbType="NVarChar(50)")]
		public string tool_mfg_descr
		{
			get
			{
				return this._tool_mfg_descr;
			}
			set
			{
				if ((this._tool_mfg_descr != value))
				{
					this.Ontool_mfg_descrChanging(value);
					this.SendPropertyChanging();
					this._tool_mfg_descr = value;
					this.SendPropertyChanged("tool_mfg_descr");
					this.Ontool_mfg_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tool_size_avt")]
	public partial class tool_size_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _size_id;
		
		private string _size_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsize_idChanging(int value);
    partial void Onsize_idChanged();
    partial void Onsize_descrChanging(string value);
    partial void Onsize_descrChanged();
    #endregion
		
		public tool_size_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_size_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[Column(Storage="_size_descr", DbType="NVarChar(50)")]
		public string size_descr
		{
			get
			{
				return this._size_descr;
			}
			set
			{
				if ((this._size_descr != value))
				{
					this.Onsize_descrChanging(value);
					this.SendPropertyChanging();
					this._size_descr = value;
					this.SendPropertyChanged("size_descr");
					this.Onsize_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tools_descr_avt")]
	public partial class tools_descr_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _tools_descr_id;
		
		private string _tools_descr_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontools_descr_idChanging(short value);
    partial void Ontools_descr_idChanged();
    partial void Ontools_descr_descrChanging(string value);
    partial void Ontools_descr_descrChanged();
    #endregion
		
		public tools_descr_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_tools_descr_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short tools_descr_id
		{
			get
			{
				return this._tools_descr_id;
			}
			set
			{
				if ((this._tools_descr_id != value))
				{
					this.Ontools_descr_idChanging(value);
					this.SendPropertyChanging();
					this._tools_descr_id = value;
					this.SendPropertyChanged("tools_descr_id");
					this.Ontools_descr_idChanged();
				}
			}
		}
		
		[Column(Storage="_tools_descr_descr", DbType="NVarChar(50)")]
		public string tools_descr_descr
		{
			get
			{
				return this._tools_descr_descr;
			}
			set
			{
				if ((this._tools_descr_descr != value))
				{
					this.Ontools_descr_descrChanging(value);
					this.SendPropertyChanging();
					this._tools_descr_descr = value;
					this.SendPropertyChanged("tools_descr_descr");
					this.Ontools_descr_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tools_item_avt")]
	public partial class tools_item_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _tools_type_id;
		
		private string _tools_type_descr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontools_type_idChanging(short value);
    partial void Ontools_type_idChanged();
    partial void Ontools_type_descrChanging(string value);
    partial void Ontools_type_descrChanged();
    #endregion
		
		public tools_item_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_tools_type_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short tools_type_id
		{
			get
			{
				return this._tools_type_id;
			}
			set
			{
				if ((this._tools_type_id != value))
				{
					this.Ontools_type_idChanging(value);
					this.SendPropertyChanging();
					this._tools_type_id = value;
					this.SendPropertyChanged("tools_type_id");
					this.Ontools_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_tools_type_descr", DbType="NVarChar(25)")]
		public string tools_type_descr
		{
			get
			{
				return this._tools_type_descr;
			}
			set
			{
				if ((this._tools_type_descr != value))
				{
					this.Ontools_type_descrChanging(value);
					this.SendPropertyChanging();
					this._tools_type_descr = value;
					this.SendPropertyChanged("tools_type_descr");
					this.Ontools_type_descrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.service_due_parms")]
	public partial class service_due_parm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _type_id;
		
		private float _service_every;
		
		private float _warning_within;
		
		private EntityRef<equip_type_avt> _equip_type_avt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontype_idChanging(short value);
    partial void Ontype_idChanged();
    partial void Onservice_everyChanging(float value);
    partial void Onservice_everyChanged();
    partial void Onwarning_withinChanging(float value);
    partial void Onwarning_withinChanged();
    #endregion
		
		public service_due_parm()
		{
			this._equip_type_avt = default(EntityRef<equip_type_avt>);
			OnCreated();
		}
		
		[Column(Storage="_type_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._equip_type_avt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[Column(Storage="_service_every", DbType="Real")]
		public float service_every
		{
			get
			{
				return this._service_every;
			}
			set
			{
				if ((this._service_every != value))
				{
					this.Onservice_everyChanging(value);
					this.SendPropertyChanging();
					this._service_every = value;
					this.SendPropertyChanged("service_every");
					this.Onservice_everyChanged();
				}
			}
		}
		
		[Column(Storage="_warning_within", DbType="Real")]
		public float warning_within
		{
			get
			{
				return this._warning_within;
			}
			set
			{
				if ((this._warning_within != value))
				{
					this.Onwarning_withinChanging(value);
					this.SendPropertyChanging();
					this._warning_within = value;
					this.SendPropertyChanged("warning_within");
					this.Onwarning_withinChanged();
				}
			}
		}
		
		[Association(Name="equip_type_avt_service_due_parm", Storage="_equip_type_avt", ThisKey="type_id", OtherKey="type_id", IsForeignKey=true)]
		public equip_type_avt equip_type_avt
		{
			get
			{
				return this._equip_type_avt.Entity;
			}
			set
			{
				equip_type_avt previousValue = this._equip_type_avt.Entity;
				if (((previousValue != value) 
							|| (this._equip_type_avt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._equip_type_avt.Entity = null;
						previousValue.service_due_parms.Remove(this);
					}
					this._equip_type_avt.Entity = value;
					if ((value != null))
					{
						value.service_due_parms.Add(this);
						this._type_id = value.type_id;
					}
					else
					{
						this._type_id = default(short);
					}
					this.SendPropertyChanged("equip_type_avt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.equip_loc_avt")]
	public partial class equip_loc_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _equip_loc;
		
		private string _division;
		
		private int _loc_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onequip_locChanging(string value);
    partial void Onequip_locChanged();
    partial void OndivisionChanging(string value);
    partial void OndivisionChanged();
    partial void Onloc_idChanging(int value);
    partial void Onloc_idChanged();
    #endregion
		
		public equip_loc_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_equip_loc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string equip_loc
		{
			get
			{
				return this._equip_loc;
			}
			set
			{
				if ((this._equip_loc != value))
				{
					this.Onequip_locChanging(value);
					this.SendPropertyChanging();
					this._equip_loc = value;
					this.SendPropertyChanged("equip_loc");
					this.Onequip_locChanged();
				}
			}
		}
		
		[Column(Storage="_division", DbType="NVarChar(50)")]
		public string division
		{
			get
			{
				return this._division;
			}
			set
			{
				if ((this._division != value))
				{
					this.OndivisionChanging(value);
					this.SendPropertyChanging();
					this._division = value;
					this.SendPropertyChanged("division");
					this.OndivisionChanged();
				}
			}
		}
		
		[Column(Storage="_loc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int loc_id
		{
			get
			{
				return this._loc_id;
			}
			set
			{
				if ((this._loc_id != value))
				{
					this.Onloc_idChanging(value);
					this.SendPropertyChanging();
					this._loc_id = value;
					this.SendPropertyChanged("loc_id");
					this.Onloc_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tools_serv")]
	public partial class tools_serv : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _service_id;
		
		private string _tool_id;
		
		private System.Nullable<System.DateTime> _service_dt;
		
		private System.Nullable<short> _serv_perf_id;
		
		private string _mechanic;
		
		private System.Nullable<decimal> _labor_cost;
		
		private System.Nullable<decimal> _parts_cost;
		
		private string _serv_reqstd;
		
		private string _serv_perf_descr;
		
		private string _parts_reqrd;
		
		private string _comments;
		
		private EntityRef<tools_serv_avt> _tools_serv_avt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Ontool_idChanging(string value);
    partial void Ontool_idChanged();
    partial void Onservice_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onservice_dtChanged();
    partial void Onserv_perf_idChanging(System.Nullable<short> value);
    partial void Onserv_perf_idChanged();
    partial void OnmechanicChanging(string value);
    partial void OnmechanicChanged();
    partial void Onlabor_costChanging(System.Nullable<decimal> value);
    partial void Onlabor_costChanged();
    partial void Onparts_costChanging(System.Nullable<decimal> value);
    partial void Onparts_costChanged();
    partial void Onserv_reqstdChanging(string value);
    partial void Onserv_reqstdChanged();
    partial void Onserv_perf_descrChanging(string value);
    partial void Onserv_perf_descrChanged();
    partial void Onparts_reqrdChanging(string value);
    partial void Onparts_reqrdChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public tools_serv()
		{
			this._tools_serv_avt = default(EntityRef<tools_serv_avt>);
			OnCreated();
		}
		
		[Column(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[Column(Storage="_tool_id", DbType="NVarChar(15)")]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this.Ontool_idChanging(value);
					this.SendPropertyChanging();
					this._tool_id = value;
					this.SendPropertyChanged("tool_id");
					this.Ontool_idChanged();
				}
			}
		}
		
		[Column(Storage="_service_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> service_dt
		{
			get
			{
				return this._service_dt;
			}
			set
			{
				if ((this._service_dt != value))
				{
					this.Onservice_dtChanging(value);
					this.SendPropertyChanging();
					this._service_dt = value;
					this.SendPropertyChanged("service_dt");
					this.Onservice_dtChanged();
				}
			}
		}
		
		[Column(Storage="_serv_perf_id", DbType="SmallInt")]
		public System.Nullable<short> serv_perf_id
		{
			get
			{
				return this._serv_perf_id;
			}
			set
			{
				if ((this._serv_perf_id != value))
				{
					if (this._tools_serv_avt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onserv_perf_idChanging(value);
					this.SendPropertyChanging();
					this._serv_perf_id = value;
					this.SendPropertyChanged("serv_perf_id");
					this.Onserv_perf_idChanged();
				}
			}
		}
		
		[Column(Storage="_mechanic", DbType="NVarChar(25)")]
		public string mechanic
		{
			get
			{
				return this._mechanic;
			}
			set
			{
				if ((this._mechanic != value))
				{
					this.OnmechanicChanging(value);
					this.SendPropertyChanging();
					this._mechanic = value;
					this.SendPropertyChanged("mechanic");
					this.OnmechanicChanged();
				}
			}
		}
		
		[Column(Storage="_labor_cost", DbType="Money")]
		public System.Nullable<decimal> labor_cost
		{
			get
			{
				return this._labor_cost;
			}
			set
			{
				if ((this._labor_cost != value))
				{
					this.Onlabor_costChanging(value);
					this.SendPropertyChanging();
					this._labor_cost = value;
					this.SendPropertyChanged("labor_cost");
					this.Onlabor_costChanged();
				}
			}
		}
		
		[Column(Storage="_parts_cost", DbType="Money")]
		public System.Nullable<decimal> parts_cost
		{
			get
			{
				return this._parts_cost;
			}
			set
			{
				if ((this._parts_cost != value))
				{
					this.Onparts_costChanging(value);
					this.SendPropertyChanging();
					this._parts_cost = value;
					this.SendPropertyChanged("parts_cost");
					this.Onparts_costChanged();
				}
			}
		}
		
		[Column(Storage="_serv_reqstd", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string serv_reqstd
		{
			get
			{
				return this._serv_reqstd;
			}
			set
			{
				if ((this._serv_reqstd != value))
				{
					this.Onserv_reqstdChanging(value);
					this.SendPropertyChanging();
					this._serv_reqstd = value;
					this.SendPropertyChanged("serv_reqstd");
					this.Onserv_reqstdChanged();
				}
			}
		}
		
		[Column(Storage="_serv_perf_descr", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string serv_perf_descr
		{
			get
			{
				return this._serv_perf_descr;
			}
			set
			{
				if ((this._serv_perf_descr != value))
				{
					this.Onserv_perf_descrChanging(value);
					this.SendPropertyChanging();
					this._serv_perf_descr = value;
					this.SendPropertyChanged("serv_perf_descr");
					this.Onserv_perf_descrChanged();
				}
			}
		}
		
		[Column(Storage="_parts_reqrd", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string parts_reqrd
		{
			get
			{
				return this._parts_reqrd;
			}
			set
			{
				if ((this._parts_reqrd != value))
				{
					this.Onparts_reqrdChanging(value);
					this.SendPropertyChanging();
					this._parts_reqrd = value;
					this.SendPropertyChanged("parts_reqrd");
					this.Onparts_reqrdChanged();
				}
			}
		}
		
		[Column(Storage="_comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[Association(Name="tools_serv_avt_tools_serv", Storage="_tools_serv_avt", ThisKey="serv_perf_id", OtherKey="tool_serv_id", IsForeignKey=true)]
		public tools_serv_avt tools_serv_avt
		{
			get
			{
				return this._tools_serv_avt.Entity;
			}
			set
			{
				tools_serv_avt previousValue = this._tools_serv_avt.Entity;
				if (((previousValue != value) 
							|| (this._tools_serv_avt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tools_serv_avt.Entity = null;
						previousValue.tools_servs.Remove(this);
					}
					this._tools_serv_avt.Entity = value;
					if ((value != null))
					{
						value.tools_servs.Add(this);
						this._serv_perf_id = value.tool_serv_id;
					}
					else
					{
						this._serv_perf_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("tools_serv_avt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tools_serv_avt")]
	public partial class tools_serv_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _tool_serv_id;
		
		private string _too_serv_descr;
		
		private EntitySet<tools_serv> _tools_servs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontool_serv_idChanging(short value);
    partial void Ontool_serv_idChanged();
    partial void Ontoo_serv_descrChanging(string value);
    partial void Ontoo_serv_descrChanged();
    #endregion
		
		public tools_serv_avt()
		{
			this._tools_servs = new EntitySet<tools_serv>(new Action<tools_serv>(this.attach_tools_servs), new Action<tools_serv>(this.detach_tools_servs));
			OnCreated();
		}
		
		[Column(Storage="_tool_serv_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short tool_serv_id
		{
			get
			{
				return this._tool_serv_id;
			}
			set
			{
				if ((this._tool_serv_id != value))
				{
					this.Ontool_serv_idChanging(value);
					this.SendPropertyChanging();
					this._tool_serv_id = value;
					this.SendPropertyChanged("tool_serv_id");
					this.Ontool_serv_idChanged();
				}
			}
		}
		
		[Column(Storage="_too_serv_descr", DbType="NVarChar(25)")]
		public string too_serv_descr
		{
			get
			{
				return this._too_serv_descr;
			}
			set
			{
				if ((this._too_serv_descr != value))
				{
					this.Ontoo_serv_descrChanging(value);
					this.SendPropertyChanging();
					this._too_serv_descr = value;
					this.SendPropertyChanged("too_serv_descr");
					this.Ontoo_serv_descrChanged();
				}
			}
		}
		
		[Association(Name="tools_serv_avt_tools_serv", Storage="_tools_servs", ThisKey="tool_serv_id", OtherKey="serv_perf_id")]
		public EntitySet<tools_serv> tools_servs
		{
			get
			{
				return this._tools_servs;
			}
			set
			{
				this._tools_servs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tools_servs(tools_serv entity)
		{
			this.SendPropertyChanging();
			entity.tools_serv_avt = this;
		}
		
		private void detach_tools_servs(tools_serv entity)
		{
			this.SendPropertyChanging();
			entity.tools_serv_avt = null;
		}
	}
	
	[Table(Name="dbo.services")]
	public partial class service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _service_id;
		
		private string _equip_id;
		
		private System.DateTime _service_dt;
		
		private short _serv_perf_id;
		
		private string _mechanic;
		
		private System.Nullable<decimal> _labor_cost;
		
		private System.Nullable<decimal> _parts_cost;
		
		private System.Nullable<decimal> _total_cost;
		
		private System.Nullable<float> _mileage;
		
		private System.Nullable<float> _hours;
		
		private string _serv_reqstd;
		
		private string _serv_perf_descr;
		
		private string _parts_reqrd;
		
		private string _comments;
		
		private EntityRef<services_avt> _services_avt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Onequip_idChanging(string value);
    partial void Onequip_idChanged();
    partial void Onservice_dtChanging(System.DateTime value);
    partial void Onservice_dtChanged();
    partial void Onserv_perf_idChanging(short value);
    partial void Onserv_perf_idChanged();
    partial void OnmechanicChanging(string value);
    partial void OnmechanicChanged();
    partial void Onlabor_costChanging(System.Nullable<decimal> value);
    partial void Onlabor_costChanged();
    partial void Onparts_costChanging(System.Nullable<decimal> value);
    partial void Onparts_costChanged();
    partial void Ontotal_costChanging(System.Nullable<decimal> value);
    partial void Ontotal_costChanged();
    partial void OnmileageChanging(System.Nullable<float> value);
    partial void OnmileageChanged();
    partial void OnhoursChanging(System.Nullable<float> value);
    partial void OnhoursChanged();
    partial void Onserv_reqstdChanging(string value);
    partial void Onserv_reqstdChanged();
    partial void Onserv_perf_descrChanging(string value);
    partial void Onserv_perf_descrChanged();
    partial void Onparts_reqrdChanging(string value);
    partial void Onparts_reqrdChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public service()
		{
			this._services_avt = default(EntityRef<services_avt>);
			OnCreated();
		}
		
		[Column(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[Column(Storage="_equip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this.Onequip_idChanging(value);
					this.SendPropertyChanging();
					this._equip_id = value;
					this.SendPropertyChanged("equip_id");
					this.Onequip_idChanged();
				}
			}
		}
		
		[Column(Storage="_service_dt", DbType="DateTime NOT NULL")]
		public System.DateTime service_dt
		{
			get
			{
				return this._service_dt;
			}
			set
			{
				if ((this._service_dt != value))
				{
					this.Onservice_dtChanging(value);
					this.SendPropertyChanging();
					this._service_dt = value;
					this.SendPropertyChanged("service_dt");
					this.Onservice_dtChanged();
				}
			}
		}
		
		[Column(Storage="_serv_perf_id", DbType="SmallInt NOT NULL")]
		public short serv_perf_id
		{
			get
			{
				return this._serv_perf_id;
			}
			set
			{
				if ((this._serv_perf_id != value))
				{
					if (this._services_avt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onserv_perf_idChanging(value);
					this.SendPropertyChanging();
					this._serv_perf_id = value;
					this.SendPropertyChanged("serv_perf_id");
					this.Onserv_perf_idChanged();
				}
			}
		}
		
		[Column(Storage="_mechanic", DbType="NVarChar(25)")]
		public string mechanic
		{
			get
			{
				return this._mechanic;
			}
			set
			{
				if ((this._mechanic != value))
				{
					this.OnmechanicChanging(value);
					this.SendPropertyChanging();
					this._mechanic = value;
					this.SendPropertyChanged("mechanic");
					this.OnmechanicChanged();
				}
			}
		}
		
		[Column(Storage="_labor_cost", DbType="Money")]
		public System.Nullable<decimal> labor_cost
		{
			get
			{
				return this._labor_cost;
			}
			set
			{
				if ((this._labor_cost != value))
				{
					this.Onlabor_costChanging(value);
					this.SendPropertyChanging();
					this._labor_cost = value;
					this.SendPropertyChanged("labor_cost");
					this.Onlabor_costChanged();
				}
			}
		}
		
		[Column(Storage="_parts_cost", DbType="Money")]
		public System.Nullable<decimal> parts_cost
		{
			get
			{
				return this._parts_cost;
			}
			set
			{
				if ((this._parts_cost != value))
				{
					this.Onparts_costChanging(value);
					this.SendPropertyChanging();
					this._parts_cost = value;
					this.SendPropertyChanged("parts_cost");
					this.Onparts_costChanged();
				}
			}
		}
		
		[Column(Storage="_total_cost", DbType="Money")]
		public System.Nullable<decimal> total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this.Ontotal_costChanging(value);
					this.SendPropertyChanging();
					this._total_cost = value;
					this.SendPropertyChanged("total_cost");
					this.Ontotal_costChanged();
				}
			}
		}
		
		[Column(Storage="_mileage", DbType="Real")]
		public System.Nullable<float> mileage
		{
			get
			{
				return this._mileage;
			}
			set
			{
				if ((this._mileage != value))
				{
					this.OnmileageChanging(value);
					this.SendPropertyChanging();
					this._mileage = value;
					this.SendPropertyChanged("mileage");
					this.OnmileageChanged();
				}
			}
		}
		
		[Column(Storage="_hours", DbType="Real")]
		public System.Nullable<float> hours
		{
			get
			{
				return this._hours;
			}
			set
			{
				if ((this._hours != value))
				{
					this.OnhoursChanging(value);
					this.SendPropertyChanging();
					this._hours = value;
					this.SendPropertyChanged("hours");
					this.OnhoursChanged();
				}
			}
		}
		
		[Column(Storage="_serv_reqstd", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string serv_reqstd
		{
			get
			{
				return this._serv_reqstd;
			}
			set
			{
				if ((this._serv_reqstd != value))
				{
					this.Onserv_reqstdChanging(value);
					this.SendPropertyChanging();
					this._serv_reqstd = value;
					this.SendPropertyChanged("serv_reqstd");
					this.Onserv_reqstdChanged();
				}
			}
		}
		
		[Column(Storage="_serv_perf_descr", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string serv_perf_descr
		{
			get
			{
				return this._serv_perf_descr;
			}
			set
			{
				if ((this._serv_perf_descr != value))
				{
					this.Onserv_perf_descrChanging(value);
					this.SendPropertyChanging();
					this._serv_perf_descr = value;
					this.SendPropertyChanged("serv_perf_descr");
					this.Onserv_perf_descrChanged();
				}
			}
		}
		
		[Column(Storage="_parts_reqrd", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string parts_reqrd
		{
			get
			{
				return this._parts_reqrd;
			}
			set
			{
				if ((this._parts_reqrd != value))
				{
					this.Onparts_reqrdChanging(value);
					this.SendPropertyChanging();
					this._parts_reqrd = value;
					this.SendPropertyChanged("parts_reqrd");
					this.Onparts_reqrdChanged();
				}
			}
		}
		
		[Column(Storage="_comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[Association(Name="services_avt_service", Storage="_services_avt", ThisKey="serv_perf_id", OtherKey="serv_id", IsForeignKey=true)]
		public services_avt services_avt
		{
			get
			{
				return this._services_avt.Entity;
			}
			set
			{
				services_avt previousValue = this._services_avt.Entity;
				if (((previousValue != value) 
							|| (this._services_avt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._services_avt.Entity = null;
						previousValue.services.Remove(this);
					}
					this._services_avt.Entity = value;
					if ((value != null))
					{
						value.services.Add(this);
						this._serv_perf_id = value.serv_id;
					}
					else
					{
						this._serv_perf_id = default(short);
					}
					this.SendPropertyChanged("services_avt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.services_avt")]
	public partial class services_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _serv_id;
		
		private string _serv_descr;
		
		private EntitySet<service> _services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onserv_idChanging(short value);
    partial void Onserv_idChanged();
    partial void Onserv_descrChanging(string value);
    partial void Onserv_descrChanged();
    #endregion
		
		public services_avt()
		{
			this._services = new EntitySet<service>(new Action<service>(this.attach_services), new Action<service>(this.detach_services));
			OnCreated();
		}
		
		[Column(Storage="_serv_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short serv_id
		{
			get
			{
				return this._serv_id;
			}
			set
			{
				if ((this._serv_id != value))
				{
					this.Onserv_idChanging(value);
					this.SendPropertyChanging();
					this._serv_id = value;
					this.SendPropertyChanged("serv_id");
					this.Onserv_idChanged();
				}
			}
		}
		
		[Column(Storage="_serv_descr", DbType="NVarChar(20)")]
		public string serv_descr
		{
			get
			{
				return this._serv_descr;
			}
			set
			{
				if ((this._serv_descr != value))
				{
					this.Onserv_descrChanging(value);
					this.SendPropertyChanging();
					this._serv_descr = value;
					this.SendPropertyChanged("serv_descr");
					this.Onserv_descrChanged();
				}
			}
		}
		
		[Association(Name="services_avt_service", Storage="_services", ThisKey="serv_id", OtherKey="serv_perf_id")]
		public EntitySet<service> services
		{
			get
			{
				return this._services;
			}
			set
			{
				this._services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_services(service entity)
		{
			this.SendPropertyChanging();
			entity.services_avt = this;
		}
		
		private void detach_services(service entity)
		{
			this.SendPropertyChanging();
			entity.services_avt = null;
		}
	}
	
	[Table(Name="dbo.smalltools")]
	public partial class smalltool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stID;
		
		private string _item;
		
		private string _description;
		
		private string _size;
		
		private string _MFG;
		
		private string _Model;
		
		private string _SerNum;
		
		private string _ID;
		
		private System.Nullable<short> _ConditionId;
		
		private string _Reg_by;
		
		private string _Managed_by;
		
		private string _Assigned_to;
		
		private System.Nullable<System.DateTime> _Assigned_dt;
		
		private string _comment;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private System.Nullable<System.DateTime> _returned_dt;
		
		private string _inoutshop;
		
		private bool _pipeline;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstIDChanging(int value);
    partial void OnstIDChanged();
    partial void OnitemChanging(string value);
    partial void OnitemChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OnMFGChanging(string value);
    partial void OnMFGChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSerNumChanging(string value);
    partial void OnSerNumChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnConditionIdChanging(System.Nullable<short> value);
    partial void OnConditionIdChanged();
    partial void OnReg_byChanging(string value);
    partial void OnReg_byChanged();
    partial void OnManaged_byChanging(string value);
    partial void OnManaged_byChanged();
    partial void OnAssigned_toChanging(string value);
    partial void OnAssigned_toChanged();
    partial void OnAssigned_dtChanging(System.Nullable<System.DateTime> value);
    partial void OnAssigned_dtChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Onmanaged_by_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onmanaged_by_dtChanged();
    partial void Onreturned_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreturned_dtChanged();
    partial void OninoutshopChanging(string value);
    partial void OninoutshopChanged();
    partial void OnpipelineChanging(bool value);
    partial void OnpipelineChanged();
    #endregion
		
		public smalltool()
		{
			OnCreated();
		}
		
		[Column(Storage="_stID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stID
		{
			get
			{
				return this._stID;
			}
			set
			{
				if ((this._stID != value))
				{
					this.OnstIDChanging(value);
					this.SendPropertyChanging();
					this._stID = value;
					this.SendPropertyChanged("stID");
					this.OnstIDChanged();
				}
			}
		}
		
		[Column(Storage="_item", DbType="NVarChar(50)")]
		public string item
		{
			get
			{
				return this._item;
			}
			set
			{
				if ((this._item != value))
				{
					this.OnitemChanging(value);
					this.SendPropertyChanging();
					this._item = value;
					this.SendPropertyChanged("item");
					this.OnitemChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_size", DbType="NVarChar(50)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[Column(Storage="_MFG", DbType="NVarChar(50)")]
		public string MFG
		{
			get
			{
				return this._MFG;
			}
			set
			{
				if ((this._MFG != value))
				{
					this.OnMFGChanging(value);
					this.SendPropertyChanging();
					this._MFG = value;
					this.SendPropertyChanged("MFG");
					this.OnMFGChanged();
				}
			}
		}
		
		[Column(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[Column(Storage="_SerNum", DbType="NVarChar(50)")]
		public string SerNum
		{
			get
			{
				return this._SerNum;
			}
			set
			{
				if ((this._SerNum != value))
				{
					this.OnSerNumChanging(value);
					this.SendPropertyChanging();
					this._SerNum = value;
					this.SendPropertyChanged("SerNum");
					this.OnSerNumChanged();
				}
			}
		}
		
		[Column(Storage="_ID", DbType="NVarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ConditionId", DbType="SmallInt")]
		public System.Nullable<short> ConditionId
		{
			get
			{
				return this._ConditionId;
			}
			set
			{
				if ((this._ConditionId != value))
				{
					this.OnConditionIdChanging(value);
					this.SendPropertyChanging();
					this._ConditionId = value;
					this.SendPropertyChanged("ConditionId");
					this.OnConditionIdChanged();
				}
			}
		}
		
		[Column(Storage="_Reg_by", DbType="NVarChar(50)")]
		public string Reg_by
		{
			get
			{
				return this._Reg_by;
			}
			set
			{
				if ((this._Reg_by != value))
				{
					this.OnReg_byChanging(value);
					this.SendPropertyChanging();
					this._Reg_by = value;
					this.SendPropertyChanged("Reg_by");
					this.OnReg_byChanged();
				}
			}
		}
		
		[Column(Storage="_Managed_by", DbType="NVarChar(50)")]
		public string Managed_by
		{
			get
			{
				return this._Managed_by;
			}
			set
			{
				if ((this._Managed_by != value))
				{
					this.OnManaged_byChanging(value);
					this.SendPropertyChanging();
					this._Managed_by = value;
					this.SendPropertyChanged("Managed_by");
					this.OnManaged_byChanged();
				}
			}
		}
		
		[Column(Storage="_Assigned_to", DbType="NVarChar(50)")]
		public string Assigned_to
		{
			get
			{
				return this._Assigned_to;
			}
			set
			{
				if ((this._Assigned_to != value))
				{
					this.OnAssigned_toChanging(value);
					this.SendPropertyChanging();
					this._Assigned_to = value;
					this.SendPropertyChanged("Assigned_to");
					this.OnAssigned_toChanged();
				}
			}
		}
		
		[Column(Storage="_Assigned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Assigned_dt
		{
			get
			{
				return this._Assigned_dt;
			}
			set
			{
				if ((this._Assigned_dt != value))
				{
					this.OnAssigned_dtChanging(value);
					this.SendPropertyChanging();
					this._Assigned_dt = value;
					this.SendPropertyChanged("Assigned_dt");
					this.OnAssigned_dtChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this.Onmanaged_by_dtChanging(value);
					this.SendPropertyChanging();
					this._managed_by_dt = value;
					this.SendPropertyChanged("managed_by_dt");
					this.Onmanaged_by_dtChanged();
				}
			}
		}
		
		[Column(Storage="_returned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> returned_dt
		{
			get
			{
				return this._returned_dt;
			}
			set
			{
				if ((this._returned_dt != value))
				{
					this.Onreturned_dtChanging(value);
					this.SendPropertyChanging();
					this._returned_dt = value;
					this.SendPropertyChanged("returned_dt");
					this.Onreturned_dtChanged();
				}
			}
		}
		
		[Column(Storage="_inoutshop", DbType="NVarChar(3)")]
		public string inoutshop
		{
			get
			{
				return this._inoutshop;
			}
			set
			{
				if ((this._inoutshop != value))
				{
					this.OninoutshopChanging(value);
					this.SendPropertyChanging();
					this._inoutshop = value;
					this.SendPropertyChanged("inoutshop");
					this.OninoutshopChanged();
				}
			}
		}
		
		[Column(Storage="_pipeline", DbType="Bit NOT NULL")]
		public bool pipeline
		{
			get
			{
				return this._pipeline;
			}
			set
			{
				if ((this._pipeline != value))
				{
					this.OnpipelineChanging(value);
					this.SendPropertyChanging();
					this._pipeline = value;
					this.SendPropertyChanged("pipeline");
					this.OnpipelineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_SmallToolsGrid")]
	public partial class vw_SmallToolsGrid
	{
		
		private int _stID;
		
		private string _item;
		
		private string _description;
		
		private string _size;
		
		private string _MFG;
		
		private string _Model;
		
		private string _SerNum;
		
		private string _ID;
		
		private string _condition_descr;
		
		private string _Reg_by;
		
		private string _Managed_by;
		
		private string _Assigned_to;
		
		private System.Nullable<System.DateTime> _Assigned_dt;
		
		private string _comment;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private System.Nullable<System.DateTime> _returned_dt;
		
		private string _inoutshop;
		
		private string _small_tool_loan_color;
		
		private string _small_tool_assign_color;
		
		public vw_SmallToolsGrid()
		{
		}
		
		[Column(Storage="_stID", DbType="Int NOT NULL")]
		public int stID
		{
			get
			{
				return this._stID;
			}
			set
			{
				if ((this._stID != value))
				{
					this._stID = value;
				}
			}
		}
		
		[Column(Storage="_item", DbType="NVarChar(50)")]
		public string item
		{
			get
			{
				return this._item;
			}
			set
			{
				if ((this._item != value))
				{
					this._item = value;
				}
			}
		}
		
		[Column(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[Column(Storage="_size", DbType="NVarChar(50)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this._size = value;
				}
			}
		}
		
		[Column(Storage="_MFG", DbType="NVarChar(50)")]
		public string MFG
		{
			get
			{
				return this._MFG;
			}
			set
			{
				if ((this._MFG != value))
				{
					this._MFG = value;
				}
			}
		}
		
		[Column(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[Column(Storage="_SerNum", DbType="NVarChar(50)")]
		public string SerNum
		{
			get
			{
				return this._SerNum;
			}
			set
			{
				if ((this._SerNum != value))
				{
					this._SerNum = value;
				}
			}
		}
		
		[Column(Storage="_ID", DbType="NVarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_condition_descr", DbType="NVarChar(15)")]
		public string condition_descr
		{
			get
			{
				return this._condition_descr;
			}
			set
			{
				if ((this._condition_descr != value))
				{
					this._condition_descr = value;
				}
			}
		}
		
		[Column(Storage="_Reg_by", DbType="NVarChar(50)")]
		public string Reg_by
		{
			get
			{
				return this._Reg_by;
			}
			set
			{
				if ((this._Reg_by != value))
				{
					this._Reg_by = value;
				}
			}
		}
		
		[Column(Storage="_Managed_by", DbType="NVarChar(50)")]
		public string Managed_by
		{
			get
			{
				return this._Managed_by;
			}
			set
			{
				if ((this._Managed_by != value))
				{
					this._Managed_by = value;
				}
			}
		}
		
		[Column(Storage="_Assigned_to", DbType="NVarChar(50)")]
		public string Assigned_to
		{
			get
			{
				return this._Assigned_to;
			}
			set
			{
				if ((this._Assigned_to != value))
				{
					this._Assigned_to = value;
				}
			}
		}
		
		[Column(Storage="_Assigned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Assigned_dt
		{
			get
			{
				return this._Assigned_dt;
			}
			set
			{
				if ((this._Assigned_dt != value))
				{
					this._Assigned_dt = value;
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this._managed_by_dt = value;
				}
			}
		}
		
		[Column(Storage="_returned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> returned_dt
		{
			get
			{
				return this._returned_dt;
			}
			set
			{
				if ((this._returned_dt != value))
				{
					this._returned_dt = value;
				}
			}
		}
		
		[Column(Storage="_inoutshop", DbType="NVarChar(3)")]
		public string inoutshop
		{
			get
			{
				return this._inoutshop;
			}
			set
			{
				if ((this._inoutshop != value))
				{
					this._inoutshop = value;
				}
			}
		}
		
		[Column(Storage="_small_tool_loan_color", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string small_tool_loan_color
		{
			get
			{
				return this._small_tool_loan_color;
			}
			set
			{
				if ((this._small_tool_loan_color != value))
				{
					this._small_tool_loan_color = value;
				}
			}
		}
		
		[Column(Storage="_small_tool_assign_color", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string small_tool_assign_color
		{
			get
			{
				return this._small_tool_assign_color;
			}
			set
			{
				if ((this._small_tool_assign_color != value))
				{
					this._small_tool_assign_color = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tools_assign")]
	public partial class tools_assign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _assign_id;
		
		private string _tool_id;
		
		private string _assigned_to;
		
		private System.Nullable<System.DateTime> _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private System.Nullable<short> _asgn_condition_id;
		
		private System.Nullable<short> _ret_condition_id;
		
		private System.Nullable<System.DateTime> _lst_upd_dt;
		
		private string _comment_txt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onassign_idChanging(int value);
    partial void Onassign_idChanged();
    partial void Ontool_idChanging(string value);
    partial void Ontool_idChanged();
    partial void Onassigned_toChanging(string value);
    partial void Onassigned_toChanged();
    partial void Onassigned_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onassigned_dtChanged();
    partial void Onreturn_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreturn_dtChanged();
    partial void Onasgn_condition_idChanging(System.Nullable<short> value);
    partial void Onasgn_condition_idChanged();
    partial void Onret_condition_idChanging(System.Nullable<short> value);
    partial void Onret_condition_idChanged();
    partial void Onlst_upd_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onlst_upd_dtChanged();
    partial void Oncomment_txtChanging(string value);
    partial void Oncomment_txtChanged();
    #endregion
		
		public tools_assign()
		{
			OnCreated();
		}
		
		[Column(Storage="_assign_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this.Onassign_idChanging(value);
					this.SendPropertyChanging();
					this._assign_id = value;
					this.SendPropertyChanged("assign_id");
					this.Onassign_idChanged();
				}
			}
		}
		
		[Column(Storage="_tool_id", DbType="NVarChar(50)")]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this.Ontool_idChanging(value);
					this.SendPropertyChanging();
					this._tool_id = value;
					this.SendPropertyChanged("tool_id");
					this.Ontool_idChanged();
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50)")]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this.Onassigned_toChanging(value);
					this.SendPropertyChanging();
					this._assigned_to = value;
					this.SendPropertyChanged("assigned_to");
					this.Onassigned_toChanged();
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this.Onassigned_dtChanging(value);
					this.SendPropertyChanging();
					this._assigned_dt = value;
					this.SendPropertyChanged("assigned_dt");
					this.Onassigned_dtChanged();
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this.Onreturn_dtChanging(value);
					this.SendPropertyChanging();
					this._return_dt = value;
					this.SendPropertyChanged("return_dt");
					this.Onreturn_dtChanged();
				}
			}
		}
		
		[Column(Storage="_asgn_condition_id", DbType="SmallInt")]
		public System.Nullable<short> asgn_condition_id
		{
			get
			{
				return this._asgn_condition_id;
			}
			set
			{
				if ((this._asgn_condition_id != value))
				{
					this.Onasgn_condition_idChanging(value);
					this.SendPropertyChanging();
					this._asgn_condition_id = value;
					this.SendPropertyChanged("asgn_condition_id");
					this.Onasgn_condition_idChanged();
				}
			}
		}
		
		[Column(Storage="_ret_condition_id", DbType="SmallInt")]
		public System.Nullable<short> ret_condition_id
		{
			get
			{
				return this._ret_condition_id;
			}
			set
			{
				if ((this._ret_condition_id != value))
				{
					this.Onret_condition_idChanging(value);
					this.SendPropertyChanging();
					this._ret_condition_id = value;
					this.SendPropertyChanged("ret_condition_id");
					this.Onret_condition_idChanged();
				}
			}
		}
		
		[Column(Storage="_lst_upd_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> lst_upd_dt
		{
			get
			{
				return this._lst_upd_dt;
			}
			set
			{
				if ((this._lst_upd_dt != value))
				{
					this.Onlst_upd_dtChanging(value);
					this.SendPropertyChanging();
					this._lst_upd_dt = value;
					this.SendPropertyChanged("lst_upd_dt");
					this.Onlst_upd_dtChanged();
				}
			}
		}
		
		[Column(Storage="_comment_txt", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment_txt
		{
			get
			{
				return this._comment_txt;
			}
			set
			{
				if ((this._comment_txt != value))
				{
					this.Oncomment_txtChanging(value);
					this.SendPropertyChanging();
					this._comment_txt = value;
					this.SendPropertyChanged("comment_txt");
					this.Oncomment_txtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.assignments")]
	public partial class assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _assign_id;
		
		private string _equip_id;
		
		private string _assigned_to;
		
		private System.DateTime _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private System.Nullable<short> _asgn_condition_id;
		
		private System.Nullable<short> _ret_condition_id;
		
		private System.Nullable<System.DateTime> _lst_upd_dt;
		
		private string _comment_txt;
		
		private System.Nullable<float> _asgn_miles;
		
		private System.Nullable<float> _asgn_hours;
		
		private System.Nullable<float> _ret_miles;
		
		private System.Nullable<float> _ret_hours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onassign_idChanging(int value);
    partial void Onassign_idChanged();
    partial void Onequip_idChanging(string value);
    partial void Onequip_idChanged();
    partial void Onassigned_toChanging(string value);
    partial void Onassigned_toChanged();
    partial void Onassigned_dtChanging(System.DateTime value);
    partial void Onassigned_dtChanged();
    partial void Onreturn_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreturn_dtChanged();
    partial void Onasgn_condition_idChanging(System.Nullable<short> value);
    partial void Onasgn_condition_idChanged();
    partial void Onret_condition_idChanging(System.Nullable<short> value);
    partial void Onret_condition_idChanged();
    partial void Onlst_upd_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onlst_upd_dtChanged();
    partial void Oncomment_txtChanging(string value);
    partial void Oncomment_txtChanged();
    partial void Onasgn_milesChanging(System.Nullable<float> value);
    partial void Onasgn_milesChanged();
    partial void Onasgn_hoursChanging(System.Nullable<float> value);
    partial void Onasgn_hoursChanged();
    partial void Onret_milesChanging(System.Nullable<float> value);
    partial void Onret_milesChanged();
    partial void Onret_hoursChanging(System.Nullable<float> value);
    partial void Onret_hoursChanged();
    #endregion
		
		public assignment()
		{
			OnCreated();
		}
		
		[Column(Storage="_assign_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this.Onassign_idChanging(value);
					this.SendPropertyChanging();
					this._assign_id = value;
					this.SendPropertyChanged("assign_id");
					this.Onassign_idChanged();
				}
			}
		}
		
		[Column(Storage="_equip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this.Onequip_idChanging(value);
					this.SendPropertyChanging();
					this._equip_id = value;
					this.SendPropertyChanged("equip_id");
					this.Onequip_idChanged();
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this.Onassigned_toChanging(value);
					this.SendPropertyChanging();
					this._assigned_to = value;
					this.SendPropertyChanged("assigned_to");
					this.Onassigned_toChanged();
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime NOT NULL")]
		public System.DateTime assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this.Onassigned_dtChanging(value);
					this.SendPropertyChanging();
					this._assigned_dt = value;
					this.SendPropertyChanged("assigned_dt");
					this.Onassigned_dtChanged();
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this.Onreturn_dtChanging(value);
					this.SendPropertyChanging();
					this._return_dt = value;
					this.SendPropertyChanged("return_dt");
					this.Onreturn_dtChanged();
				}
			}
		}
		
		[Column(Storage="_asgn_condition_id", DbType="SmallInt")]
		public System.Nullable<short> asgn_condition_id
		{
			get
			{
				return this._asgn_condition_id;
			}
			set
			{
				if ((this._asgn_condition_id != value))
				{
					this.Onasgn_condition_idChanging(value);
					this.SendPropertyChanging();
					this._asgn_condition_id = value;
					this.SendPropertyChanged("asgn_condition_id");
					this.Onasgn_condition_idChanged();
				}
			}
		}
		
		[Column(Storage="_ret_condition_id", DbType="SmallInt")]
		public System.Nullable<short> ret_condition_id
		{
			get
			{
				return this._ret_condition_id;
			}
			set
			{
				if ((this._ret_condition_id != value))
				{
					this.Onret_condition_idChanging(value);
					this.SendPropertyChanging();
					this._ret_condition_id = value;
					this.SendPropertyChanged("ret_condition_id");
					this.Onret_condition_idChanged();
				}
			}
		}
		
		[Column(Storage="_lst_upd_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> lst_upd_dt
		{
			get
			{
				return this._lst_upd_dt;
			}
			set
			{
				if ((this._lst_upd_dt != value))
				{
					this.Onlst_upd_dtChanging(value);
					this.SendPropertyChanging();
					this._lst_upd_dt = value;
					this.SendPropertyChanged("lst_upd_dt");
					this.Onlst_upd_dtChanged();
				}
			}
		}
		
		[Column(Storage="_comment_txt", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment_txt
		{
			get
			{
				return this._comment_txt;
			}
			set
			{
				if ((this._comment_txt != value))
				{
					this.Oncomment_txtChanging(value);
					this.SendPropertyChanging();
					this._comment_txt = value;
					this.SendPropertyChanged("comment_txt");
					this.Oncomment_txtChanged();
				}
			}
		}
		
		[Column(Storage="_asgn_miles", DbType="Real")]
		public System.Nullable<float> asgn_miles
		{
			get
			{
				return this._asgn_miles;
			}
			set
			{
				if ((this._asgn_miles != value))
				{
					this.Onasgn_milesChanging(value);
					this.SendPropertyChanging();
					this._asgn_miles = value;
					this.SendPropertyChanged("asgn_miles");
					this.Onasgn_milesChanged();
				}
			}
		}
		
		[Column(Storage="_asgn_hours", DbType="Real")]
		public System.Nullable<float> asgn_hours
		{
			get
			{
				return this._asgn_hours;
			}
			set
			{
				if ((this._asgn_hours != value))
				{
					this.Onasgn_hoursChanging(value);
					this.SendPropertyChanging();
					this._asgn_hours = value;
					this.SendPropertyChanged("asgn_hours");
					this.Onasgn_hoursChanged();
				}
			}
		}
		
		[Column(Storage="_ret_miles", DbType="Real")]
		public System.Nullable<float> ret_miles
		{
			get
			{
				return this._ret_miles;
			}
			set
			{
				if ((this._ret_miles != value))
				{
					this.Onret_milesChanging(value);
					this.SendPropertyChanging();
					this._ret_miles = value;
					this.SendPropertyChanged("ret_miles");
					this.Onret_milesChanged();
				}
			}
		}
		
		[Column(Storage="_ret_hours", DbType="Real")]
		public System.Nullable<float> ret_hours
		{
			get
			{
				return this._ret_hours;
			}
			set
			{
				if ((this._ret_hours != value))
				{
					this.Onret_hoursChanging(value);
					this.SendPropertyChanging();
					this._ret_hours = value;
					this.SendPropertyChanged("ret_hours");
					this.Onret_hoursChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.assign_to")]
	public partial class assign_to : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _assign_to1;
		
		private bool _active_status;
		
		private string _work_loc;
		
		private int _assign_to_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onassign_to1Changing(string value);
    partial void Onassign_to1Changed();
    partial void Onactive_statusChanging(bool value);
    partial void Onactive_statusChanged();
    partial void Onwork_locChanging(string value);
    partial void Onwork_locChanged();
    partial void Onassign_to_idChanging(int value);
    partial void Onassign_to_idChanged();
    #endregion
		
		public assign_to()
		{
			OnCreated();
		}
		
		[Column(Name="assign_to", Storage="_assign_to1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string assign_to1
		{
			get
			{
				return this._assign_to1;
			}
			set
			{
				if ((this._assign_to1 != value))
				{
					this.Onassign_to1Changing(value);
					this.SendPropertyChanging();
					this._assign_to1 = value;
					this.SendPropertyChanged("assign_to1");
					this.Onassign_to1Changed();
				}
			}
		}
		
		[Column(Storage="_active_status", DbType="Bit NOT NULL")]
		public bool active_status
		{
			get
			{
				return this._active_status;
			}
			set
			{
				if ((this._active_status != value))
				{
					this.Onactive_statusChanging(value);
					this.SendPropertyChanging();
					this._active_status = value;
					this.SendPropertyChanged("active_status");
					this.Onactive_statusChanged();
				}
			}
		}
		
		[Column(Storage="_work_loc", DbType="NVarChar(20)")]
		public string work_loc
		{
			get
			{
				return this._work_loc;
			}
			set
			{
				if ((this._work_loc != value))
				{
					this.Onwork_locChanging(value);
					this.SendPropertyChanging();
					this._work_loc = value;
					this.SendPropertyChanged("work_loc");
					this.Onwork_locChanged();
				}
			}
		}
		
		[Column(Storage="_assign_to_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int assign_to_id
		{
			get
			{
				return this._assign_to_id;
			}
			set
			{
				if ((this._assign_to_id != value))
				{
					this.Onassign_to_idChanging(value);
					this.SendPropertyChanging();
					this._assign_to_id = value;
					this.SendPropertyChanged("assign_to_id");
					this.Onassign_to_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.default_div")]
	public partial class default_div : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private string _div;
		
		private System.Nullable<System.DateTime> _lst_log_on;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OndivChanging(string value);
    partial void OndivChanged();
    partial void Onlst_log_onChanging(System.Nullable<System.DateTime> value);
    partial void Onlst_log_onChanged();
    #endregion
		
		public default_div()
		{
			OnCreated();
		}
		
		[Column(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_div", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string div
		{
			get
			{
				return this._div;
			}
			set
			{
				if ((this._div != value))
				{
					this.OndivChanging(value);
					this.SendPropertyChanging();
					this._div = value;
					this.SendPropertyChanged("div");
					this.OndivChanged();
				}
			}
		}
		
		[Column(Storage="_lst_log_on", DbType="DateTime")]
		public System.Nullable<System.DateTime> lst_log_on
		{
			get
			{
				return this._lst_log_on;
			}
			set
			{
				if ((this._lst_log_on != value))
				{
					this.Onlst_log_onChanging(value);
					this.SendPropertyChanging();
					this._lst_log_on = value;
					this.SendPropertyChanged("lst_log_on");
					this.Onlst_log_onChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[Table(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[Table(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.svc_schedule_days")]
	public partial class svc_schedule_day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _svc_sched_dt;
		
		private bool _available;
		
		private int _tot_crews;
		
		private int _cur_svcs_sched;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsvc_sched_dtChanging(System.DateTime value);
    partial void Onsvc_sched_dtChanged();
    partial void OnavailableChanging(bool value);
    partial void OnavailableChanged();
    partial void Ontot_crewsChanging(int value);
    partial void Ontot_crewsChanged();
    partial void Oncur_svcs_schedChanging(int value);
    partial void Oncur_svcs_schedChanged();
    #endregion
		
		public svc_schedule_day()
		{
			OnCreated();
		}
		
		[Column(Storage="_svc_sched_dt", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime svc_sched_dt
		{
			get
			{
				return this._svc_sched_dt;
			}
			set
			{
				if ((this._svc_sched_dt != value))
				{
					this.Onsvc_sched_dtChanging(value);
					this.SendPropertyChanging();
					this._svc_sched_dt = value;
					this.SendPropertyChanged("svc_sched_dt");
					this.Onsvc_sched_dtChanged();
				}
			}
		}
		
		[Column(Storage="_available", DbType="Bit NOT NULL")]
		public bool available
		{
			get
			{
				return this._available;
			}
			set
			{
				if ((this._available != value))
				{
					this.OnavailableChanging(value);
					this.SendPropertyChanging();
					this._available = value;
					this.SendPropertyChanged("available");
					this.OnavailableChanged();
				}
			}
		}
		
		[Column(Storage="_tot_crews", DbType="Int NOT NULL")]
		public int tot_crews
		{
			get
			{
				return this._tot_crews;
			}
			set
			{
				if ((this._tot_crews != value))
				{
					this.Ontot_crewsChanging(value);
					this.SendPropertyChanging();
					this._tot_crews = value;
					this.SendPropertyChanged("tot_crews");
					this.Ontot_crewsChanged();
				}
			}
		}
		
		[Column(Storage="_cur_svcs_sched", DbType="Int NOT NULL")]
		public int cur_svcs_sched
		{
			get
			{
				return this._cur_svcs_sched;
			}
			set
			{
				if ((this._cur_svcs_sched != value))
				{
					this.Oncur_svcs_schedChanging(value);
					this.SendPropertyChanging();
					this._cur_svcs_sched = value;
					this.SendPropertyChanged("cur_svcs_sched");
					this.Oncur_svcs_schedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.svc_crews")]
	public partial class svc_crew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _crew_num;
		
		private int _svc_foreman_id;
		
		private EntityRef<svc_foreman> _svc_foreman;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncrew_numChanging(int value);
    partial void Oncrew_numChanged();
    partial void Onsvc_foreman_idChanging(int value);
    partial void Onsvc_foreman_idChanged();
    #endregion
		
		public svc_crew()
		{
			this._svc_foreman = default(EntityRef<svc_foreman>);
			OnCreated();
		}
		
		[Column(Storage="_crew_num", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int crew_num
		{
			get
			{
				return this._crew_num;
			}
			set
			{
				if ((this._crew_num != value))
				{
					this.Oncrew_numChanging(value);
					this.SendPropertyChanging();
					this._crew_num = value;
					this.SendPropertyChanged("crew_num");
					this.Oncrew_numChanged();
				}
			}
		}
		
		[Column(Storage="_svc_foreman_id", DbType="Int")]
		public int svc_foreman_id
		{
			get
			{
				return this._svc_foreman_id;
			}
			set
			{
				if ((this._svc_foreman_id != value))
				{
					if (this._svc_foreman.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsvc_foreman_idChanging(value);
					this.SendPropertyChanging();
					this._svc_foreman_id = value;
					this.SendPropertyChanged("svc_foreman_id");
					this.Onsvc_foreman_idChanged();
				}
			}
		}
		
		[Association(Name="svc_foreman_svc_crew", Storage="_svc_foreman", ThisKey="svc_foreman_id", OtherKey="svc_foreman_id", IsForeignKey=true)]
		public svc_foreman svc_foreman
		{
			get
			{
				return this._svc_foreman.Entity;
			}
			set
			{
				svc_foreman previousValue = this._svc_foreman.Entity;
				if (((previousValue != value) 
							|| (this._svc_foreman.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._svc_foreman.Entity = null;
						previousValue.svc_crews.Remove(this);
					}
					this._svc_foreman.Entity = value;
					if ((value != null))
					{
						value.svc_crews.Add(this);
						this._svc_foreman_id = value.svc_foreman_id;
					}
					else
					{
						this._svc_foreman_id = default(int);
					}
					this.SendPropertyChanged("svc_foreman");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.svc_foreman")]
	public partial class svc_foreman : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _svc_foreman_id;
		
		private string _svc_foreman_nm;
		
		private bool _active_flg;
		
		private EntitySet<svc_crew> _svc_crews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsvc_foreman_idChanging(int value);
    partial void Onsvc_foreman_idChanged();
    partial void Onsvc_foreman_nmChanging(string value);
    partial void Onsvc_foreman_nmChanged();
    partial void Onactive_flgChanging(bool value);
    partial void Onactive_flgChanged();
    #endregion
		
		public svc_foreman()
		{
			this._svc_crews = new EntitySet<svc_crew>(new Action<svc_crew>(this.attach_svc_crews), new Action<svc_crew>(this.detach_svc_crews));
			OnCreated();
		}
		
		[Column(Storage="_svc_foreman_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int svc_foreman_id
		{
			get
			{
				return this._svc_foreman_id;
			}
			set
			{
				if ((this._svc_foreman_id != value))
				{
					this.Onsvc_foreman_idChanging(value);
					this.SendPropertyChanging();
					this._svc_foreman_id = value;
					this.SendPropertyChanged("svc_foreman_id");
					this.Onsvc_foreman_idChanged();
				}
			}
		}
		
		[Column(Storage="_svc_foreman_nm", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string svc_foreman_nm
		{
			get
			{
				return this._svc_foreman_nm;
			}
			set
			{
				if ((this._svc_foreman_nm != value))
				{
					this.Onsvc_foreman_nmChanging(value);
					this.SendPropertyChanging();
					this._svc_foreman_nm = value;
					this.SendPropertyChanged("svc_foreman_nm");
					this.Onsvc_foreman_nmChanged();
				}
			}
		}
		
		[Column(Storage="_active_flg", DbType="Bit NOT NULL")]
		public bool active_flg
		{
			get
			{
				return this._active_flg;
			}
			set
			{
				if ((this._active_flg != value))
				{
					this.Onactive_flgChanging(value);
					this.SendPropertyChanging();
					this._active_flg = value;
					this.SendPropertyChanged("active_flg");
					this.Onactive_flgChanged();
				}
			}
		}
		
		[Association(Name="svc_foreman_svc_crew", Storage="_svc_crews", ThisKey="svc_foreman_id", OtherKey="svc_foreman_id")]
		public EntitySet<svc_crew> svc_crews
		{
			get
			{
				return this._svc_crews;
			}
			set
			{
				this._svc_crews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_svc_crews(svc_crew entity)
		{
			this.SendPropertyChanging();
			entity.svc_foreman = this;
		}
		
		private void detach_svc_crews(svc_crew entity)
		{
			this.SendPropertyChanging();
			entity.svc_foreman = null;
		}
	}
	
	[Table(Name="dbo.svc_appointments")]
	public partial class svc_appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _svc_id;
		
		private System.DateTime _svc_date;
		
		private string _last_name;
		
		private string _first_name;
		
		private string _street_address;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private string _home_phone;
		
		private string _other_phone;
		
		private string _email;
		
		private int _crew;
		
		private System.Nullable<bool> _reschedule;
		
		private string _comments;
		
		private int _foreman_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsvc_idChanging(int value);
    partial void Onsvc_idChanged();
    partial void Onsvc_dateChanging(System.DateTime value);
    partial void Onsvc_dateChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onstreet_addressChanging(string value);
    partial void Onstreet_addressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void Onhome_phoneChanging(string value);
    partial void Onhome_phoneChanged();
    partial void Onother_phoneChanging(string value);
    partial void Onother_phoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncrewChanging(int value);
    partial void OncrewChanged();
    partial void OnrescheduleChanging(System.Nullable<bool> value);
    partial void OnrescheduleChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void Onforeman_idChanging(int value);
    partial void Onforeman_idChanged();
    #endregion
		
		public svc_appointment()
		{
			OnCreated();
		}
		
		[Column(Storage="_svc_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int svc_id
		{
			get
			{
				return this._svc_id;
			}
			set
			{
				if ((this._svc_id != value))
				{
					this.Onsvc_idChanging(value);
					this.SendPropertyChanging();
					this._svc_id = value;
					this.SendPropertyChanged("svc_id");
					this.Onsvc_idChanged();
				}
			}
		}
		
		[Column(Storage="_svc_date", DbType="DateTime NOT NULL")]
		public System.DateTime svc_date
		{
			get
			{
				return this._svc_date;
			}
			set
			{
				if ((this._svc_date != value))
				{
					this.Onsvc_dateChanging(value);
					this.SendPropertyChanging();
					this._svc_date = value;
					this.SendPropertyChanged("svc_date");
					this.Onsvc_dateChanged();
				}
			}
		}
		
		[Column(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[Column(Storage="_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[Column(Storage="_street_address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string street_address
		{
			get
			{
				return this._street_address;
			}
			set
			{
				if ((this._street_address != value))
				{
					this.Onstreet_addressChanging(value);
					this.SendPropertyChanging();
					this._street_address = value;
					this.SendPropertyChanged("street_address");
					this.Onstreet_addressChanged();
				}
			}
		}
		
		[Column(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[Column(Storage="_zip", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[Column(Storage="_home_phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string home_phone
		{
			get
			{
				return this._home_phone;
			}
			set
			{
				if ((this._home_phone != value))
				{
					this.Onhome_phoneChanging(value);
					this.SendPropertyChanging();
					this._home_phone = value;
					this.SendPropertyChanged("home_phone");
					this.Onhome_phoneChanged();
				}
			}
		}
		
		[Column(Storage="_other_phone", DbType="VarChar(20)")]
		public string other_phone
		{
			get
			{
				return this._other_phone;
			}
			set
			{
				if ((this._other_phone != value))
				{
					this.Onother_phoneChanging(value);
					this.SendPropertyChanging();
					this._other_phone = value;
					this.SendPropertyChanged("other_phone");
					this.Onother_phoneChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_crew", DbType="Int NOT NULL")]
		public int crew
		{
			get
			{
				return this._crew;
			}
			set
			{
				if ((this._crew != value))
				{
					this.OncrewChanging(value);
					this.SendPropertyChanging();
					this._crew = value;
					this.SendPropertyChanged("crew");
					this.OncrewChanged();
				}
			}
		}
		
		[Column(Storage="_reschedule", DbType="Bit")]
		public System.Nullable<bool> reschedule
		{
			get
			{
				return this._reschedule;
			}
			set
			{
				if ((this._reschedule != value))
				{
					this.OnrescheduleChanging(value);
					this.SendPropertyChanging();
					this._reschedule = value;
					this.SendPropertyChanged("reschedule");
					this.OnrescheduleChanged();
				}
			}
		}
		
		[Column(Storage="_comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[Column(Storage="_foreman_id", DbType="Int")]
		public int foreman_id
		{
			get
			{
				return this._foreman_id;
			}
			set
			{
				if ((this._foreman_id != value))
				{
					this.Onforeman_idChanging(value);
					this.SendPropertyChanging();
					this._foreman_id = value;
					this.SendPropertyChanged("foreman_id");
					this.Onforeman_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.equip_edit_log")]
	public partial class equip_edit_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private System.DateTime _edit_dt;
		
		private string _edit_change;
		
		private int _log_id;
		
		private string _equip_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void Onedit_dtChanging(System.DateTime value);
    partial void Onedit_dtChanged();
    partial void Onedit_changeChanging(string value);
    partial void Onedit_changeChanged();
    partial void Onlog_idChanging(int value);
    partial void Onlog_idChanged();
    partial void Onequip_idChanging(string value);
    partial void Onequip_idChanged();
    #endregion
		
		public equip_edit_log()
		{
			OnCreated();
		}
		
		[Column(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_edit_dt", DbType="DateTime NOT NULL")]
		public System.DateTime edit_dt
		{
			get
			{
				return this._edit_dt;
			}
			set
			{
				if ((this._edit_dt != value))
				{
					this.Onedit_dtChanging(value);
					this.SendPropertyChanging();
					this._edit_dt = value;
					this.SendPropertyChanged("edit_dt");
					this.Onedit_dtChanged();
				}
			}
		}
		
		[Column(Storage="_edit_change", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string edit_change
		{
			get
			{
				return this._edit_change;
			}
			set
			{
				if ((this._edit_change != value))
				{
					this.Onedit_changeChanging(value);
					this.SendPropertyChanging();
					this._edit_change = value;
					this.SendPropertyChanged("edit_change");
					this.Onedit_changeChanged();
				}
			}
		}
		
		[Column(Storage="_log_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int log_id
		{
			get
			{
				return this._log_id;
			}
			set
			{
				if ((this._log_id != value))
				{
					this.Onlog_idChanging(value);
					this.SendPropertyChanging();
					this._log_id = value;
					this.SendPropertyChanged("log_id");
					this.Onlog_idChanged();
				}
			}
		}
		
		[Column(Storage="_equip_id", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this.Onequip_idChanging(value);
					this.SendPropertyChanging();
					this._equip_id = value;
					this.SendPropertyChanged("equip_id");
					this.Onequip_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tool_edit_log")]
	public partial class tool_edit_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private System.DateTime _edit_dt;
		
		private string _edit_change;
		
		private int _log_id;
		
		private string _tool_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void Onedit_dtChanging(System.DateTime value);
    partial void Onedit_dtChanged();
    partial void Onedit_changeChanging(string value);
    partial void Onedit_changeChanged();
    partial void Onlog_idChanging(int value);
    partial void Onlog_idChanged();
    partial void Ontool_idChanging(string value);
    partial void Ontool_idChanged();
    #endregion
		
		public tool_edit_log()
		{
			OnCreated();
		}
		
		[Column(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_edit_dt", DbType="DateTime NOT NULL")]
		public System.DateTime edit_dt
		{
			get
			{
				return this._edit_dt;
			}
			set
			{
				if ((this._edit_dt != value))
				{
					this.Onedit_dtChanging(value);
					this.SendPropertyChanging();
					this._edit_dt = value;
					this.SendPropertyChanged("edit_dt");
					this.Onedit_dtChanged();
				}
			}
		}
		
		[Column(Storage="_edit_change", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string edit_change
		{
			get
			{
				return this._edit_change;
			}
			set
			{
				if ((this._edit_change != value))
				{
					this.Onedit_changeChanging(value);
					this.SendPropertyChanging();
					this._edit_change = value;
					this.SendPropertyChanged("edit_change");
					this.Onedit_changeChanged();
				}
			}
		}
		
		[Column(Storage="_log_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int log_id
		{
			get
			{
				return this._log_id;
			}
			set
			{
				if ((this._log_id != value))
				{
					this.Onlog_idChanging(value);
					this.SendPropertyChanging();
					this._log_id = value;
					this.SendPropertyChanged("log_id");
					this.Onlog_idChanged();
				}
			}
		}
		
		[Column(Storage="_tool_id", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this.Ontool_idChanging(value);
					this.SendPropertyChanging();
					this._tool_id = value;
					this.SendPropertyChanged("tool_id");
					this.Ontool_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.help_msgs")]
	public partial class help_msg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _help_id;
		
		private string _help_msg1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhelp_idChanging(string value);
    partial void Onhelp_idChanged();
    partial void Onhelp_msg1Changing(string value);
    partial void Onhelp_msg1Changed();
    #endregion
		
		public help_msg()
		{
			OnCreated();
		}
		
		[Column(Storage="_help_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string help_id
		{
			get
			{
				return this._help_id;
			}
			set
			{
				if ((this._help_id != value))
				{
					this.Onhelp_idChanging(value);
					this.SendPropertyChanging();
					this._help_id = value;
					this.SendPropertyChanged("help_id");
					this.Onhelp_idChanged();
				}
			}
		}
		
		[Column(Name="help_msg", Storage="_help_msg1", DbType="VarChar(MAX)")]
		public string help_msg1
		{
			get
			{
				return this._help_msg1;
			}
			set
			{
				if ((this._help_msg1 != value))
				{
					this.Onhelp_msg1Changing(value);
					this.SendPropertyChanging();
					this._help_msg1 = value;
					this.SendPropertyChanged("help_msg1");
					this.Onhelp_msg1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_EquipAssignGrid")]
	public partial class vw_EquipAssignGrid
	{
		
		private string _equip_id;
		
		private string _assigned_to;
		
		private System.DateTime _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private string _asgn_cond_descr;
		
		private string _ret_cond_descr;
		
		private string _comment_txt;
		
		private System.Nullable<float> _asgn_miles;
		
		private System.Nullable<float> _asgn_hours;
		
		private System.Nullable<float> _ret_miles;
		
		private System.Nullable<float> _ret_hours;
		
		private int _assign_id;
		
		private System.Nullable<int> _img_cnt;
		
		public vw_EquipAssignGrid()
		{
		}
		
		[Column(Storage="_equip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this._equip_id = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime NOT NULL")]
		public System.DateTime assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this._assigned_dt = value;
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this._return_dt = value;
				}
			}
		}
		
		[Column(Storage="_asgn_cond_descr", DbType="NVarChar(15)")]
		public string asgn_cond_descr
		{
			get
			{
				return this._asgn_cond_descr;
			}
			set
			{
				if ((this._asgn_cond_descr != value))
				{
					this._asgn_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_ret_cond_descr", DbType="NVarChar(15)")]
		public string ret_cond_descr
		{
			get
			{
				return this._ret_cond_descr;
			}
			set
			{
				if ((this._ret_cond_descr != value))
				{
					this._ret_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_comment_txt", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment_txt
		{
			get
			{
				return this._comment_txt;
			}
			set
			{
				if ((this._comment_txt != value))
				{
					this._comment_txt = value;
				}
			}
		}
		
		[Column(Storage="_asgn_miles", DbType="Real")]
		public System.Nullable<float> asgn_miles
		{
			get
			{
				return this._asgn_miles;
			}
			set
			{
				if ((this._asgn_miles != value))
				{
					this._asgn_miles = value;
				}
			}
		}
		
		[Column(Storage="_asgn_hours", DbType="Real")]
		public System.Nullable<float> asgn_hours
		{
			get
			{
				return this._asgn_hours;
			}
			set
			{
				if ((this._asgn_hours != value))
				{
					this._asgn_hours = value;
				}
			}
		}
		
		[Column(Storage="_ret_miles", DbType="Real")]
		public System.Nullable<float> ret_miles
		{
			get
			{
				return this._ret_miles;
			}
			set
			{
				if ((this._ret_miles != value))
				{
					this._ret_miles = value;
				}
			}
		}
		
		[Column(Storage="_ret_hours", DbType="Real")]
		public System.Nullable<float> ret_hours
		{
			get
			{
				return this._ret_hours;
			}
			set
			{
				if ((this._ret_hours != value))
				{
					this._ret_hours = value;
				}
			}
		}
		
		[Column(Storage="_assign_id", DbType="Int NOT NULL")]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this._assign_id = value;
				}
			}
		}
		
		[Column(Storage="_img_cnt", DbType="Int")]
		public System.Nullable<int> img_cnt
		{
			get
			{
				return this._img_cnt;
			}
			set
			{
				if ((this._img_cnt != value))
				{
					this._img_cnt = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_ToolsAssignGrid")]
	public partial class vw_ToolsAssignGrid
	{
		
		private string _tool_id;
		
		private string _assigned_to;
		
		private System.Nullable<System.DateTime> _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private string _asgn_cond_descr;
		
		private string _ret_cond_descr;
		
		private string _comment_txt;
		
		private int _assign_id;
		
		private System.Nullable<int> _img_cnt;
		
		public vw_ToolsAssignGrid()
		{
		}
		
		[Column(Storage="_tool_id", DbType="NVarChar(50)")]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this._tool_id = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50)")]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this._assigned_dt = value;
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this._return_dt = value;
				}
			}
		}
		
		[Column(Storage="_asgn_cond_descr", DbType="NVarChar(15)")]
		public string asgn_cond_descr
		{
			get
			{
				return this._asgn_cond_descr;
			}
			set
			{
				if ((this._asgn_cond_descr != value))
				{
					this._asgn_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_ret_cond_descr", DbType="NVarChar(15)")]
		public string ret_cond_descr
		{
			get
			{
				return this._ret_cond_descr;
			}
			set
			{
				if ((this._ret_cond_descr != value))
				{
					this._ret_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_comment_txt", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment_txt
		{
			get
			{
				return this._comment_txt;
			}
			set
			{
				if ((this._comment_txt != value))
				{
					this._comment_txt = value;
				}
			}
		}
		
		[Column(Storage="_assign_id", DbType="Int NOT NULL")]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this._assign_id = value;
				}
			}
		}
		
		[Column(Storage="_img_cnt", DbType="Int")]
		public System.Nullable<int> img_cnt
		{
			get
			{
				return this._img_cnt;
			}
			set
			{
				if ((this._img_cnt != value))
				{
					this._img_cnt = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.svc_contact")]
	public partial class svc_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contact_id;
		
		private string _contact_name;
		
		private string _contact_number;
		
		private string _contact_email;
		
		private string _notify1_email;
		
		private string _notify2_email;
		
		private string _notify3_email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void Oncontact_nameChanging(string value);
    partial void Oncontact_nameChanged();
    partial void Oncontact_numberChanging(string value);
    partial void Oncontact_numberChanged();
    partial void Oncontact_emailChanging(string value);
    partial void Oncontact_emailChanged();
    partial void Onnotify1_emailChanging(string value);
    partial void Onnotify1_emailChanged();
    partial void Onnotify2_emailChanging(string value);
    partial void Onnotify2_emailChanged();
    partial void Onnotify3_emailChanging(string value);
    partial void Onnotify3_emailChanged();
    #endregion
		
		public svc_contact()
		{
			OnCreated();
		}
		
		[Column(Storage="_contact_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[Column(Storage="_contact_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contact_name
		{
			get
			{
				return this._contact_name;
			}
			set
			{
				if ((this._contact_name != value))
				{
					this.Oncontact_nameChanging(value);
					this.SendPropertyChanging();
					this._contact_name = value;
					this.SendPropertyChanged("contact_name");
					this.Oncontact_nameChanged();
				}
			}
		}
		
		[Column(Storage="_contact_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string contact_number
		{
			get
			{
				return this._contact_number;
			}
			set
			{
				if ((this._contact_number != value))
				{
					this.Oncontact_numberChanging(value);
					this.SendPropertyChanging();
					this._contact_number = value;
					this.SendPropertyChanged("contact_number");
					this.Oncontact_numberChanged();
				}
			}
		}
		
		[Column(Storage="_contact_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contact_email
		{
			get
			{
				return this._contact_email;
			}
			set
			{
				if ((this._contact_email != value))
				{
					this.Oncontact_emailChanging(value);
					this.SendPropertyChanging();
					this._contact_email = value;
					this.SendPropertyChanged("contact_email");
					this.Oncontact_emailChanged();
				}
			}
		}
		
		[Column(Storage="_notify1_email", DbType="VarChar(50)")]
		public string notify1_email
		{
			get
			{
				return this._notify1_email;
			}
			set
			{
				if ((this._notify1_email != value))
				{
					this.Onnotify1_emailChanging(value);
					this.SendPropertyChanging();
					this._notify1_email = value;
					this.SendPropertyChanged("notify1_email");
					this.Onnotify1_emailChanged();
				}
			}
		}
		
		[Column(Storage="_notify2_email", DbType="VarChar(50)")]
		public string notify2_email
		{
			get
			{
				return this._notify2_email;
			}
			set
			{
				if ((this._notify2_email != value))
				{
					this.Onnotify2_emailChanging(value);
					this.SendPropertyChanging();
					this._notify2_email = value;
					this.SendPropertyChanged("notify2_email");
					this.Onnotify2_emailChanged();
				}
			}
		}
		
		[Column(Storage="_notify3_email", DbType="VarChar(50)")]
		public string notify3_email
		{
			get
			{
				return this._notify3_email;
			}
			set
			{
				if ((this._notify3_email != value))
				{
					this.Onnotify3_emailChanging(value);
					this.SendPropertyChanging();
					this._notify3_email = value;
					this.SendPropertyChanged("notify3_email");
					this.Onnotify3_emailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.electronics_make_avt")]
	public partial class electronics_make_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _make_id;
		
		private string _make_desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmake_idChanging(short value);
    partial void Onmake_idChanged();
    partial void Onmake_descChanging(string value);
    partial void Onmake_descChanged();
    #endregion
		
		public electronics_make_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_make_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short make_id
		{
			get
			{
				return this._make_id;
			}
			set
			{
				if ((this._make_id != value))
				{
					this.Onmake_idChanging(value);
					this.SendPropertyChanging();
					this._make_id = value;
					this.SendPropertyChanged("make_id");
					this.Onmake_idChanged();
				}
			}
		}
		
		[Column(Storage="_make_desc", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string make_desc
		{
			get
			{
				return this._make_desc;
			}
			set
			{
				if ((this._make_desc != value))
				{
					this.Onmake_descChanging(value);
					this.SendPropertyChanging();
					this._make_desc = value;
					this.SendPropertyChanged("make_desc");
					this.Onmake_descChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.electronics_model_avt")]
	public partial class electronics_model_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _model_id;
		
		private string _model_desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmodel_idChanging(short value);
    partial void Onmodel_idChanged();
    partial void Onmodel_descChanging(string value);
    partial void Onmodel_descChanged();
    #endregion
		
		public electronics_model_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_model_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short model_id
		{
			get
			{
				return this._model_id;
			}
			set
			{
				if ((this._model_id != value))
				{
					this.Onmodel_idChanging(value);
					this.SendPropertyChanging();
					this._model_id = value;
					this.SendPropertyChanged("model_id");
					this.Onmodel_idChanged();
				}
			}
		}
		
		[Column(Storage="_model_desc", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string model_desc
		{
			get
			{
				return this._model_desc;
			}
			set
			{
				if ((this._model_desc != value))
				{
					this.Onmodel_descChanging(value);
					this.SendPropertyChanging();
					this._model_desc = value;
					this.SendPropertyChanged("model_desc");
					this.Onmodel_descChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.electronics_type_avt")]
	public partial class electronics_type_avt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _type_id;
		
		private string _type_desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontype_idChanging(short value);
    partial void Ontype_idChanged();
    partial void Ontype_descChanging(string value);
    partial void Ontype_descChanged();
    #endregion
		
		public electronics_type_avt()
		{
			OnCreated();
		}
		
		[Column(Storage="_type_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[Column(Storage="_type_desc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string type_desc
		{
			get
			{
				return this._type_desc;
			}
			set
			{
				if ((this._type_desc != value))
				{
					this.Ontype_descChanging(value);
					this.SendPropertyChanging();
					this._type_desc = value;
					this.SendPropertyChanged("type_desc");
					this.Ontype_descChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.electronics")]
	public partial class electronic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _electronics_id;
		
		private System.Nullable<short> _type_id;
		
		private System.Nullable<short> _make_id;
		
		private System.Nullable<short> _model_id;
		
		private string _serial_num;
		
		private string _air_card_num;
		
		private string _registered_by;
		
		private string _managed_by;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private bool _stolen;
		
		private bool _unknown;
		
		private bool _in_repair;
		
		private bool _totaled;
		
		private bool _assigned;
		
		private System.Nullable<float> _cost;
		
		private string _year_pur;
		
		private string _comment;
		
		private string _location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onelectronics_idChanging(string value);
    partial void Onelectronics_idChanged();
    partial void Ontype_idChanging(System.Nullable<short> value);
    partial void Ontype_idChanged();
    partial void Onmake_idChanging(System.Nullable<short> value);
    partial void Onmake_idChanged();
    partial void Onmodel_idChanging(System.Nullable<short> value);
    partial void Onmodel_idChanged();
    partial void Onserial_numChanging(string value);
    partial void Onserial_numChanged();
    partial void Onair_card_numChanging(string value);
    partial void Onair_card_numChanged();
    partial void Onregistered_byChanging(string value);
    partial void Onregistered_byChanged();
    partial void Onmanaged_byChanging(string value);
    partial void Onmanaged_byChanged();
    partial void Onmanaged_by_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onmanaged_by_dtChanged();
    partial void OnstolenChanging(bool value);
    partial void OnstolenChanged();
    partial void OnunknownChanging(bool value);
    partial void OnunknownChanged();
    partial void Onin_repairChanging(bool value);
    partial void Onin_repairChanged();
    partial void OntotaledChanging(bool value);
    partial void OntotaledChanged();
    partial void OnassignedChanging(bool value);
    partial void OnassignedChanged();
    partial void OncostChanging(System.Nullable<float> value);
    partial void OncostChanged();
    partial void Onyear_purChanging(string value);
    partial void Onyear_purChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public electronic()
		{
			OnCreated();
		}
		
		[Column(Storage="_electronics_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string electronics_id
		{
			get
			{
				return this._electronics_id;
			}
			set
			{
				if ((this._electronics_id != value))
				{
					this.Onelectronics_idChanging(value);
					this.SendPropertyChanging();
					this._electronics_id = value;
					this.SendPropertyChanged("electronics_id");
					this.Onelectronics_idChanged();
				}
			}
		}
		
		[Column(Storage="_type_id", DbType="SmallInt")]
		public System.Nullable<short> type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[Column(Storage="_make_id", DbType="SmallInt")]
		public System.Nullable<short> make_id
		{
			get
			{
				return this._make_id;
			}
			set
			{
				if ((this._make_id != value))
				{
					this.Onmake_idChanging(value);
					this.SendPropertyChanging();
					this._make_id = value;
					this.SendPropertyChanged("make_id");
					this.Onmake_idChanged();
				}
			}
		}
		
		[Column(Storage="_model_id", DbType="SmallInt")]
		public System.Nullable<short> model_id
		{
			get
			{
				return this._model_id;
			}
			set
			{
				if ((this._model_id != value))
				{
					this.Onmodel_idChanging(value);
					this.SendPropertyChanging();
					this._model_id = value;
					this.SendPropertyChanged("model_id");
					this.Onmodel_idChanged();
				}
			}
		}
		
		[Column(Storage="_serial_num", DbType="VarChar(50)")]
		public string serial_num
		{
			get
			{
				return this._serial_num;
			}
			set
			{
				if ((this._serial_num != value))
				{
					this.Onserial_numChanging(value);
					this.SendPropertyChanging();
					this._serial_num = value;
					this.SendPropertyChanged("serial_num");
					this.Onserial_numChanged();
				}
			}
		}
		
		[Column(Storage="_air_card_num", DbType="VarChar(50)")]
		public string air_card_num
		{
			get
			{
				return this._air_card_num;
			}
			set
			{
				if ((this._air_card_num != value))
				{
					this.Onair_card_numChanging(value);
					this.SendPropertyChanging();
					this._air_card_num = value;
					this.SendPropertyChanged("air_card_num");
					this.Onair_card_numChanged();
				}
			}
		}
		
		[Column(Storage="_registered_by", DbType="VarChar(50)")]
		public string registered_by
		{
			get
			{
				return this._registered_by;
			}
			set
			{
				if ((this._registered_by != value))
				{
					this.Onregistered_byChanging(value);
					this.SendPropertyChanging();
					this._registered_by = value;
					this.SendPropertyChanged("registered_by");
					this.Onregistered_byChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by", DbType="VarChar(50)")]
		public string managed_by
		{
			get
			{
				return this._managed_by;
			}
			set
			{
				if ((this._managed_by != value))
				{
					this.Onmanaged_byChanging(value);
					this.SendPropertyChanging();
					this._managed_by = value;
					this.SendPropertyChanged("managed_by");
					this.Onmanaged_byChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this.Onmanaged_by_dtChanging(value);
					this.SendPropertyChanging();
					this._managed_by_dt = value;
					this.SendPropertyChanged("managed_by_dt");
					this.Onmanaged_by_dtChanged();
				}
			}
		}
		
		[Column(Storage="_stolen", DbType="Bit NOT NULL")]
		public bool stolen
		{
			get
			{
				return this._stolen;
			}
			set
			{
				if ((this._stolen != value))
				{
					this.OnstolenChanging(value);
					this.SendPropertyChanging();
					this._stolen = value;
					this.SendPropertyChanged("stolen");
					this.OnstolenChanged();
				}
			}
		}
		
		[Column(Storage="_unknown", DbType="Bit NOT NULL")]
		public bool unknown
		{
			get
			{
				return this._unknown;
			}
			set
			{
				if ((this._unknown != value))
				{
					this.OnunknownChanging(value);
					this.SendPropertyChanging();
					this._unknown = value;
					this.SendPropertyChanged("unknown");
					this.OnunknownChanged();
				}
			}
		}
		
		[Column(Storage="_in_repair", DbType="Bit NOT NULL")]
		public bool in_repair
		{
			get
			{
				return this._in_repair;
			}
			set
			{
				if ((this._in_repair != value))
				{
					this.Onin_repairChanging(value);
					this.SendPropertyChanging();
					this._in_repair = value;
					this.SendPropertyChanged("in_repair");
					this.Onin_repairChanged();
				}
			}
		}
		
		[Column(Storage="_totaled", DbType="Bit NOT NULL")]
		public bool totaled
		{
			get
			{
				return this._totaled;
			}
			set
			{
				if ((this._totaled != value))
				{
					this.OntotaledChanging(value);
					this.SendPropertyChanging();
					this._totaled = value;
					this.SendPropertyChanged("totaled");
					this.OntotaledChanged();
				}
			}
		}
		
		[Column(Storage="_assigned", DbType="Bit NOT NULL")]
		public bool assigned
		{
			get
			{
				return this._assigned;
			}
			set
			{
				if ((this._assigned != value))
				{
					this.OnassignedChanging(value);
					this.SendPropertyChanging();
					this._assigned = value;
					this.SendPropertyChanged("assigned");
					this.OnassignedChanged();
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[Column(Storage="_year_pur", DbType="VarChar(4)")]
		public string year_pur
		{
			get
			{
				return this._year_pur;
			}
			set
			{
				if ((this._year_pur != value))
				{
					this.Onyear_purChanging(value);
					this.SendPropertyChanging();
					this._year_pur = value;
					this.SendPropertyChanged("year_pur");
					this.Onyear_purChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[Column(Storage="_location", DbType="VarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_ElectronicsGrid")]
	public partial class vw_ElectronicsGrid
	{
		
		private string _electronics_id;
		
		private string _type_desc;
		
		private string _make_desc;
		
		private string _model_desc;
		
		private string _serial_num;
		
		private string _air_card_num;
		
		private string _comment;
		
		private System.Nullable<float> _cost;
		
		private string _year_pur;
		
		private string _location;
		
		private string _registered_by;
		
		private string _managed_by;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private bool _stolen;
		
		private bool _unknown;
		
		private bool _in_repair;
		
		private bool _totaled;
		
		private string _electronics_loan_color;
		
		private string _electronics_assign_color;
		
		private System.Nullable<long> _rownum;
		
		public vw_ElectronicsGrid()
		{
		}
		
		[Column(Storage="_electronics_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string electronics_id
		{
			get
			{
				return this._electronics_id;
			}
			set
			{
				if ((this._electronics_id != value))
				{
					this._electronics_id = value;
				}
			}
		}
		
		[Column(Storage="_type_desc", DbType="VarChar(100)")]
		public string type_desc
		{
			get
			{
				return this._type_desc;
			}
			set
			{
				if ((this._type_desc != value))
				{
					this._type_desc = value;
				}
			}
		}
		
		[Column(Storage="_make_desc", DbType="VarChar(75)")]
		public string make_desc
		{
			get
			{
				return this._make_desc;
			}
			set
			{
				if ((this._make_desc != value))
				{
					this._make_desc = value;
				}
			}
		}
		
		[Column(Storage="_model_desc", DbType="VarChar(75)")]
		public string model_desc
		{
			get
			{
				return this._model_desc;
			}
			set
			{
				if ((this._model_desc != value))
				{
					this._model_desc = value;
				}
			}
		}
		
		[Column(Storage="_serial_num", DbType="VarChar(50)")]
		public string serial_num
		{
			get
			{
				return this._serial_num;
			}
			set
			{
				if ((this._serial_num != value))
				{
					this._serial_num = value;
				}
			}
		}
		
		[Column(Storage="_air_card_num", DbType="VarChar(50)")]
		public string air_card_num
		{
			get
			{
				return this._air_card_num;
			}
			set
			{
				if ((this._air_card_num != value))
				{
					this._air_card_num = value;
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this._cost = value;
				}
			}
		}
		
		[Column(Storage="_year_pur", DbType="VarChar(4)")]
		public string year_pur
		{
			get
			{
				return this._year_pur;
			}
			set
			{
				if ((this._year_pur != value))
				{
					this._year_pur = value;
				}
			}
		}
		
		[Column(Storage="_location", DbType="VarChar(50)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this._location = value;
				}
			}
		}
		
		[Column(Storage="_registered_by", DbType="VarChar(50)")]
		public string registered_by
		{
			get
			{
				return this._registered_by;
			}
			set
			{
				if ((this._registered_by != value))
				{
					this._registered_by = value;
				}
			}
		}
		
		[Column(Storage="_managed_by", DbType="VarChar(50)")]
		public string managed_by
		{
			get
			{
				return this._managed_by;
			}
			set
			{
				if ((this._managed_by != value))
				{
					this._managed_by = value;
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this._managed_by_dt = value;
				}
			}
		}
		
		[Column(Storage="_stolen", DbType="Bit NOT NULL")]
		public bool stolen
		{
			get
			{
				return this._stolen;
			}
			set
			{
				if ((this._stolen != value))
				{
					this._stolen = value;
				}
			}
		}
		
		[Column(Storage="_unknown", DbType="Bit NOT NULL")]
		public bool unknown
		{
			get
			{
				return this._unknown;
			}
			set
			{
				if ((this._unknown != value))
				{
					this._unknown = value;
				}
			}
		}
		
		[Column(Storage="_in_repair", DbType="Bit NOT NULL")]
		public bool in_repair
		{
			get
			{
				return this._in_repair;
			}
			set
			{
				if ((this._in_repair != value))
				{
					this._in_repair = value;
				}
			}
		}
		
		[Column(Storage="_totaled", DbType="Bit NOT NULL")]
		public bool totaled
		{
			get
			{
				return this._totaled;
			}
			set
			{
				if ((this._totaled != value))
				{
					this._totaled = value;
				}
			}
		}
		
		[Column(Storage="_electronics_loan_color", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string electronics_loan_color
		{
			get
			{
				return this._electronics_loan_color;
			}
			set
			{
				if ((this._electronics_loan_color != value))
				{
					this._electronics_loan_color = value;
				}
			}
		}
		
		[Column(Storage="_electronics_assign_color", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string electronics_assign_color
		{
			get
			{
				return this._electronics_assign_color;
			}
			set
			{
				if ((this._electronics_assign_color != value))
				{
					this._electronics_assign_color = value;
				}
			}
		}
		
		[Column(Storage="_rownum", DbType="BigInt")]
		public System.Nullable<long> rownum
		{
			get
			{
				return this._rownum;
			}
			set
			{
				if ((this._rownum != value))
				{
					this._rownum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_ElectronicsAssignGrid")]
	public partial class vw_ElectronicsAssignGrid
	{
		
		private int _assign_id;
		
		private string _electronics_id;
		
		private string _assigned_to;
		
		private System.DateTime _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private string _asgn_cond_descr;
		
		private string _ret_cond_descr;
		
		private string _comment_txt;
		
		public vw_ElectronicsAssignGrid()
		{
		}
		
		[Column(Storage="_assign_id", DbType="Int NOT NULL")]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this._assign_id = value;
				}
			}
		}
		
		[Column(Storage="_electronics_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string electronics_id
		{
			get
			{
				return this._electronics_id;
			}
			set
			{
				if ((this._electronics_id != value))
				{
					this._electronics_id = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime NOT NULL")]
		public System.DateTime assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this._assigned_dt = value;
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this._return_dt = value;
				}
			}
		}
		
		[Column(Storage="_asgn_cond_descr", DbType="NVarChar(15)")]
		public string asgn_cond_descr
		{
			get
			{
				return this._asgn_cond_descr;
			}
			set
			{
				if ((this._asgn_cond_descr != value))
				{
					this._asgn_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_ret_cond_descr", DbType="NVarChar(15)")]
		public string ret_cond_descr
		{
			get
			{
				return this._ret_cond_descr;
			}
			set
			{
				if ((this._ret_cond_descr != value))
				{
					this._ret_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_comment_txt", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment_txt
		{
			get
			{
				return this._comment_txt;
			}
			set
			{
				if ((this._comment_txt != value))
				{
					this._comment_txt = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.electronics_edit_log")]
	public partial class electronics_edit_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private System.DateTime _edit_dt;
		
		private string _edit_change;
		
		private int _log_id;
		
		private string _electronics_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void Onedit_dtChanging(System.DateTime value);
    partial void Onedit_dtChanged();
    partial void Onedit_changeChanging(string value);
    partial void Onedit_changeChanged();
    partial void Onlog_idChanging(int value);
    partial void Onlog_idChanged();
    partial void Onelectronics_idChanging(string value);
    partial void Onelectronics_idChanged();
    #endregion
		
		public electronics_edit_log()
		{
			OnCreated();
		}
		
		[Column(Storage="_user_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_edit_dt", DbType="DateTime NOT NULL")]
		public System.DateTime edit_dt
		{
			get
			{
				return this._edit_dt;
			}
			set
			{
				if ((this._edit_dt != value))
				{
					this.Onedit_dtChanging(value);
					this.SendPropertyChanging();
					this._edit_dt = value;
					this.SendPropertyChanged("edit_dt");
					this.Onedit_dtChanged();
				}
			}
		}
		
		[Column(Storage="_edit_change", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string edit_change
		{
			get
			{
				return this._edit_change;
			}
			set
			{
				if ((this._edit_change != value))
				{
					this.Onedit_changeChanging(value);
					this.SendPropertyChanging();
					this._edit_change = value;
					this.SendPropertyChanged("edit_change");
					this.Onedit_changeChanged();
				}
			}
		}
		
		[Column(Storage="_log_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int log_id
		{
			get
			{
				return this._log_id;
			}
			set
			{
				if ((this._log_id != value))
				{
					this.Onlog_idChanging(value);
					this.SendPropertyChanging();
					this._log_id = value;
					this.SendPropertyChanged("log_id");
					this.Onlog_idChanged();
				}
			}
		}
		
		[Column(Storage="_electronics_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string electronics_id
		{
			get
			{
				return this._electronics_id;
			}
			set
			{
				if ((this._electronics_id != value))
				{
					this.Onelectronics_idChanging(value);
					this.SendPropertyChanging();
					this._electronics_id = value;
					this.SendPropertyChanged("electronics_id");
					this.Onelectronics_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.electronics_assgn")]
	public partial class electronics_assgn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _assign_id;
		
		private string _electronics_id;
		
		private string _assigned_to;
		
		private System.DateTime _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private System.Nullable<short> _asgn_condition_id;
		
		private System.Nullable<short> _ret_condition_id;
		
		private string _comment_txt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onassign_idChanging(int value);
    partial void Onassign_idChanged();
    partial void Onelectronics_idChanging(string value);
    partial void Onelectronics_idChanged();
    partial void Onassigned_toChanging(string value);
    partial void Onassigned_toChanged();
    partial void Onassigned_dtChanging(System.DateTime value);
    partial void Onassigned_dtChanged();
    partial void Onreturn_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreturn_dtChanged();
    partial void Onasgn_condition_idChanging(System.Nullable<short> value);
    partial void Onasgn_condition_idChanged();
    partial void Onret_condition_idChanging(System.Nullable<short> value);
    partial void Onret_condition_idChanged();
    partial void Oncomment_txtChanging(string value);
    partial void Oncomment_txtChanged();
    #endregion
		
		public electronics_assgn()
		{
			OnCreated();
		}
		
		[Column(Storage="_assign_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this.Onassign_idChanging(value);
					this.SendPropertyChanging();
					this._assign_id = value;
					this.SendPropertyChanged("assign_id");
					this.Onassign_idChanged();
				}
			}
		}
		
		[Column(Storage="_electronics_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string electronics_id
		{
			get
			{
				return this._electronics_id;
			}
			set
			{
				if ((this._electronics_id != value))
				{
					this.Onelectronics_idChanging(value);
					this.SendPropertyChanging();
					this._electronics_id = value;
					this.SendPropertyChanged("electronics_id");
					this.Onelectronics_idChanged();
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this.Onassigned_toChanging(value);
					this.SendPropertyChanging();
					this._assigned_to = value;
					this.SendPropertyChanged("assigned_to");
					this.Onassigned_toChanged();
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime NOT NULL")]
		public System.DateTime assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this.Onassigned_dtChanging(value);
					this.SendPropertyChanging();
					this._assigned_dt = value;
					this.SendPropertyChanged("assigned_dt");
					this.Onassigned_dtChanged();
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this.Onreturn_dtChanging(value);
					this.SendPropertyChanging();
					this._return_dt = value;
					this.SendPropertyChanged("return_dt");
					this.Onreturn_dtChanged();
				}
			}
		}
		
		[Column(Storage="_asgn_condition_id", DbType="SmallInt")]
		public System.Nullable<short> asgn_condition_id
		{
			get
			{
				return this._asgn_condition_id;
			}
			set
			{
				if ((this._asgn_condition_id != value))
				{
					this.Onasgn_condition_idChanging(value);
					this.SendPropertyChanging();
					this._asgn_condition_id = value;
					this.SendPropertyChanged("asgn_condition_id");
					this.Onasgn_condition_idChanged();
				}
			}
		}
		
		[Column(Storage="_ret_condition_id", DbType="SmallInt")]
		public System.Nullable<short> ret_condition_id
		{
			get
			{
				return this._ret_condition_id;
			}
			set
			{
				if ((this._ret_condition_id != value))
				{
					this.Onret_condition_idChanging(value);
					this.SendPropertyChanging();
					this._ret_condition_id = value;
					this.SendPropertyChanged("ret_condition_id");
					this.Onret_condition_idChanged();
				}
			}
		}
		
		[Column(Storage="_comment_txt", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment_txt
		{
			get
			{
				return this._comment_txt;
			}
			set
			{
				if ((this._comment_txt != value))
				{
					this.Oncomment_txtChanging(value);
					this.SendPropertyChanging();
					this._comment_txt = value;
					this.SendPropertyChanged("comment_txt");
					this.Oncomment_txtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tools")]
	public partial class tool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tool_id;
		
		private System.Nullable<short> _item_id;
		
		private System.Nullable<short> _descr_id;
		
		private System.Nullable<short> _mfg_id;
		
		private System.Nullable<short> _size_id;
		
		private string _model_num;
		
		private string _serial_num;
		
		private string _work_loc;
		
		private string _year_pur;
		
		private System.Nullable<float> _cost;
		
		private System.Nullable<System.DateTime> _lst_upd_dt;
		
		private System.Nullable<bool> _stolen;
		
		private System.Nullable<bool> _sold;
		
		private string _comment;
		
		private System.Nullable<bool> _assigned;
		
		private System.Nullable<bool> _in_repair;
		
		private System.Nullable<bool> _totaled;
		
		private System.Nullable<bool> _electrical;
		
		private string _registered_by;
		
		private string _managed_by;
		
		private System.Nullable<int> _hours;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private System.Nullable<bool> _lojack;
		
		private System.Nullable<bool> _unknown;
		
		private System.Nullable<System.DateTime> _calibration_due_dt;
		
		private System.Nullable<int> _calibration_rmdr_wks;
		
		private bool _to_be_sold;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontool_idChanging(string value);
    partial void Ontool_idChanged();
    partial void Onitem_idChanging(System.Nullable<short> value);
    partial void Onitem_idChanged();
    partial void Ondescr_idChanging(System.Nullable<short> value);
    partial void Ondescr_idChanged();
    partial void Onmfg_idChanging(System.Nullable<short> value);
    partial void Onmfg_idChanged();
    partial void Onsize_idChanging(System.Nullable<short> value);
    partial void Onsize_idChanged();
    partial void Onmodel_numChanging(string value);
    partial void Onmodel_numChanged();
    partial void Onserial_numChanging(string value);
    partial void Onserial_numChanged();
    partial void Onwork_locChanging(string value);
    partial void Onwork_locChanged();
    partial void Onyear_purChanging(string value);
    partial void Onyear_purChanged();
    partial void OncostChanging(System.Nullable<float> value);
    partial void OncostChanged();
    partial void Onlst_upd_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onlst_upd_dtChanged();
    partial void OnstolenChanging(System.Nullable<bool> value);
    partial void OnstolenChanged();
    partial void OnsoldChanging(System.Nullable<bool> value);
    partial void OnsoldChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnassignedChanging(System.Nullable<bool> value);
    partial void OnassignedChanged();
    partial void Onin_repairChanging(System.Nullable<bool> value);
    partial void Onin_repairChanged();
    partial void OntotaledChanging(System.Nullable<bool> value);
    partial void OntotaledChanged();
    partial void OnelectricalChanging(System.Nullable<bool> value);
    partial void OnelectricalChanged();
    partial void Onregistered_byChanging(string value);
    partial void Onregistered_byChanged();
    partial void Onmanaged_byChanging(string value);
    partial void Onmanaged_byChanged();
    partial void OnhoursChanging(System.Nullable<int> value);
    partial void OnhoursChanged();
    partial void Onmanaged_by_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onmanaged_by_dtChanged();
    partial void OnlojackChanging(System.Nullable<bool> value);
    partial void OnlojackChanged();
    partial void OnunknownChanging(System.Nullable<bool> value);
    partial void OnunknownChanged();
    partial void Oncalibration_due_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncalibration_due_dtChanged();
    partial void Oncalibration_rmdr_wksChanging(System.Nullable<int> value);
    partial void Oncalibration_rmdr_wksChanged();
    partial void Onto_be_soldChanging(bool value);
    partial void Onto_be_soldChanged();
    #endregion
		
		public tool()
		{
			OnCreated();
		}
		
		[Column(Storage="_tool_id", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this.Ontool_idChanging(value);
					this.SendPropertyChanging();
					this._tool_id = value;
					this.SendPropertyChanged("tool_id");
					this.Ontool_idChanged();
				}
			}
		}
		
		[Column(Storage="_item_id", DbType="SmallInt")]
		public System.Nullable<short> item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[Column(Storage="_descr_id", DbType="SmallInt")]
		public System.Nullable<short> descr_id
		{
			get
			{
				return this._descr_id;
			}
			set
			{
				if ((this._descr_id != value))
				{
					this.Ondescr_idChanging(value);
					this.SendPropertyChanging();
					this._descr_id = value;
					this.SendPropertyChanged("descr_id");
					this.Ondescr_idChanged();
				}
			}
		}
		
		[Column(Storage="_mfg_id", DbType="SmallInt")]
		public System.Nullable<short> mfg_id
		{
			get
			{
				return this._mfg_id;
			}
			set
			{
				if ((this._mfg_id != value))
				{
					this.Onmfg_idChanging(value);
					this.SendPropertyChanging();
					this._mfg_id = value;
					this.SendPropertyChanged("mfg_id");
					this.Onmfg_idChanged();
				}
			}
		}
		
		[Column(Storage="_size_id", DbType="SmallInt")]
		public System.Nullable<short> size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[Column(Storage="_model_num", DbType="NVarChar(25)")]
		public string model_num
		{
			get
			{
				return this._model_num;
			}
			set
			{
				if ((this._model_num != value))
				{
					this.Onmodel_numChanging(value);
					this.SendPropertyChanging();
					this._model_num = value;
					this.SendPropertyChanged("model_num");
					this.Onmodel_numChanged();
				}
			}
		}
		
		[Column(Storage="_serial_num", DbType="NVarChar(30)")]
		public string serial_num
		{
			get
			{
				return this._serial_num;
			}
			set
			{
				if ((this._serial_num != value))
				{
					this.Onserial_numChanging(value);
					this.SendPropertyChanging();
					this._serial_num = value;
					this.SendPropertyChanged("serial_num");
					this.Onserial_numChanged();
				}
			}
		}
		
		[Column(Storage="_work_loc", DbType="NVarChar(50)")]
		public string work_loc
		{
			get
			{
				return this._work_loc;
			}
			set
			{
				if ((this._work_loc != value))
				{
					this.Onwork_locChanging(value);
					this.SendPropertyChanging();
					this._work_loc = value;
					this.SendPropertyChanged("work_loc");
					this.Onwork_locChanged();
				}
			}
		}
		
		[Column(Storage="_year_pur", DbType="NVarChar(4)")]
		public string year_pur
		{
			get
			{
				return this._year_pur;
			}
			set
			{
				if ((this._year_pur != value))
				{
					this.Onyear_purChanging(value);
					this.SendPropertyChanging();
					this._year_pur = value;
					this.SendPropertyChanged("year_pur");
					this.Onyear_purChanged();
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[Column(Storage="_lst_upd_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> lst_upd_dt
		{
			get
			{
				return this._lst_upd_dt;
			}
			set
			{
				if ((this._lst_upd_dt != value))
				{
					this.Onlst_upd_dtChanging(value);
					this.SendPropertyChanging();
					this._lst_upd_dt = value;
					this.SendPropertyChanged("lst_upd_dt");
					this.Onlst_upd_dtChanged();
				}
			}
		}
		
		[Column(Storage="_stolen", DbType="Bit")]
		public System.Nullable<bool> stolen
		{
			get
			{
				return this._stolen;
			}
			set
			{
				if ((this._stolen != value))
				{
					this.OnstolenChanging(value);
					this.SendPropertyChanging();
					this._stolen = value;
					this.SendPropertyChanged("stolen");
					this.OnstolenChanged();
				}
			}
		}
		
		[Column(Storage="_sold", DbType="Bit")]
		public System.Nullable<bool> sold
		{
			get
			{
				return this._sold;
			}
			set
			{
				if ((this._sold != value))
				{
					this.OnsoldChanging(value);
					this.SendPropertyChanging();
					this._sold = value;
					this.SendPropertyChanged("sold");
					this.OnsoldChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[Column(Storage="_assigned", DbType="Bit")]
		public System.Nullable<bool> assigned
		{
			get
			{
				return this._assigned;
			}
			set
			{
				if ((this._assigned != value))
				{
					this.OnassignedChanging(value);
					this.SendPropertyChanging();
					this._assigned = value;
					this.SendPropertyChanged("assigned");
					this.OnassignedChanged();
				}
			}
		}
		
		[Column(Storage="_in_repair", DbType="Bit")]
		public System.Nullable<bool> in_repair
		{
			get
			{
				return this._in_repair;
			}
			set
			{
				if ((this._in_repair != value))
				{
					this.Onin_repairChanging(value);
					this.SendPropertyChanging();
					this._in_repair = value;
					this.SendPropertyChanged("in_repair");
					this.Onin_repairChanged();
				}
			}
		}
		
		[Column(Storage="_totaled", DbType="Bit")]
		public System.Nullable<bool> totaled
		{
			get
			{
				return this._totaled;
			}
			set
			{
				if ((this._totaled != value))
				{
					this.OntotaledChanging(value);
					this.SendPropertyChanging();
					this._totaled = value;
					this.SendPropertyChanged("totaled");
					this.OntotaledChanged();
				}
			}
		}
		
		[Column(Storage="_electrical", DbType="Bit")]
		public System.Nullable<bool> electrical
		{
			get
			{
				return this._electrical;
			}
			set
			{
				if ((this._electrical != value))
				{
					this.OnelectricalChanging(value);
					this.SendPropertyChanging();
					this._electrical = value;
					this.SendPropertyChanged("electrical");
					this.OnelectricalChanged();
				}
			}
		}
		
		[Column(Storage="_registered_by", DbType="NVarChar(50)")]
		public string registered_by
		{
			get
			{
				return this._registered_by;
			}
			set
			{
				if ((this._registered_by != value))
				{
					this.Onregistered_byChanging(value);
					this.SendPropertyChanging();
					this._registered_by = value;
					this.SendPropertyChanged("registered_by");
					this.Onregistered_byChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by", DbType="NVarChar(50)")]
		public string managed_by
		{
			get
			{
				return this._managed_by;
			}
			set
			{
				if ((this._managed_by != value))
				{
					this.Onmanaged_byChanging(value);
					this.SendPropertyChanging();
					this._managed_by = value;
					this.SendPropertyChanged("managed_by");
					this.Onmanaged_byChanged();
				}
			}
		}
		
		[Column(Storage="_hours", DbType="Int")]
		public System.Nullable<int> hours
		{
			get
			{
				return this._hours;
			}
			set
			{
				if ((this._hours != value))
				{
					this.OnhoursChanging(value);
					this.SendPropertyChanging();
					this._hours = value;
					this.SendPropertyChanged("hours");
					this.OnhoursChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this.Onmanaged_by_dtChanging(value);
					this.SendPropertyChanging();
					this._managed_by_dt = value;
					this.SendPropertyChanged("managed_by_dt");
					this.Onmanaged_by_dtChanged();
				}
			}
		}
		
		[Column(Storage="_lojack", DbType="Bit")]
		public System.Nullable<bool> lojack
		{
			get
			{
				return this._lojack;
			}
			set
			{
				if ((this._lojack != value))
				{
					this.OnlojackChanging(value);
					this.SendPropertyChanging();
					this._lojack = value;
					this.SendPropertyChanged("lojack");
					this.OnlojackChanged();
				}
			}
		}
		
		[Column(Storage="_unknown", DbType="Bit")]
		public System.Nullable<bool> unknown
		{
			get
			{
				return this._unknown;
			}
			set
			{
				if ((this._unknown != value))
				{
					this.OnunknownChanging(value);
					this.SendPropertyChanging();
					this._unknown = value;
					this.SendPropertyChanged("unknown");
					this.OnunknownChanged();
				}
			}
		}
		
		[Column(Storage="_calibration_due_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> calibration_due_dt
		{
			get
			{
				return this._calibration_due_dt;
			}
			set
			{
				if ((this._calibration_due_dt != value))
				{
					this.Oncalibration_due_dtChanging(value);
					this.SendPropertyChanging();
					this._calibration_due_dt = value;
					this.SendPropertyChanged("calibration_due_dt");
					this.Oncalibration_due_dtChanged();
				}
			}
		}
		
		[Column(Storage="_calibration_rmdr_wks", DbType="Int")]
		public System.Nullable<int> calibration_rmdr_wks
		{
			get
			{
				return this._calibration_rmdr_wks;
			}
			set
			{
				if ((this._calibration_rmdr_wks != value))
				{
					this.Oncalibration_rmdr_wksChanging(value);
					this.SendPropertyChanging();
					this._calibration_rmdr_wks = value;
					this.SendPropertyChanged("calibration_rmdr_wks");
					this.Oncalibration_rmdr_wksChanged();
				}
			}
		}
		
		[Column(Storage="_to_be_sold", DbType="Bit NOT NULL")]
		public bool to_be_sold
		{
			get
			{
				return this._to_be_sold;
			}
			set
			{
				if ((this._to_be_sold != value))
				{
					this.Onto_be_soldChanging(value);
					this.SendPropertyChanging();
					this._to_be_sold = value;
					this.SendPropertyChanged("to_be_sold");
					this.Onto_be_soldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.manage_by_history")]
	public partial class manage_by_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mbh_id;
		
		private string _epuip_id;
		
		private string _mng_by;
		
		private System.Nullable<System.DateTime> _mng_by_dt;
		
		private string _reg_by;
		
		private System.Nullable<float> _miles_hrs;
		
		private System.Nullable<System.DateTime> _mng_by_dt_end;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmbh_idChanging(int value);
    partial void Onmbh_idChanged();
    partial void Onepuip_idChanging(string value);
    partial void Onepuip_idChanged();
    partial void Onmng_byChanging(string value);
    partial void Onmng_byChanged();
    partial void Onmng_by_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onmng_by_dtChanged();
    partial void Onreg_byChanging(string value);
    partial void Onreg_byChanged();
    partial void Onmiles_hrsChanging(System.Nullable<float> value);
    partial void Onmiles_hrsChanged();
    partial void Onmng_by_dt_endChanging(System.Nullable<System.DateTime> value);
    partial void Onmng_by_dt_endChanged();
    #endregion
		
		public manage_by_history()
		{
			OnCreated();
		}
		
		[Column(Storage="_mbh_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mbh_id
		{
			get
			{
				return this._mbh_id;
			}
			set
			{
				if ((this._mbh_id != value))
				{
					this.Onmbh_idChanging(value);
					this.SendPropertyChanging();
					this._mbh_id = value;
					this.SendPropertyChanged("mbh_id");
					this.Onmbh_idChanged();
				}
			}
		}
		
		[Column(Storage="_epuip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string epuip_id
		{
			get
			{
				return this._epuip_id;
			}
			set
			{
				if ((this._epuip_id != value))
				{
					this.Onepuip_idChanging(value);
					this.SendPropertyChanging();
					this._epuip_id = value;
					this.SendPropertyChanged("epuip_id");
					this.Onepuip_idChanged();
				}
			}
		}
		
		[Column(Storage="_mng_by", DbType="NVarChar(50)")]
		public string mng_by
		{
			get
			{
				return this._mng_by;
			}
			set
			{
				if ((this._mng_by != value))
				{
					this.Onmng_byChanging(value);
					this.SendPropertyChanging();
					this._mng_by = value;
					this.SendPropertyChanged("mng_by");
					this.Onmng_byChanged();
				}
			}
		}
		
		[Column(Storage="_mng_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> mng_by_dt
		{
			get
			{
				return this._mng_by_dt;
			}
			set
			{
				if ((this._mng_by_dt != value))
				{
					this.Onmng_by_dtChanging(value);
					this.SendPropertyChanging();
					this._mng_by_dt = value;
					this.SendPropertyChanged("mng_by_dt");
					this.Onmng_by_dtChanged();
				}
			}
		}
		
		[Column(Storage="_reg_by", DbType="NVarChar(50)")]
		public string reg_by
		{
			get
			{
				return this._reg_by;
			}
			set
			{
				if ((this._reg_by != value))
				{
					this.Onreg_byChanging(value);
					this.SendPropertyChanging();
					this._reg_by = value;
					this.SendPropertyChanged("reg_by");
					this.Onreg_byChanged();
				}
			}
		}
		
		[Column(Storage="_miles_hrs", DbType="Real")]
		public System.Nullable<float> miles_hrs
		{
			get
			{
				return this._miles_hrs;
			}
			set
			{
				if ((this._miles_hrs != value))
				{
					this.Onmiles_hrsChanging(value);
					this.SendPropertyChanging();
					this._miles_hrs = value;
					this.SendPropertyChanged("miles_hrs");
					this.Onmiles_hrsChanged();
				}
			}
		}
		
		[Column(Storage="_mng_by_dt_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> mng_by_dt_end
		{
			get
			{
				return this._mng_by_dt_end;
			}
			set
			{
				if ((this._mng_by_dt_end != value))
				{
					this.Onmng_by_dt_endChanging(value);
					this.SendPropertyChanging();
					this._mng_by_dt_end = value;
					this.SendPropertyChanged("mng_by_dt_end");
					this.Onmng_by_dt_endChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_ToolsGrid")]
	public partial class vw_ToolsGrid
	{
		
		private string _tool_id;
		
		private string _tools_type_descr;
		
		private string _tools_descr_descr;
		
		private string _size_descr;
		
		private string _tool_mfg_descr;
		
		private string _model_num;
		
		private string _serial_num;
		
		private string _year_pur;
		
		private string _managed_by;
		
		private string _tool_loan_color;
		
		private string _tool_assign_color;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private string _registered_by;
		
		private string _work_loc;
		
		private System.Nullable<float> _cost;
		
		private string _comment;
		
		private System.Nullable<bool> _assigned;
		
		private System.Nullable<bool> _stolen;
		
		private System.Nullable<bool> _sold;
		
		private System.Nullable<bool> _in_repair;
		
		private System.Nullable<bool> _totaled;
		
		private System.Nullable<bool> _electrical;
		
		private System.Nullable<bool> _lojack;
		
		private System.Nullable<bool> _unknown;
		
		private System.Nullable<System.DateTime> _calibration_due_dt;
		
		private string _calibration_due_warn;
		
		private System.Nullable<int> _calibration_rmdr_wks;
		
		private System.Nullable<int> _img_cnt;
		
		private System.Nullable<long> _rownum;
		
		private bool _to_be_sold;
		
		private string _assigned_to;
		
		public vw_ToolsGrid()
		{
		}
		
		[Column(Storage="_tool_id", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this._tool_id = value;
				}
			}
		}
		
		[Column(Storage="_tools_type_descr", DbType="NVarChar(25)")]
		public string tools_type_descr
		{
			get
			{
				return this._tools_type_descr;
			}
			set
			{
				if ((this._tools_type_descr != value))
				{
					this._tools_type_descr = value;
				}
			}
		}
		
		[Column(Storage="_tools_descr_descr", DbType="NVarChar(50)")]
		public string tools_descr_descr
		{
			get
			{
				return this._tools_descr_descr;
			}
			set
			{
				if ((this._tools_descr_descr != value))
				{
					this._tools_descr_descr = value;
				}
			}
		}
		
		[Column(Storage="_size_descr", DbType="NVarChar(50)")]
		public string size_descr
		{
			get
			{
				return this._size_descr;
			}
			set
			{
				if ((this._size_descr != value))
				{
					this._size_descr = value;
				}
			}
		}
		
		[Column(Storage="_tool_mfg_descr", DbType="NVarChar(50)")]
		public string tool_mfg_descr
		{
			get
			{
				return this._tool_mfg_descr;
			}
			set
			{
				if ((this._tool_mfg_descr != value))
				{
					this._tool_mfg_descr = value;
				}
			}
		}
		
		[Column(Storage="_model_num", DbType="NVarChar(25)")]
		public string model_num
		{
			get
			{
				return this._model_num;
			}
			set
			{
				if ((this._model_num != value))
				{
					this._model_num = value;
				}
			}
		}
		
		[Column(Storage="_serial_num", DbType="NVarChar(30)")]
		public string serial_num
		{
			get
			{
				return this._serial_num;
			}
			set
			{
				if ((this._serial_num != value))
				{
					this._serial_num = value;
				}
			}
		}
		
		[Column(Storage="_year_pur", DbType="NVarChar(4)")]
		public string year_pur
		{
			get
			{
				return this._year_pur;
			}
			set
			{
				if ((this._year_pur != value))
				{
					this._year_pur = value;
				}
			}
		}
		
		[Column(Storage="_managed_by", DbType="NVarChar(50)")]
		public string managed_by
		{
			get
			{
				return this._managed_by;
			}
			set
			{
				if ((this._managed_by != value))
				{
					this._managed_by = value;
				}
			}
		}
		
		[Column(Storage="_tool_loan_color", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string tool_loan_color
		{
			get
			{
				return this._tool_loan_color;
			}
			set
			{
				if ((this._tool_loan_color != value))
				{
					this._tool_loan_color = value;
				}
			}
		}
		
		[Column(Storage="_tool_assign_color", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string tool_assign_color
		{
			get
			{
				return this._tool_assign_color;
			}
			set
			{
				if ((this._tool_assign_color != value))
				{
					this._tool_assign_color = value;
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this._managed_by_dt = value;
				}
			}
		}
		
		[Column(Storage="_registered_by", DbType="NVarChar(50)")]
		public string registered_by
		{
			get
			{
				return this._registered_by;
			}
			set
			{
				if ((this._registered_by != value))
				{
					this._registered_by = value;
				}
			}
		}
		
		[Column(Storage="_work_loc", DbType="NVarChar(50)")]
		public string work_loc
		{
			get
			{
				return this._work_loc;
			}
			set
			{
				if ((this._work_loc != value))
				{
					this._work_loc = value;
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this._cost = value;
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
		
		[Column(Storage="_assigned", DbType="Bit")]
		public System.Nullable<bool> assigned
		{
			get
			{
				return this._assigned;
			}
			set
			{
				if ((this._assigned != value))
				{
					this._assigned = value;
				}
			}
		}
		
		[Column(Storage="_stolen", DbType="Bit")]
		public System.Nullable<bool> stolen
		{
			get
			{
				return this._stolen;
			}
			set
			{
				if ((this._stolen != value))
				{
					this._stolen = value;
				}
			}
		}
		
		[Column(Storage="_sold", DbType="Bit")]
		public System.Nullable<bool> sold
		{
			get
			{
				return this._sold;
			}
			set
			{
				if ((this._sold != value))
				{
					this._sold = value;
				}
			}
		}
		
		[Column(Storage="_in_repair", DbType="Bit")]
		public System.Nullable<bool> in_repair
		{
			get
			{
				return this._in_repair;
			}
			set
			{
				if ((this._in_repair != value))
				{
					this._in_repair = value;
				}
			}
		}
		
		[Column(Storage="_totaled", DbType="Bit")]
		public System.Nullable<bool> totaled
		{
			get
			{
				return this._totaled;
			}
			set
			{
				if ((this._totaled != value))
				{
					this._totaled = value;
				}
			}
		}
		
		[Column(Storage="_electrical", DbType="Bit")]
		public System.Nullable<bool> electrical
		{
			get
			{
				return this._electrical;
			}
			set
			{
				if ((this._electrical != value))
				{
					this._electrical = value;
				}
			}
		}
		
		[Column(Storage="_lojack", DbType="Bit")]
		public System.Nullable<bool> lojack
		{
			get
			{
				return this._lojack;
			}
			set
			{
				if ((this._lojack != value))
				{
					this._lojack = value;
				}
			}
		}
		
		[Column(Storage="_unknown", DbType="Bit")]
		public System.Nullable<bool> unknown
		{
			get
			{
				return this._unknown;
			}
			set
			{
				if ((this._unknown != value))
				{
					this._unknown = value;
				}
			}
		}
		
		[Column(Storage="_calibration_due_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> calibration_due_dt
		{
			get
			{
				return this._calibration_due_dt;
			}
			set
			{
				if ((this._calibration_due_dt != value))
				{
					this._calibration_due_dt = value;
				}
			}
		}
		
		[Column(Storage="_calibration_due_warn", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string calibration_due_warn
		{
			get
			{
				return this._calibration_due_warn;
			}
			set
			{
				if ((this._calibration_due_warn != value))
				{
					this._calibration_due_warn = value;
				}
			}
		}
		
		[Column(Storage="_calibration_rmdr_wks", DbType="Int")]
		public System.Nullable<int> calibration_rmdr_wks
		{
			get
			{
				return this._calibration_rmdr_wks;
			}
			set
			{
				if ((this._calibration_rmdr_wks != value))
				{
					this._calibration_rmdr_wks = value;
				}
			}
		}
		
		[Column(Storage="_img_cnt", DbType="Int")]
		public System.Nullable<int> img_cnt
		{
			get
			{
				return this._img_cnt;
			}
			set
			{
				if ((this._img_cnt != value))
				{
					this._img_cnt = value;
				}
			}
		}
		
		[Column(Storage="_rownum", DbType="BigInt")]
		public System.Nullable<long> rownum
		{
			get
			{
				return this._rownum;
			}
			set
			{
				if ((this._rownum != value))
				{
					this._rownum = value;
				}
			}
		}
		
		[Column(Storage="_to_be_sold", DbType="Bit NOT NULL")]
		public bool to_be_sold
		{
			get
			{
				return this._to_be_sold;
			}
			set
			{
				if ((this._to_be_sold != value))
				{
					this._to_be_sold = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50)")]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.empQual")]
	public partial class empQual : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employeeId;
		
		private string _empId;
		
		private string _qualId;
		
		private System.Nullable<System.DateTime> _qualDate;
		
		private System.Nullable<System.DateTime> _qualExpire;
		
		private string _evaluator;
		
		private string _qualCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployeeIdChanging(int value);
    partial void OnemployeeIdChanged();
    partial void OnempIdChanging(string value);
    partial void OnempIdChanged();
    partial void OnqualIdChanging(string value);
    partial void OnqualIdChanged();
    partial void OnqualDateChanging(System.Nullable<System.DateTime> value);
    partial void OnqualDateChanged();
    partial void OnqualExpireChanging(System.Nullable<System.DateTime> value);
    partial void OnqualExpireChanged();
    partial void OnevaluatorChanging(string value);
    partial void OnevaluatorChanged();
    partial void OnqualCompanyChanging(string value);
    partial void OnqualCompanyChanged();
    #endregion
		
		public empQual()
		{
			OnCreated();
		}
		
		[Column(Storage="_employeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				if ((this._employeeId != value))
				{
					this.OnemployeeIdChanging(value);
					this.SendPropertyChanging();
					this._employeeId = value;
					this.SendPropertyChanged("employeeId");
					this.OnemployeeIdChanged();
				}
			}
		}
		
		[Column(Storage="_empId", DbType="VarChar(10)")]
		public string empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[Column(Storage="_qualId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string qualId
		{
			get
			{
				return this._qualId;
			}
			set
			{
				if ((this._qualId != value))
				{
					this.OnqualIdChanging(value);
					this.SendPropertyChanging();
					this._qualId = value;
					this.SendPropertyChanged("qualId");
					this.OnqualIdChanged();
				}
			}
		}
		
		[Column(Storage="_qualDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> qualDate
		{
			get
			{
				return this._qualDate;
			}
			set
			{
				if ((this._qualDate != value))
				{
					this.OnqualDateChanging(value);
					this.SendPropertyChanging();
					this._qualDate = value;
					this.SendPropertyChanged("qualDate");
					this.OnqualDateChanged();
				}
			}
		}
		
		[Column(Storage="_qualExpire", DbType="DateTime")]
		public System.Nullable<System.DateTime> qualExpire
		{
			get
			{
				return this._qualExpire;
			}
			set
			{
				if ((this._qualExpire != value))
				{
					this.OnqualExpireChanging(value);
					this.SendPropertyChanging();
					this._qualExpire = value;
					this.SendPropertyChanged("qualExpire");
					this.OnqualExpireChanged();
				}
			}
		}
		
		[Column(Storage="_evaluator", DbType="VarChar(100)")]
		public string evaluator
		{
			get
			{
				return this._evaluator;
			}
			set
			{
				if ((this._evaluator != value))
				{
					this.OnevaluatorChanging(value);
					this.SendPropertyChanging();
					this._evaluator = value;
					this.SendPropertyChanged("evaluator");
					this.OnevaluatorChanged();
				}
			}
		}
		
		[Column(Storage="_qualCompany", DbType="VarChar(25)")]
		public string qualCompany
		{
			get
			{
				return this._qualCompany;
			}
			set
			{
				if ((this._qualCompany != value))
				{
					this.OnqualCompanyChanging(value);
					this.SendPropertyChanging();
					this._qualCompany = value;
					this.SendPropertyChanged("qualCompany");
					this.OnqualCompanyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.qualification")]
	public partial class qualification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _qualID;
		
		private string _qualDesc;
		
		private string _qualCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnqualIDChanging(string value);
    partial void OnqualIDChanged();
    partial void OnqualDescChanging(string value);
    partial void OnqualDescChanged();
    partial void OnqualCompanyChanging(string value);
    partial void OnqualCompanyChanged();
    #endregion
		
		public qualification()
		{
			OnCreated();
		}
		
		[Column(Storage="_qualID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string qualID
		{
			get
			{
				return this._qualID;
			}
			set
			{
				if ((this._qualID != value))
				{
					this.OnqualIDChanging(value);
					this.SendPropertyChanging();
					this._qualID = value;
					this.SendPropertyChanged("qualID");
					this.OnqualIDChanged();
				}
			}
		}
		
		[Column(Storage="_qualDesc", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string qualDesc
		{
			get
			{
				return this._qualDesc;
			}
			set
			{
				if ((this._qualDesc != value))
				{
					this.OnqualDescChanging(value);
					this.SendPropertyChanging();
					this._qualDesc = value;
					this.SendPropertyChanged("qualDesc");
					this.OnqualDescChanged();
				}
			}
		}
		
		[Column(Storage="_qualCompany", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string qualCompany
		{
			get
			{
				return this._qualCompany;
			}
			set
			{
				if ((this._qualCompany != value))
				{
					this.OnqualCompanyChanging(value);
					this.SendPropertyChanging();
					this._qualCompany = value;
					this.SendPropertyChanged("qualCompany");
					this.OnqualCompanyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_QualificationsGrid")]
	public partial class vw_QualificationsGrid
	{
		
		private int _employeeId;
		
		private string _qualId;
		
		private System.Nullable<System.DateTime> _qualDate;
		
		private System.Nullable<System.DateTime> _qualExpire;
		
		private string _evaluator;
		
		private string _qualCompany;
		
		private string _qualDesc;
		
		private string _expire_warn;
		
		private System.Nullable<long> _rownum;
		
		public vw_QualificationsGrid()
		{
		}
		
		[Column(Storage="_employeeId", DbType="Int NOT NULL")]
		public int employeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				if ((this._employeeId != value))
				{
					this._employeeId = value;
				}
			}
		}
		
		[Column(Storage="_qualId", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string qualId
		{
			get
			{
				return this._qualId;
			}
			set
			{
				if ((this._qualId != value))
				{
					this._qualId = value;
				}
			}
		}
		
		[Column(Storage="_qualDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> qualDate
		{
			get
			{
				return this._qualDate;
			}
			set
			{
				if ((this._qualDate != value))
				{
					this._qualDate = value;
				}
			}
		}
		
		[Column(Storage="_qualExpire", DbType="DateTime")]
		public System.Nullable<System.DateTime> qualExpire
		{
			get
			{
				return this._qualExpire;
			}
			set
			{
				if ((this._qualExpire != value))
				{
					this._qualExpire = value;
				}
			}
		}
		
		[Column(Storage="_evaluator", DbType="VarChar(100)")]
		public string evaluator
		{
			get
			{
				return this._evaluator;
			}
			set
			{
				if ((this._evaluator != value))
				{
					this._evaluator = value;
				}
			}
		}
		
		[Column(Storage="_qualCompany", DbType="VarChar(25)")]
		public string qualCompany
		{
			get
			{
				return this._qualCompany;
			}
			set
			{
				if ((this._qualCompany != value))
				{
					this._qualCompany = value;
				}
			}
		}
		
		[Column(Storage="_qualDesc", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string qualDesc
		{
			get
			{
				return this._qualDesc;
			}
			set
			{
				if ((this._qualDesc != value))
				{
					this._qualDesc = value;
				}
			}
		}
		
		[Column(Storage="_expire_warn", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string expire_warn
		{
			get
			{
				return this._expire_warn;
			}
			set
			{
				if ((this._expire_warn != value))
				{
					this._expire_warn = value;
				}
			}
		}
		
		[Column(Storage="_rownum", DbType="BigInt")]
		public System.Nullable<long> rownum
		{
			get
			{
				return this._rownum;
			}
			set
			{
				if ((this._rownum != value))
				{
					this._rownum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.empJobClass")]
	public partial class empJobClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _jobClassId;
		
		private string _jobClassDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnjobClassIdChanging(string value);
    partial void OnjobClassIdChanged();
    partial void OnjobClassDescChanging(string value);
    partial void OnjobClassDescChanged();
    #endregion
		
		public empJobClass()
		{
			OnCreated();
		}
		
		[Column(Storage="_jobClassId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string jobClassId
		{
			get
			{
				return this._jobClassId;
			}
			set
			{
				if ((this._jobClassId != value))
				{
					this.OnjobClassIdChanging(value);
					this.SendPropertyChanging();
					this._jobClassId = value;
					this.SendPropertyChanged("jobClassId");
					this.OnjobClassIdChanged();
				}
			}
		}
		
		[Column(Storage="_jobClassDesc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string jobClassDesc
		{
			get
			{
				return this._jobClassDesc;
			}
			set
			{
				if ((this._jobClassDesc != value))
				{
					this.OnjobClassDescChanging(value);
					this.SendPropertyChanging();
					this._jobClassDesc = value;
					this.SendPropertyChanged("jobClassDesc");
					this.OnjobClassDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_QualificationsAdmin")]
	public partial class vw_QualificationsAdmin
	{
		
		private string _qualID;
		
		private string _qualDesc;
		
		private string _qualCompany;
		
		private System.Nullable<long> _rownum;
		
		public vw_QualificationsAdmin()
		{
		}
		
		[Column(Storage="_qualID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string qualID
		{
			get
			{
				return this._qualID;
			}
			set
			{
				if ((this._qualID != value))
				{
					this._qualID = value;
				}
			}
		}
		
		[Column(Storage="_qualDesc", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string qualDesc
		{
			get
			{
				return this._qualDesc;
			}
			set
			{
				if ((this._qualDesc != value))
				{
					this._qualDesc = value;
				}
			}
		}
		
		[Column(Storage="_qualCompany", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string qualCompany
		{
			get
			{
				return this._qualCompany;
			}
			set
			{
				if ((this._qualCompany != value))
				{
					this._qualCompany = value;
				}
			}
		}
		
		[Column(Storage="_rownum", DbType="BigInt")]
		public System.Nullable<long> rownum
		{
			get
			{
				return this._rownum;
			}
			set
			{
				if ((this._rownum != value))
				{
					this._rownum = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.qual_notification")]
	public partial class qual_notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public qual_notification()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.empWarnRecognition")]
	public partial class empWarnRecognition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employeeID;
		
		private System.DateTime _empQualWarnRecogDate;
		
		private char _empWarnRecogFlg;
		
		private string _comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnempQualWarnRecogDateChanging(System.DateTime value);
    partial void OnempQualWarnRecogDateChanged();
    partial void OnempWarnRecogFlgChanging(char value);
    partial void OnempWarnRecogFlgChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public empWarnRecognition()
		{
			OnCreated();
		}
		
		[Column(Storage="_employeeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_empQualWarnRecogDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime empQualWarnRecogDate
		{
			get
			{
				return this._empQualWarnRecogDate;
			}
			set
			{
				if ((this._empQualWarnRecogDate != value))
				{
					this.OnempQualWarnRecogDateChanging(value);
					this.SendPropertyChanging();
					this._empQualWarnRecogDate = value;
					this.SendPropertyChanged("empQualWarnRecogDate");
					this.OnempQualWarnRecogDateChanged();
				}
			}
		}
		
		[Column(Storage="_empWarnRecogFlg", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char empWarnRecogFlg
		{
			get
			{
				return this._empWarnRecogFlg;
			}
			set
			{
				if ((this._empWarnRecogFlg != value))
				{
					this.OnempWarnRecogFlgChanging(value);
					this.SendPropertyChanging();
					this._empWarnRecogFlg = value;
					this.SendPropertyChanged("empWarnRecogFlg");
					this.OnempWarnRecogFlgChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_EquipGrid")]
	public partial class vw_EquipGrid
	{
		
		private string _equip_id;
		
		private string _type_desc;
		
		private string _make_descr;
		
		private string _model_descr;
		
		private string _equip_year;
		
		private string _work_loc;
		
		private System.Nullable<System.DateTime> _insp_due_dt;
		
		private System.Nullable<float> _service_due_num;
		
		private System.Nullable<float> _miles_hours;
		
		private System.Nullable<System.DateTime> _miles_dt;
		
		private string _registered_by;
		
		private string _managed_by;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private System.Nullable<System.DateTime> _tag_expire_dt;
		
		private string _inspection_warn;
		
		private string _service_warn;
		
		private string _tag_warn;
		
		private string _equip_loan_color;
		
		private string _equip_assign_color;
		
		private System.Nullable<short> _insp_rmdr_wks;
		
		private string _vin_num;
		
		private string _title_num;
		
		private System.Nullable<float> _gross_v_wt;
		
		private System.Nullable<float> _gross_c_wt;
		
		private System.Nullable<float> _unlaiden_wt;
		
		private string _tag_num;
		
		private string _tag_state;
		
		private string _fuel_descr;
		
		private System.Nullable<float> _cost;
		
		private bool _stolen;
		
		private bool _sold;
		
		private bool _lojack;
		
		private string _comment;
		
		private bool _in_repair;
		
		private bool _totaled;
		
		private System.Nullable<short> _tag_expire_rmdr_wks;
		
		private bool _hut_sticker;
		
		private bool _apportioned;
		
		private bool _ifta_sticker;
		
		private bool _gps;
		
		private bool _unknown;
		
		private float _current_value;
		
		private System.Nullable<int> _img_cnt;
		
		private bool _leased;
		
		private string _gps_num;
		
		private bool _ezpass;
		
		private string _ezpass_num;
		
		private bool _fuelcard;
		
		private string _fuelcard_num;
		
		private System.Nullable<long> _rownum;
		
		private bool _to_be_sold;
		
		private string _assigned_to;
		
		private string _fuel_card_loc;
		
		public vw_EquipGrid()
		{
		}
		
		[Column(Storage="_equip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this._equip_id = value;
				}
			}
		}
		
		[Column(Storage="_type_desc", DbType="NVarChar(50)")]
		public string type_desc
		{
			get
			{
				return this._type_desc;
			}
			set
			{
				if ((this._type_desc != value))
				{
					this._type_desc = value;
				}
			}
		}
		
		[Column(Storage="_make_descr", DbType="NVarChar(25)")]
		public string make_descr
		{
			get
			{
				return this._make_descr;
			}
			set
			{
				if ((this._make_descr != value))
				{
					this._make_descr = value;
				}
			}
		}
		
		[Column(Storage="_model_descr", DbType="NVarChar(25)")]
		public string model_descr
		{
			get
			{
				return this._model_descr;
			}
			set
			{
				if ((this._model_descr != value))
				{
					this._model_descr = value;
				}
			}
		}
		
		[Column(Storage="_equip_year", DbType="NVarChar(4)")]
		public string equip_year
		{
			get
			{
				return this._equip_year;
			}
			set
			{
				if ((this._equip_year != value))
				{
					this._equip_year = value;
				}
			}
		}
		
		[Column(Storage="_work_loc", DbType="NVarChar(50)")]
		public string work_loc
		{
			get
			{
				return this._work_loc;
			}
			set
			{
				if ((this._work_loc != value))
				{
					this._work_loc = value;
				}
			}
		}
		
		[Column(Storage="_insp_due_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> insp_due_dt
		{
			get
			{
				return this._insp_due_dt;
			}
			set
			{
				if ((this._insp_due_dt != value))
				{
					this._insp_due_dt = value;
				}
			}
		}
		
		[Column(Storage="_service_due_num", DbType="Real")]
		public System.Nullable<float> service_due_num
		{
			get
			{
				return this._service_due_num;
			}
			set
			{
				if ((this._service_due_num != value))
				{
					this._service_due_num = value;
				}
			}
		}
		
		[Column(Storage="_miles_hours", DbType="Real")]
		public System.Nullable<float> miles_hours
		{
			get
			{
				return this._miles_hours;
			}
			set
			{
				if ((this._miles_hours != value))
				{
					this._miles_hours = value;
				}
			}
		}
		
		[Column(Storage="_miles_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> miles_dt
		{
			get
			{
				return this._miles_dt;
			}
			set
			{
				if ((this._miles_dt != value))
				{
					this._miles_dt = value;
				}
			}
		}
		
		[Column(Storage="_registered_by", DbType="NVarChar(50)")]
		public string registered_by
		{
			get
			{
				return this._registered_by;
			}
			set
			{
				if ((this._registered_by != value))
				{
					this._registered_by = value;
				}
			}
		}
		
		[Column(Storage="_managed_by", DbType="NVarChar(50)")]
		public string managed_by
		{
			get
			{
				return this._managed_by;
			}
			set
			{
				if ((this._managed_by != value))
				{
					this._managed_by = value;
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this._managed_by_dt = value;
				}
			}
		}
		
		[Column(Storage="_tag_expire_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> tag_expire_dt
		{
			get
			{
				return this._tag_expire_dt;
			}
			set
			{
				if ((this._tag_expire_dt != value))
				{
					this._tag_expire_dt = value;
				}
			}
		}
		
		[Column(Storage="_inspection_warn", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string inspection_warn
		{
			get
			{
				return this._inspection_warn;
			}
			set
			{
				if ((this._inspection_warn != value))
				{
					this._inspection_warn = value;
				}
			}
		}
		
		[Column(Storage="_service_warn", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string service_warn
		{
			get
			{
				return this._service_warn;
			}
			set
			{
				if ((this._service_warn != value))
				{
					this._service_warn = value;
				}
			}
		}
		
		[Column(Storage="_tag_warn", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string tag_warn
		{
			get
			{
				return this._tag_warn;
			}
			set
			{
				if ((this._tag_warn != value))
				{
					this._tag_warn = value;
				}
			}
		}
		
		[Column(Storage="_equip_loan_color", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string equip_loan_color
		{
			get
			{
				return this._equip_loan_color;
			}
			set
			{
				if ((this._equip_loan_color != value))
				{
					this._equip_loan_color = value;
				}
			}
		}
		
		[Column(Storage="_equip_assign_color", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string equip_assign_color
		{
			get
			{
				return this._equip_assign_color;
			}
			set
			{
				if ((this._equip_assign_color != value))
				{
					this._equip_assign_color = value;
				}
			}
		}
		
		[Column(Storage="_insp_rmdr_wks", DbType="SmallInt")]
		public System.Nullable<short> insp_rmdr_wks
		{
			get
			{
				return this._insp_rmdr_wks;
			}
			set
			{
				if ((this._insp_rmdr_wks != value))
				{
					this._insp_rmdr_wks = value;
				}
			}
		}
		
		[Column(Storage="_vin_num", DbType="NVarChar(50)")]
		public string vin_num
		{
			get
			{
				return this._vin_num;
			}
			set
			{
				if ((this._vin_num != value))
				{
					this._vin_num = value;
				}
			}
		}
		
		[Column(Storage="_title_num", DbType="NVarChar(50)")]
		public string title_num
		{
			get
			{
				return this._title_num;
			}
			set
			{
				if ((this._title_num != value))
				{
					this._title_num = value;
				}
			}
		}
		
		[Column(Storage="_gross_v_wt", DbType="Real")]
		public System.Nullable<float> gross_v_wt
		{
			get
			{
				return this._gross_v_wt;
			}
			set
			{
				if ((this._gross_v_wt != value))
				{
					this._gross_v_wt = value;
				}
			}
		}
		
		[Column(Storage="_gross_c_wt", DbType="Real")]
		public System.Nullable<float> gross_c_wt
		{
			get
			{
				return this._gross_c_wt;
			}
			set
			{
				if ((this._gross_c_wt != value))
				{
					this._gross_c_wt = value;
				}
			}
		}
		
		[Column(Storage="_unlaiden_wt", DbType="Real")]
		public System.Nullable<float> unlaiden_wt
		{
			get
			{
				return this._unlaiden_wt;
			}
			set
			{
				if ((this._unlaiden_wt != value))
				{
					this._unlaiden_wt = value;
				}
			}
		}
		
		[Column(Storage="_tag_num", DbType="NVarChar(50)")]
		public string tag_num
		{
			get
			{
				return this._tag_num;
			}
			set
			{
				if ((this._tag_num != value))
				{
					this._tag_num = value;
				}
			}
		}
		
		[Column(Storage="_tag_state", DbType="NVarChar(10)")]
		public string tag_state
		{
			get
			{
				return this._tag_state;
			}
			set
			{
				if ((this._tag_state != value))
				{
					this._tag_state = value;
				}
			}
		}
		
		[Column(Storage="_fuel_descr", DbType="NVarChar(50)")]
		public string fuel_descr
		{
			get
			{
				return this._fuel_descr;
			}
			set
			{
				if ((this._fuel_descr != value))
				{
					this._fuel_descr = value;
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this._cost = value;
				}
			}
		}
		
		[Column(Storage="_stolen", DbType="Bit NOT NULL")]
		public bool stolen
		{
			get
			{
				return this._stolen;
			}
			set
			{
				if ((this._stolen != value))
				{
					this._stolen = value;
				}
			}
		}
		
		[Column(Storage="_sold", DbType="Bit NOT NULL")]
		public bool sold
		{
			get
			{
				return this._sold;
			}
			set
			{
				if ((this._sold != value))
				{
					this._sold = value;
				}
			}
		}
		
		[Column(Storage="_lojack", DbType="Bit NOT NULL")]
		public bool lojack
		{
			get
			{
				return this._lojack;
			}
			set
			{
				if ((this._lojack != value))
				{
					this._lojack = value;
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
		
		[Column(Storage="_in_repair", DbType="Bit NOT NULL")]
		public bool in_repair
		{
			get
			{
				return this._in_repair;
			}
			set
			{
				if ((this._in_repair != value))
				{
					this._in_repair = value;
				}
			}
		}
		
		[Column(Storage="_totaled", DbType="Bit NOT NULL")]
		public bool totaled
		{
			get
			{
				return this._totaled;
			}
			set
			{
				if ((this._totaled != value))
				{
					this._totaled = value;
				}
			}
		}
		
		[Column(Storage="_tag_expire_rmdr_wks", DbType="SmallInt")]
		public System.Nullable<short> tag_expire_rmdr_wks
		{
			get
			{
				return this._tag_expire_rmdr_wks;
			}
			set
			{
				if ((this._tag_expire_rmdr_wks != value))
				{
					this._tag_expire_rmdr_wks = value;
				}
			}
		}
		
		[Column(Storage="_hut_sticker", DbType="Bit NOT NULL")]
		public bool hut_sticker
		{
			get
			{
				return this._hut_sticker;
			}
			set
			{
				if ((this._hut_sticker != value))
				{
					this._hut_sticker = value;
				}
			}
		}
		
		[Column(Storage="_apportioned", DbType="Bit NOT NULL")]
		public bool apportioned
		{
			get
			{
				return this._apportioned;
			}
			set
			{
				if ((this._apportioned != value))
				{
					this._apportioned = value;
				}
			}
		}
		
		[Column(Storage="_ifta_sticker", DbType="Bit NOT NULL")]
		public bool ifta_sticker
		{
			get
			{
				return this._ifta_sticker;
			}
			set
			{
				if ((this._ifta_sticker != value))
				{
					this._ifta_sticker = value;
				}
			}
		}
		
		[Column(Storage="_gps", DbType="Bit NOT NULL")]
		public bool gps
		{
			get
			{
				return this._gps;
			}
			set
			{
				if ((this._gps != value))
				{
					this._gps = value;
				}
			}
		}
		
		[Column(Storage="_unknown", DbType="Bit NOT NULL")]
		public bool unknown
		{
			get
			{
				return this._unknown;
			}
			set
			{
				if ((this._unknown != value))
				{
					this._unknown = value;
				}
			}
		}
		
		[Column(Storage="_current_value", DbType="Real NOT NULL")]
		public float current_value
		{
			get
			{
				return this._current_value;
			}
			set
			{
				if ((this._current_value != value))
				{
					this._current_value = value;
				}
			}
		}
		
		[Column(Storage="_img_cnt", DbType="Int")]
		public System.Nullable<int> img_cnt
		{
			get
			{
				return this._img_cnt;
			}
			set
			{
				if ((this._img_cnt != value))
				{
					this._img_cnt = value;
				}
			}
		}
		
		[Column(Storage="_leased", DbType="Bit NOT NULL")]
		public bool leased
		{
			get
			{
				return this._leased;
			}
			set
			{
				if ((this._leased != value))
				{
					this._leased = value;
				}
			}
		}
		
		[Column(Storage="_gps_num", DbType="NVarChar(60)")]
		public string gps_num
		{
			get
			{
				return this._gps_num;
			}
			set
			{
				if ((this._gps_num != value))
				{
					this._gps_num = value;
				}
			}
		}
		
		[Column(Storage="_ezpass", DbType="Bit NOT NULL")]
		public bool ezpass
		{
			get
			{
				return this._ezpass;
			}
			set
			{
				if ((this._ezpass != value))
				{
					this._ezpass = value;
				}
			}
		}
		
		[Column(Storage="_ezpass_num", DbType="NVarChar(60)")]
		public string ezpass_num
		{
			get
			{
				return this._ezpass_num;
			}
			set
			{
				if ((this._ezpass_num != value))
				{
					this._ezpass_num = value;
				}
			}
		}
		
		[Column(Storage="_fuelcard", DbType="Bit NOT NULL")]
		public bool fuelcard
		{
			get
			{
				return this._fuelcard;
			}
			set
			{
				if ((this._fuelcard != value))
				{
					this._fuelcard = value;
				}
			}
		}
		
		[Column(Storage="_fuelcard_num", DbType="NVarChar(60)")]
		public string fuelcard_num
		{
			get
			{
				return this._fuelcard_num;
			}
			set
			{
				if ((this._fuelcard_num != value))
				{
					this._fuelcard_num = value;
				}
			}
		}
		
		[Column(Storage="_rownum", DbType="BigInt")]
		public System.Nullable<long> rownum
		{
			get
			{
				return this._rownum;
			}
			set
			{
				if ((this._rownum != value))
				{
					this._rownum = value;
				}
			}
		}
		
		[Column(Storage="_to_be_sold", DbType="Bit NOT NULL")]
		public bool to_be_sold
		{
			get
			{
				return this._to_be_sold;
			}
			set
			{
				if ((this._to_be_sold != value))
				{
					this._to_be_sold = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50)")]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
		
		[Column(Storage="_fuel_card_loc", DbType="NVarChar(50)")]
		public string fuel_card_loc
		{
			get
			{
				return this._fuel_card_loc;
			}
			set
			{
				if ((this._fuel_card_loc != value))
				{
					this._fuel_card_loc = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.equipment")]
	public partial class equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _equip_id;
		
		private System.Nullable<short> _type_id;
		
		private System.Nullable<short> _make_id;
		
		private System.Nullable<short> _model_id;
		
		private string _equip_year;
		
		private string _vin_num;
		
		private string _title_num;
		
		private string _registered_by;
		
		private string _work_loc;
		
		private System.Nullable<float> _gross_v_wt;
		
		private System.Nullable<float> _gross_c_wt;
		
		private System.Nullable<float> _unlaiden_wt;
		
		private string _tag_num;
		
		private string _tag_state;
		
		private System.Nullable<short> _fuel;
		
		private System.Nullable<float> _cost;
		
		private System.Nullable<System.DateTime> _service_due_dt;
		
		private System.Nullable<System.DateTime> _insp_due_dt;
		
		private System.Nullable<short> _service_rmdr_wks;
		
		private System.Nullable<short> _insp_rmdr_wks;
		
		private System.Nullable<System.DateTime> _lst_upd_dt;
		
		private bool _stolen;
		
		private bool _sold;
		
		private bool _lojack;
		
		private string _comment;
		
		private bool _assigned;
		
		private bool _in_repair;
		
		private bool _totaled;
		
		private string _managed_by;
		
		private System.Nullable<System.DateTime> _miles_dt;
		
		private System.Nullable<System.DateTime> _managed_by_dt;
		
		private bool _pipeline;
		
		private System.Nullable<System.DateTime> _tag_expire_dt;
		
		private System.Nullable<short> _tag_expire_rmdr_wks;
		
		private System.Nullable<float> _service_due_num;
		
		private bool _hut_sticker;
		
		private bool _apportioned;
		
		private bool _ifta_sticker;
		
		private bool _gps;
		
		private string _gps_num;
		
		private bool _ezpass;
		
		private string _ezpass_num;
		
		private bool _unknown;
		
		private float _current_value;
		
		private System.Nullable<System.DateTime> _current_value_dt;
		
		private System.Nullable<float> _miles_hours;
		
		private bool _leased;
		
		private bool _fuelcard;
		
		private string _fuelcard_num;
		
		private bool _to_be_sold;
		
		private string _fuel_card_loc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onequip_idChanging(string value);
    partial void Onequip_idChanged();
    partial void Ontype_idChanging(System.Nullable<short> value);
    partial void Ontype_idChanged();
    partial void Onmake_idChanging(System.Nullable<short> value);
    partial void Onmake_idChanged();
    partial void Onmodel_idChanging(System.Nullable<short> value);
    partial void Onmodel_idChanged();
    partial void Onequip_yearChanging(string value);
    partial void Onequip_yearChanged();
    partial void Onvin_numChanging(string value);
    partial void Onvin_numChanged();
    partial void Ontitle_numChanging(string value);
    partial void Ontitle_numChanged();
    partial void Onregistered_byChanging(string value);
    partial void Onregistered_byChanged();
    partial void Onwork_locChanging(string value);
    partial void Onwork_locChanged();
    partial void Ongross_v_wtChanging(System.Nullable<float> value);
    partial void Ongross_v_wtChanged();
    partial void Ongross_c_wtChanging(System.Nullable<float> value);
    partial void Ongross_c_wtChanged();
    partial void Onunlaiden_wtChanging(System.Nullable<float> value);
    partial void Onunlaiden_wtChanged();
    partial void Ontag_numChanging(string value);
    partial void Ontag_numChanged();
    partial void Ontag_stateChanging(string value);
    partial void Ontag_stateChanged();
    partial void OnfuelChanging(System.Nullable<short> value);
    partial void OnfuelChanged();
    partial void OncostChanging(System.Nullable<float> value);
    partial void OncostChanged();
    partial void Onservice_due_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onservice_due_dtChanged();
    partial void Oninsp_due_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oninsp_due_dtChanged();
    partial void Onservice_rmdr_wksChanging(System.Nullable<short> value);
    partial void Onservice_rmdr_wksChanged();
    partial void Oninsp_rmdr_wksChanging(System.Nullable<short> value);
    partial void Oninsp_rmdr_wksChanged();
    partial void Onlst_upd_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onlst_upd_dtChanged();
    partial void OnstolenChanging(bool value);
    partial void OnstolenChanged();
    partial void OnsoldChanging(bool value);
    partial void OnsoldChanged();
    partial void OnlojackChanging(bool value);
    partial void OnlojackChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnassignedChanging(bool value);
    partial void OnassignedChanged();
    partial void Onin_repairChanging(bool value);
    partial void Onin_repairChanged();
    partial void OntotaledChanging(bool value);
    partial void OntotaledChanged();
    partial void Onmanaged_byChanging(string value);
    partial void Onmanaged_byChanged();
    partial void Onmiles_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onmiles_dtChanged();
    partial void Onmanaged_by_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onmanaged_by_dtChanged();
    partial void OnpipelineChanging(bool value);
    partial void OnpipelineChanged();
    partial void Ontag_expire_dtChanging(System.Nullable<System.DateTime> value);
    partial void Ontag_expire_dtChanged();
    partial void Ontag_expire_rmdr_wksChanging(System.Nullable<short> value);
    partial void Ontag_expire_rmdr_wksChanged();
    partial void Onservice_due_numChanging(System.Nullable<float> value);
    partial void Onservice_due_numChanged();
    partial void Onhut_stickerChanging(bool value);
    partial void Onhut_stickerChanged();
    partial void OnapportionedChanging(bool value);
    partial void OnapportionedChanged();
    partial void Onifta_stickerChanging(bool value);
    partial void Onifta_stickerChanged();
    partial void OngpsChanging(bool value);
    partial void OngpsChanged();
    partial void Ongps_numChanging(string value);
    partial void Ongps_numChanged();
    partial void OnezpassChanging(bool value);
    partial void OnezpassChanged();
    partial void Onezpass_numChanging(string value);
    partial void Onezpass_numChanged();
    partial void OnunknownChanging(bool value);
    partial void OnunknownChanged();
    partial void Oncurrent_valueChanging(float value);
    partial void Oncurrent_valueChanged();
    partial void Oncurrent_value_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncurrent_value_dtChanged();
    partial void Onmiles_hoursChanging(System.Nullable<float> value);
    partial void Onmiles_hoursChanged();
    partial void OnleasedChanging(bool value);
    partial void OnleasedChanged();
    partial void OnfuelcardChanging(bool value);
    partial void OnfuelcardChanged();
    partial void Onfuelcard_numChanging(string value);
    partial void Onfuelcard_numChanged();
    partial void Onto_be_soldChanging(bool value);
    partial void Onto_be_soldChanged();
    partial void Onfuel_card_locChanging(string value);
    partial void Onfuel_card_locChanged();
    #endregion
		
		public equipment()
		{
			OnCreated();
		}
		
		[Column(Storage="_equip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this.Onequip_idChanging(value);
					this.SendPropertyChanging();
					this._equip_id = value;
					this.SendPropertyChanged("equip_id");
					this.Onequip_idChanged();
				}
			}
		}
		
		[Column(Storage="_type_id", DbType="SmallInt")]
		public System.Nullable<short> type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[Column(Storage="_make_id", DbType="SmallInt")]
		public System.Nullable<short> make_id
		{
			get
			{
				return this._make_id;
			}
			set
			{
				if ((this._make_id != value))
				{
					this.Onmake_idChanging(value);
					this.SendPropertyChanging();
					this._make_id = value;
					this.SendPropertyChanged("make_id");
					this.Onmake_idChanged();
				}
			}
		}
		
		[Column(Storage="_model_id", DbType="SmallInt")]
		public System.Nullable<short> model_id
		{
			get
			{
				return this._model_id;
			}
			set
			{
				if ((this._model_id != value))
				{
					this.Onmodel_idChanging(value);
					this.SendPropertyChanging();
					this._model_id = value;
					this.SendPropertyChanged("model_id");
					this.Onmodel_idChanged();
				}
			}
		}
		
		[Column(Storage="_equip_year", DbType="NVarChar(4)")]
		public string equip_year
		{
			get
			{
				return this._equip_year;
			}
			set
			{
				if ((this._equip_year != value))
				{
					this.Onequip_yearChanging(value);
					this.SendPropertyChanging();
					this._equip_year = value;
					this.SendPropertyChanged("equip_year");
					this.Onequip_yearChanged();
				}
			}
		}
		
		[Column(Storage="_vin_num", DbType="NVarChar(50)")]
		public string vin_num
		{
			get
			{
				return this._vin_num;
			}
			set
			{
				if ((this._vin_num != value))
				{
					this.Onvin_numChanging(value);
					this.SendPropertyChanging();
					this._vin_num = value;
					this.SendPropertyChanged("vin_num");
					this.Onvin_numChanged();
				}
			}
		}
		
		[Column(Storage="_title_num", DbType="NVarChar(50)")]
		public string title_num
		{
			get
			{
				return this._title_num;
			}
			set
			{
				if ((this._title_num != value))
				{
					this.Ontitle_numChanging(value);
					this.SendPropertyChanging();
					this._title_num = value;
					this.SendPropertyChanged("title_num");
					this.Ontitle_numChanged();
				}
			}
		}
		
		[Column(Storage="_registered_by", DbType="NVarChar(50)")]
		public string registered_by
		{
			get
			{
				return this._registered_by;
			}
			set
			{
				if ((this._registered_by != value))
				{
					this.Onregistered_byChanging(value);
					this.SendPropertyChanging();
					this._registered_by = value;
					this.SendPropertyChanged("registered_by");
					this.Onregistered_byChanged();
				}
			}
		}
		
		[Column(Storage="_work_loc", DbType="NVarChar(50)")]
		public string work_loc
		{
			get
			{
				return this._work_loc;
			}
			set
			{
				if ((this._work_loc != value))
				{
					this.Onwork_locChanging(value);
					this.SendPropertyChanging();
					this._work_loc = value;
					this.SendPropertyChanged("work_loc");
					this.Onwork_locChanged();
				}
			}
		}
		
		[Column(Storage="_gross_v_wt", DbType="Real")]
		public System.Nullable<float> gross_v_wt
		{
			get
			{
				return this._gross_v_wt;
			}
			set
			{
				if ((this._gross_v_wt != value))
				{
					this.Ongross_v_wtChanging(value);
					this.SendPropertyChanging();
					this._gross_v_wt = value;
					this.SendPropertyChanged("gross_v_wt");
					this.Ongross_v_wtChanged();
				}
			}
		}
		
		[Column(Storage="_gross_c_wt", DbType="Real")]
		public System.Nullable<float> gross_c_wt
		{
			get
			{
				return this._gross_c_wt;
			}
			set
			{
				if ((this._gross_c_wt != value))
				{
					this.Ongross_c_wtChanging(value);
					this.SendPropertyChanging();
					this._gross_c_wt = value;
					this.SendPropertyChanged("gross_c_wt");
					this.Ongross_c_wtChanged();
				}
			}
		}
		
		[Column(Storage="_unlaiden_wt", DbType="Real")]
		public System.Nullable<float> unlaiden_wt
		{
			get
			{
				return this._unlaiden_wt;
			}
			set
			{
				if ((this._unlaiden_wt != value))
				{
					this.Onunlaiden_wtChanging(value);
					this.SendPropertyChanging();
					this._unlaiden_wt = value;
					this.SendPropertyChanged("unlaiden_wt");
					this.Onunlaiden_wtChanged();
				}
			}
		}
		
		[Column(Storage="_tag_num", DbType="NVarChar(50)")]
		public string tag_num
		{
			get
			{
				return this._tag_num;
			}
			set
			{
				if ((this._tag_num != value))
				{
					this.Ontag_numChanging(value);
					this.SendPropertyChanging();
					this._tag_num = value;
					this.SendPropertyChanged("tag_num");
					this.Ontag_numChanged();
				}
			}
		}
		
		[Column(Storage="_tag_state", DbType="NVarChar(10)")]
		public string tag_state
		{
			get
			{
				return this._tag_state;
			}
			set
			{
				if ((this._tag_state != value))
				{
					this.Ontag_stateChanging(value);
					this.SendPropertyChanging();
					this._tag_state = value;
					this.SendPropertyChanged("tag_state");
					this.Ontag_stateChanged();
				}
			}
		}
		
		[Column(Storage="_fuel", DbType="SmallInt")]
		public System.Nullable<short> fuel
		{
			get
			{
				return this._fuel;
			}
			set
			{
				if ((this._fuel != value))
				{
					this.OnfuelChanging(value);
					this.SendPropertyChanging();
					this._fuel = value;
					this.SendPropertyChanged("fuel");
					this.OnfuelChanged();
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[Column(Storage="_service_due_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> service_due_dt
		{
			get
			{
				return this._service_due_dt;
			}
			set
			{
				if ((this._service_due_dt != value))
				{
					this.Onservice_due_dtChanging(value);
					this.SendPropertyChanging();
					this._service_due_dt = value;
					this.SendPropertyChanged("service_due_dt");
					this.Onservice_due_dtChanged();
				}
			}
		}
		
		[Column(Storage="_insp_due_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> insp_due_dt
		{
			get
			{
				return this._insp_due_dt;
			}
			set
			{
				if ((this._insp_due_dt != value))
				{
					this.Oninsp_due_dtChanging(value);
					this.SendPropertyChanging();
					this._insp_due_dt = value;
					this.SendPropertyChanged("insp_due_dt");
					this.Oninsp_due_dtChanged();
				}
			}
		}
		
		[Column(Storage="_service_rmdr_wks", DbType="SmallInt")]
		public System.Nullable<short> service_rmdr_wks
		{
			get
			{
				return this._service_rmdr_wks;
			}
			set
			{
				if ((this._service_rmdr_wks != value))
				{
					this.Onservice_rmdr_wksChanging(value);
					this.SendPropertyChanging();
					this._service_rmdr_wks = value;
					this.SendPropertyChanged("service_rmdr_wks");
					this.Onservice_rmdr_wksChanged();
				}
			}
		}
		
		[Column(Storage="_insp_rmdr_wks", DbType="SmallInt")]
		public System.Nullable<short> insp_rmdr_wks
		{
			get
			{
				return this._insp_rmdr_wks;
			}
			set
			{
				if ((this._insp_rmdr_wks != value))
				{
					this.Oninsp_rmdr_wksChanging(value);
					this.SendPropertyChanging();
					this._insp_rmdr_wks = value;
					this.SendPropertyChanged("insp_rmdr_wks");
					this.Oninsp_rmdr_wksChanged();
				}
			}
		}
		
		[Column(Storage="_lst_upd_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> lst_upd_dt
		{
			get
			{
				return this._lst_upd_dt;
			}
			set
			{
				if ((this._lst_upd_dt != value))
				{
					this.Onlst_upd_dtChanging(value);
					this.SendPropertyChanging();
					this._lst_upd_dt = value;
					this.SendPropertyChanged("lst_upd_dt");
					this.Onlst_upd_dtChanged();
				}
			}
		}
		
		[Column(Storage="_stolen", DbType="Bit NOT NULL")]
		public bool stolen
		{
			get
			{
				return this._stolen;
			}
			set
			{
				if ((this._stolen != value))
				{
					this.OnstolenChanging(value);
					this.SendPropertyChanging();
					this._stolen = value;
					this.SendPropertyChanged("stolen");
					this.OnstolenChanged();
				}
			}
		}
		
		[Column(Storage="_sold", DbType="Bit NOT NULL")]
		public bool sold
		{
			get
			{
				return this._sold;
			}
			set
			{
				if ((this._sold != value))
				{
					this.OnsoldChanging(value);
					this.SendPropertyChanging();
					this._sold = value;
					this.SendPropertyChanged("sold");
					this.OnsoldChanged();
				}
			}
		}
		
		[Column(Storage="_lojack", DbType="Bit NOT NULL")]
		public bool lojack
		{
			get
			{
				return this._lojack;
			}
			set
			{
				if ((this._lojack != value))
				{
					this.OnlojackChanging(value);
					this.SendPropertyChanging();
					this._lojack = value;
					this.SendPropertyChanged("lojack");
					this.OnlojackChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[Column(Storage="_assigned", DbType="Bit NOT NULL")]
		public bool assigned
		{
			get
			{
				return this._assigned;
			}
			set
			{
				if ((this._assigned != value))
				{
					this.OnassignedChanging(value);
					this.SendPropertyChanging();
					this._assigned = value;
					this.SendPropertyChanged("assigned");
					this.OnassignedChanged();
				}
			}
		}
		
		[Column(Storage="_in_repair", DbType="Bit NOT NULL")]
		public bool in_repair
		{
			get
			{
				return this._in_repair;
			}
			set
			{
				if ((this._in_repair != value))
				{
					this.Onin_repairChanging(value);
					this.SendPropertyChanging();
					this._in_repair = value;
					this.SendPropertyChanged("in_repair");
					this.Onin_repairChanged();
				}
			}
		}
		
		[Column(Storage="_totaled", DbType="Bit NOT NULL")]
		public bool totaled
		{
			get
			{
				return this._totaled;
			}
			set
			{
				if ((this._totaled != value))
				{
					this.OntotaledChanging(value);
					this.SendPropertyChanging();
					this._totaled = value;
					this.SendPropertyChanged("totaled");
					this.OntotaledChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by", DbType="NVarChar(50)")]
		public string managed_by
		{
			get
			{
				return this._managed_by;
			}
			set
			{
				if ((this._managed_by != value))
				{
					this.Onmanaged_byChanging(value);
					this.SendPropertyChanging();
					this._managed_by = value;
					this.SendPropertyChanged("managed_by");
					this.Onmanaged_byChanged();
				}
			}
		}
		
		[Column(Storage="_miles_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> miles_dt
		{
			get
			{
				return this._miles_dt;
			}
			set
			{
				if ((this._miles_dt != value))
				{
					this.Onmiles_dtChanging(value);
					this.SendPropertyChanging();
					this._miles_dt = value;
					this.SendPropertyChanged("miles_dt");
					this.Onmiles_dtChanged();
				}
			}
		}
		
		[Column(Storage="_managed_by_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> managed_by_dt
		{
			get
			{
				return this._managed_by_dt;
			}
			set
			{
				if ((this._managed_by_dt != value))
				{
					this.Onmanaged_by_dtChanging(value);
					this.SendPropertyChanging();
					this._managed_by_dt = value;
					this.SendPropertyChanged("managed_by_dt");
					this.Onmanaged_by_dtChanged();
				}
			}
		}
		
		[Column(Storage="_pipeline", DbType="Bit NOT NULL")]
		public bool pipeline
		{
			get
			{
				return this._pipeline;
			}
			set
			{
				if ((this._pipeline != value))
				{
					this.OnpipelineChanging(value);
					this.SendPropertyChanging();
					this._pipeline = value;
					this.SendPropertyChanged("pipeline");
					this.OnpipelineChanged();
				}
			}
		}
		
		[Column(Storage="_tag_expire_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> tag_expire_dt
		{
			get
			{
				return this._tag_expire_dt;
			}
			set
			{
				if ((this._tag_expire_dt != value))
				{
					this.Ontag_expire_dtChanging(value);
					this.SendPropertyChanging();
					this._tag_expire_dt = value;
					this.SendPropertyChanged("tag_expire_dt");
					this.Ontag_expire_dtChanged();
				}
			}
		}
		
		[Column(Storage="_tag_expire_rmdr_wks", DbType="SmallInt")]
		public System.Nullable<short> tag_expire_rmdr_wks
		{
			get
			{
				return this._tag_expire_rmdr_wks;
			}
			set
			{
				if ((this._tag_expire_rmdr_wks != value))
				{
					this.Ontag_expire_rmdr_wksChanging(value);
					this.SendPropertyChanging();
					this._tag_expire_rmdr_wks = value;
					this.SendPropertyChanged("tag_expire_rmdr_wks");
					this.Ontag_expire_rmdr_wksChanged();
				}
			}
		}
		
		[Column(Storage="_service_due_num", DbType="Real")]
		public System.Nullable<float> service_due_num
		{
			get
			{
				return this._service_due_num;
			}
			set
			{
				if ((this._service_due_num != value))
				{
					this.Onservice_due_numChanging(value);
					this.SendPropertyChanging();
					this._service_due_num = value;
					this.SendPropertyChanged("service_due_num");
					this.Onservice_due_numChanged();
				}
			}
		}
		
		[Column(Storage="_hut_sticker", DbType="Bit NOT NULL")]
		public bool hut_sticker
		{
			get
			{
				return this._hut_sticker;
			}
			set
			{
				if ((this._hut_sticker != value))
				{
					this.Onhut_stickerChanging(value);
					this.SendPropertyChanging();
					this._hut_sticker = value;
					this.SendPropertyChanged("hut_sticker");
					this.Onhut_stickerChanged();
				}
			}
		}
		
		[Column(Storage="_apportioned", DbType="Bit NOT NULL")]
		public bool apportioned
		{
			get
			{
				return this._apportioned;
			}
			set
			{
				if ((this._apportioned != value))
				{
					this.OnapportionedChanging(value);
					this.SendPropertyChanging();
					this._apportioned = value;
					this.SendPropertyChanged("apportioned");
					this.OnapportionedChanged();
				}
			}
		}
		
		[Column(Storage="_ifta_sticker", DbType="Bit NOT NULL")]
		public bool ifta_sticker
		{
			get
			{
				return this._ifta_sticker;
			}
			set
			{
				if ((this._ifta_sticker != value))
				{
					this.Onifta_stickerChanging(value);
					this.SendPropertyChanging();
					this._ifta_sticker = value;
					this.SendPropertyChanged("ifta_sticker");
					this.Onifta_stickerChanged();
				}
			}
		}
		
		[Column(Storage="_gps", DbType="Bit NOT NULL")]
		public bool gps
		{
			get
			{
				return this._gps;
			}
			set
			{
				if ((this._gps != value))
				{
					this.OngpsChanging(value);
					this.SendPropertyChanging();
					this._gps = value;
					this.SendPropertyChanged("gps");
					this.OngpsChanged();
				}
			}
		}
		
		[Column(Storage="_gps_num", DbType="NVarChar(60)")]
		public string gps_num
		{
			get
			{
				return this._gps_num;
			}
			set
			{
				if ((this._gps_num != value))
				{
					this.Ongps_numChanging(value);
					this.SendPropertyChanging();
					this._gps_num = value;
					this.SendPropertyChanged("gps_num");
					this.Ongps_numChanged();
				}
			}
		}
		
		[Column(Storage="_ezpass", DbType="Bit NOT NULL")]
		public bool ezpass
		{
			get
			{
				return this._ezpass;
			}
			set
			{
				if ((this._ezpass != value))
				{
					this.OnezpassChanging(value);
					this.SendPropertyChanging();
					this._ezpass = value;
					this.SendPropertyChanged("ezpass");
					this.OnezpassChanged();
				}
			}
		}
		
		[Column(Storage="_ezpass_num", DbType="NVarChar(60)")]
		public string ezpass_num
		{
			get
			{
				return this._ezpass_num;
			}
			set
			{
				if ((this._ezpass_num != value))
				{
					this.Onezpass_numChanging(value);
					this.SendPropertyChanging();
					this._ezpass_num = value;
					this.SendPropertyChanged("ezpass_num");
					this.Onezpass_numChanged();
				}
			}
		}
		
		[Column(Storage="_unknown", DbType="Bit NOT NULL")]
		public bool unknown
		{
			get
			{
				return this._unknown;
			}
			set
			{
				if ((this._unknown != value))
				{
					this.OnunknownChanging(value);
					this.SendPropertyChanging();
					this._unknown = value;
					this.SendPropertyChanged("unknown");
					this.OnunknownChanged();
				}
			}
		}
		
		[Column(Storage="_current_value", DbType="Real NOT NULL")]
		public float current_value
		{
			get
			{
				return this._current_value;
			}
			set
			{
				if ((this._current_value != value))
				{
					this.Oncurrent_valueChanging(value);
					this.SendPropertyChanging();
					this._current_value = value;
					this.SendPropertyChanged("current_value");
					this.Oncurrent_valueChanged();
				}
			}
		}
		
		[Column(Storage="_current_value_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> current_value_dt
		{
			get
			{
				return this._current_value_dt;
			}
			set
			{
				if ((this._current_value_dt != value))
				{
					this.Oncurrent_value_dtChanging(value);
					this.SendPropertyChanging();
					this._current_value_dt = value;
					this.SendPropertyChanged("current_value_dt");
					this.Oncurrent_value_dtChanged();
				}
			}
		}
		
		[Column(Storage="_miles_hours", DbType="Real")]
		public System.Nullable<float> miles_hours
		{
			get
			{
				return this._miles_hours;
			}
			set
			{
				if ((this._miles_hours != value))
				{
					this.Onmiles_hoursChanging(value);
					this.SendPropertyChanging();
					this._miles_hours = value;
					this.SendPropertyChanged("miles_hours");
					this.Onmiles_hoursChanged();
				}
			}
		}
		
		[Column(Storage="_leased", DbType="Bit NOT NULL")]
		public bool leased
		{
			get
			{
				return this._leased;
			}
			set
			{
				if ((this._leased != value))
				{
					this.OnleasedChanging(value);
					this.SendPropertyChanging();
					this._leased = value;
					this.SendPropertyChanged("leased");
					this.OnleasedChanged();
				}
			}
		}
		
		[Column(Storage="_fuelcard", DbType="Bit NOT NULL")]
		public bool fuelcard
		{
			get
			{
				return this._fuelcard;
			}
			set
			{
				if ((this._fuelcard != value))
				{
					this.OnfuelcardChanging(value);
					this.SendPropertyChanging();
					this._fuelcard = value;
					this.SendPropertyChanged("fuelcard");
					this.OnfuelcardChanged();
				}
			}
		}
		
		[Column(Storage="_fuelcard_num", DbType="NVarChar(60)")]
		public string fuelcard_num
		{
			get
			{
				return this._fuelcard_num;
			}
			set
			{
				if ((this._fuelcard_num != value))
				{
					this.Onfuelcard_numChanging(value);
					this.SendPropertyChanging();
					this._fuelcard_num = value;
					this.SendPropertyChanged("fuelcard_num");
					this.Onfuelcard_numChanged();
				}
			}
		}
		
		[Column(Storage="_to_be_sold", DbType="Bit NOT NULL")]
		public bool to_be_sold
		{
			get
			{
				return this._to_be_sold;
			}
			set
			{
				if ((this._to_be_sold != value))
				{
					this.Onto_be_soldChanging(value);
					this.SendPropertyChanging();
					this._to_be_sold = value;
					this.SendPropertyChanged("to_be_sold");
					this.Onto_be_soldChanged();
				}
			}
		}
		
		[Column(Storage="_fuel_card_loc", DbType="NVarChar(50)")]
		public string fuel_card_loc
		{
			get
			{
				return this._fuel_card_loc;
			}
			set
			{
				if ((this._fuel_card_loc != value))
				{
					this.Onfuel_card_locChanging(value);
					this.SendPropertyChanging();
					this._fuel_card_loc = value;
					this.SendPropertyChanged("fuel_card_loc");
					this.Onfuel_card_locChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employeeID;
		
		private string _empId;
		
		private string _lname;
		
		private string _fname;
		
		private string _mname;
		
		private string _suffix;
		
		private char _empStatus;
		
		private string _org;
		
		private string _oqId;
		
		private string _comment;
		
		private string _ssn;
		
		private string _address1;
		
		private string _address2;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private string _email;
		
		private string _homephone;
		
		private string _cellphone;
		
		private System.Nullable<decimal> _payRate;
		
		private string _jobClass;
		
		private string _oparea;
		
		private System.Nullable<System.DateTime> _MVRcheckDt;
		
		private System.Nullable<System.DateTime> _CBGcheckDt;
		
		private System.Nullable<System.DateTime> _DandAcheckDt;
		
		private System.Nullable<char> _DandAresult;
		
		private System.Nullable<System.DateTime> _last_updt_dt;
		
		private string _last_updt_uid;
		
		private System.Nullable<System.DateTime> _birthDate;
		
		private string _DLnum;
		
		private string _DLstate;
		
		private System.Nullable<char> _DLclass;
		
		private System.Nullable<System.DateTime> _DLexpDate;
		
		private System.Nullable<System.DateTime> _medicalCardExpDt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnempIdChanging(string value);
    partial void OnempIdChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnsuffixChanging(string value);
    partial void OnsuffixChanged();
    partial void OnempStatusChanging(char value);
    partial void OnempStatusChanged();
    partial void OnorgChanging(string value);
    partial void OnorgChanged();
    partial void OnoqIdChanging(string value);
    partial void OnoqIdChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnssnChanging(string value);
    partial void OnssnChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnhomephoneChanging(string value);
    partial void OnhomephoneChanged();
    partial void OncellphoneChanging(string value);
    partial void OncellphoneChanged();
    partial void OnpayRateChanging(System.Nullable<decimal> value);
    partial void OnpayRateChanged();
    partial void OnjobClassChanging(string value);
    partial void OnjobClassChanged();
    partial void OnopareaChanging(string value);
    partial void OnopareaChanged();
    partial void OnMVRcheckDtChanging(System.Nullable<System.DateTime> value);
    partial void OnMVRcheckDtChanged();
    partial void OnCBGcheckDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCBGcheckDtChanged();
    partial void OnDandAcheckDtChanging(System.Nullable<System.DateTime> value);
    partial void OnDandAcheckDtChanged();
    partial void OnDandAresultChanging(System.Nullable<char> value);
    partial void OnDandAresultChanged();
    partial void Onlast_updt_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updt_dtChanged();
    partial void Onlast_updt_uidChanging(string value);
    partial void Onlast_updt_uidChanged();
    partial void OnbirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthDateChanged();
    partial void OnDLnumChanging(string value);
    partial void OnDLnumChanged();
    partial void OnDLstateChanging(string value);
    partial void OnDLstateChanged();
    partial void OnDLclassChanging(System.Nullable<char> value);
    partial void OnDLclassChanged();
    partial void OnDLexpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDLexpDateChanged();
    partial void OnmedicalCardExpDtChanging(System.Nullable<System.DateTime> value);
    partial void OnmedicalCardExpDtChanged();
    #endregion
		
		public employee()
		{
			OnCreated();
		}
		
		[Column(Storage="_employeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[Column(Storage="_empId", DbType="VarChar(15)")]
		public string empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[Column(Storage="_lname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[Column(Storage="_fname", DbType="VarChar(50)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[Column(Storage="_mname", DbType="VarChar(50)")]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[Column(Storage="_suffix", DbType="VarChar(10)")]
		public string suffix
		{
			get
			{
				return this._suffix;
			}
			set
			{
				if ((this._suffix != value))
				{
					this.OnsuffixChanging(value);
					this.SendPropertyChanging();
					this._suffix = value;
					this.SendPropertyChanged("suffix");
					this.OnsuffixChanged();
				}
			}
		}
		
		[Column(Storage="_empStatus", DbType="Char(1) NOT NULL")]
		public char empStatus
		{
			get
			{
				return this._empStatus;
			}
			set
			{
				if ((this._empStatus != value))
				{
					this.OnempStatusChanging(value);
					this.SendPropertyChanging();
					this._empStatus = value;
					this.SendPropertyChanged("empStatus");
					this.OnempStatusChanged();
				}
			}
		}
		
		[Column(Storage="_org", DbType="VarChar(10)")]
		public string org
		{
			get
			{
				return this._org;
			}
			set
			{
				if ((this._org != value))
				{
					this.OnorgChanging(value);
					this.SendPropertyChanging();
					this._org = value;
					this.SendPropertyChanged("org");
					this.OnorgChanged();
				}
			}
		}
		
		[Column(Storage="_oqId", DbType="VarChar(10)")]
		public string oqId
		{
			get
			{
				return this._oqId;
			}
			set
			{
				if ((this._oqId != value))
				{
					this.OnoqIdChanging(value);
					this.SendPropertyChanging();
					this._oqId = value;
					this.SendPropertyChanged("oqId");
					this.OnoqIdChanged();
				}
			}
		}
		
		[Column(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[Column(Storage="_ssn", DbType="VarChar(12)")]
		public string ssn
		{
			get
			{
				return this._ssn;
			}
			set
			{
				if ((this._ssn != value))
				{
					this.OnssnChanging(value);
					this.SendPropertyChanging();
					this._ssn = value;
					this.SendPropertyChanged("ssn");
					this.OnssnChanged();
				}
			}
		}
		
		[Column(Storage="_address1", DbType="VarChar(50)")]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[Column(Storage="_address2", DbType="VarChar(50)")]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[Column(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="VarChar(2)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[Column(Storage="_zip", DbType="VarChar(10)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_homephone", DbType="VarChar(25)")]
		public string homephone
		{
			get
			{
				return this._homephone;
			}
			set
			{
				if ((this._homephone != value))
				{
					this.OnhomephoneChanging(value);
					this.SendPropertyChanging();
					this._homephone = value;
					this.SendPropertyChanged("homephone");
					this.OnhomephoneChanged();
				}
			}
		}
		
		[Column(Storage="_cellphone", DbType="VarChar(25)")]
		public string cellphone
		{
			get
			{
				return this._cellphone;
			}
			set
			{
				if ((this._cellphone != value))
				{
					this.OncellphoneChanging(value);
					this.SendPropertyChanging();
					this._cellphone = value;
					this.SendPropertyChanged("cellphone");
					this.OncellphoneChanged();
				}
			}
		}
		
		[Column(Storage="_payRate", DbType="Money")]
		public System.Nullable<decimal> payRate
		{
			get
			{
				return this._payRate;
			}
			set
			{
				if ((this._payRate != value))
				{
					this.OnpayRateChanging(value);
					this.SendPropertyChanging();
					this._payRate = value;
					this.SendPropertyChanged("payRate");
					this.OnpayRateChanged();
				}
			}
		}
		
		[Column(Storage="_jobClass", DbType="VarChar(10)")]
		public string jobClass
		{
			get
			{
				return this._jobClass;
			}
			set
			{
				if ((this._jobClass != value))
				{
					this.OnjobClassChanging(value);
					this.SendPropertyChanging();
					this._jobClass = value;
					this.SendPropertyChanged("jobClass");
					this.OnjobClassChanged();
				}
			}
		}
		
		[Column(Storage="_oparea", DbType="VarChar(25)")]
		public string oparea
		{
			get
			{
				return this._oparea;
			}
			set
			{
				if ((this._oparea != value))
				{
					this.OnopareaChanging(value);
					this.SendPropertyChanging();
					this._oparea = value;
					this.SendPropertyChanged("oparea");
					this.OnopareaChanged();
				}
			}
		}
		
		[Column(Storage="_MVRcheckDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> MVRcheckDt
		{
			get
			{
				return this._MVRcheckDt;
			}
			set
			{
				if ((this._MVRcheckDt != value))
				{
					this.OnMVRcheckDtChanging(value);
					this.SendPropertyChanging();
					this._MVRcheckDt = value;
					this.SendPropertyChanged("MVRcheckDt");
					this.OnMVRcheckDtChanged();
				}
			}
		}
		
		[Column(Storage="_CBGcheckDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CBGcheckDt
		{
			get
			{
				return this._CBGcheckDt;
			}
			set
			{
				if ((this._CBGcheckDt != value))
				{
					this.OnCBGcheckDtChanging(value);
					this.SendPropertyChanging();
					this._CBGcheckDt = value;
					this.SendPropertyChanged("CBGcheckDt");
					this.OnCBGcheckDtChanged();
				}
			}
		}
		
		[Column(Storage="_DandAcheckDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> DandAcheckDt
		{
			get
			{
				return this._DandAcheckDt;
			}
			set
			{
				if ((this._DandAcheckDt != value))
				{
					this.OnDandAcheckDtChanging(value);
					this.SendPropertyChanging();
					this._DandAcheckDt = value;
					this.SendPropertyChanged("DandAcheckDt");
					this.OnDandAcheckDtChanged();
				}
			}
		}
		
		[Column(Storage="_DandAresult", DbType="Char(1)")]
		public System.Nullable<char> DandAresult
		{
			get
			{
				return this._DandAresult;
			}
			set
			{
				if ((this._DandAresult != value))
				{
					this.OnDandAresultChanging(value);
					this.SendPropertyChanging();
					this._DandAresult = value;
					this.SendPropertyChanged("DandAresult");
					this.OnDandAresultChanged();
				}
			}
		}
		
		[Column(Storage="_last_updt_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updt_dt
		{
			get
			{
				return this._last_updt_dt;
			}
			set
			{
				if ((this._last_updt_dt != value))
				{
					this.Onlast_updt_dtChanging(value);
					this.SendPropertyChanging();
					this._last_updt_dt = value;
					this.SendPropertyChanged("last_updt_dt");
					this.Onlast_updt_dtChanged();
				}
			}
		}
		
		[Column(Storage="_last_updt_uid", DbType="VarChar(25)")]
		public string last_updt_uid
		{
			get
			{
				return this._last_updt_uid;
			}
			set
			{
				if ((this._last_updt_uid != value))
				{
					this.Onlast_updt_uidChanging(value);
					this.SendPropertyChanging();
					this._last_updt_uid = value;
					this.SendPropertyChanged("last_updt_uid");
					this.Onlast_updt_uidChanged();
				}
			}
		}
		
		[Column(Storage="_birthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthDate
		{
			get
			{
				return this._birthDate;
			}
			set
			{
				if ((this._birthDate != value))
				{
					this.OnbirthDateChanging(value);
					this.SendPropertyChanging();
					this._birthDate = value;
					this.SendPropertyChanged("birthDate");
					this.OnbirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_DLnum", DbType="VarChar(50)")]
		public string DLnum
		{
			get
			{
				return this._DLnum;
			}
			set
			{
				if ((this._DLnum != value))
				{
					this.OnDLnumChanging(value);
					this.SendPropertyChanging();
					this._DLnum = value;
					this.SendPropertyChanged("DLnum");
					this.OnDLnumChanged();
				}
			}
		}
		
		[Column(Storage="_DLstate", DbType="VarChar(2)")]
		public string DLstate
		{
			get
			{
				return this._DLstate;
			}
			set
			{
				if ((this._DLstate != value))
				{
					this.OnDLstateChanging(value);
					this.SendPropertyChanging();
					this._DLstate = value;
					this.SendPropertyChanged("DLstate");
					this.OnDLstateChanged();
				}
			}
		}
		
		[Column(Storage="_DLclass", DbType="Char(1)")]
		public System.Nullable<char> DLclass
		{
			get
			{
				return this._DLclass;
			}
			set
			{
				if ((this._DLclass != value))
				{
					this.OnDLclassChanging(value);
					this.SendPropertyChanging();
					this._DLclass = value;
					this.SendPropertyChanged("DLclass");
					this.OnDLclassChanged();
				}
			}
		}
		
		[Column(Storage="_DLexpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DLexpDate
		{
			get
			{
				return this._DLexpDate;
			}
			set
			{
				if ((this._DLexpDate != value))
				{
					this.OnDLexpDateChanging(value);
					this.SendPropertyChanging();
					this._DLexpDate = value;
					this.SendPropertyChanged("DLexpDate");
					this.OnDLexpDateChanged();
				}
			}
		}
		
		[Column(Storage="_medicalCardExpDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> medicalCardExpDt
		{
			get
			{
				return this._medicalCardExpDt;
			}
			set
			{
				if ((this._medicalCardExpDt != value))
				{
					this.OnmedicalCardExpDtChanging(value);
					this.SendPropertyChanging();
					this._medicalCardExpDt = value;
					this.SendPropertyChanged("medicalCardExpDt");
					this.OnmedicalCardExpDtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_EquipAssignXferGrid")]
	public partial class vw_EquipAssignXferGrid
	{
		
		private string _equip_id;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private System.DateTime _assigned_dt;
		
		private string _asgn_cond_descr;
		
		private string _ret_cond_descr;
		
		private System.Nullable<float> _asgn_miles;
		
		private System.Nullable<float> _asgn_hours;
		
		private System.Nullable<float> _ret_miles;
		
		private System.Nullable<float> _ret_hours;
		
		private int _assign_id;
		
		private string _type_desc;
		
		private string _make_descr;
		
		private string _model_descr;
		
		private string _equip_year;
		
		private string _assigned_to;
		
		public vw_EquipAssignXferGrid()
		{
		}
		
		[Column(Storage="_equip_id", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string equip_id
		{
			get
			{
				return this._equip_id;
			}
			set
			{
				if ((this._equip_id != value))
				{
					this._equip_id = value;
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this._return_dt = value;
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime NOT NULL")]
		public System.DateTime assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this._assigned_dt = value;
				}
			}
		}
		
		[Column(Storage="_asgn_cond_descr", DbType="NVarChar(15)")]
		public string asgn_cond_descr
		{
			get
			{
				return this._asgn_cond_descr;
			}
			set
			{
				if ((this._asgn_cond_descr != value))
				{
					this._asgn_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_ret_cond_descr", DbType="NVarChar(15)")]
		public string ret_cond_descr
		{
			get
			{
				return this._ret_cond_descr;
			}
			set
			{
				if ((this._ret_cond_descr != value))
				{
					this._ret_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_asgn_miles", DbType="Real")]
		public System.Nullable<float> asgn_miles
		{
			get
			{
				return this._asgn_miles;
			}
			set
			{
				if ((this._asgn_miles != value))
				{
					this._asgn_miles = value;
				}
			}
		}
		
		[Column(Storage="_asgn_hours", DbType="Real")]
		public System.Nullable<float> asgn_hours
		{
			get
			{
				return this._asgn_hours;
			}
			set
			{
				if ((this._asgn_hours != value))
				{
					this._asgn_hours = value;
				}
			}
		}
		
		[Column(Storage="_ret_miles", DbType="Real")]
		public System.Nullable<float> ret_miles
		{
			get
			{
				return this._ret_miles;
			}
			set
			{
				if ((this._ret_miles != value))
				{
					this._ret_miles = value;
				}
			}
		}
		
		[Column(Storage="_ret_hours", DbType="Real")]
		public System.Nullable<float> ret_hours
		{
			get
			{
				return this._ret_hours;
			}
			set
			{
				if ((this._ret_hours != value))
				{
					this._ret_hours = value;
				}
			}
		}
		
		[Column(Storage="_assign_id", DbType="Int NOT NULL")]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this._assign_id = value;
				}
			}
		}
		
		[Column(Storage="_type_desc", DbType="NVarChar(50)")]
		public string type_desc
		{
			get
			{
				return this._type_desc;
			}
			set
			{
				if ((this._type_desc != value))
				{
					this._type_desc = value;
				}
			}
		}
		
		[Column(Storage="_make_descr", DbType="NVarChar(25)")]
		public string make_descr
		{
			get
			{
				return this._make_descr;
			}
			set
			{
				if ((this._make_descr != value))
				{
					this._make_descr = value;
				}
			}
		}
		
		[Column(Storage="_model_descr", DbType="NVarChar(25)")]
		public string model_descr
		{
			get
			{
				return this._model_descr;
			}
			set
			{
				if ((this._model_descr != value))
				{
					this._model_descr = value;
				}
			}
		}
		
		[Column(Storage="_equip_year", DbType="NVarChar(4)")]
		public string equip_year
		{
			get
			{
				return this._equip_year;
			}
			set
			{
				if ((this._equip_year != value))
				{
					this._equip_year = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_ToolsAssignXferGrid")]
	public partial class vw_ToolsAssignXferGrid
	{
		
		private string _tool_id;
		
		private string _assigned_to;
		
		private System.Nullable<System.DateTime> _assigned_dt;
		
		private System.Nullable<System.DateTime> _return_dt;
		
		private string _asgn_cond_descr;
		
		private string _ret_cond_descr;
		
		private int _assign_id;
		
		private string _tools_type_descr;
		
		private string _tools_descr_descr;
		
		private string _size_descr;
		
		private string _tool_mfg_descr;
		
		public vw_ToolsAssignXferGrid()
		{
		}
		
		[Column(Storage="_tool_id", DbType="NVarChar(50)")]
		public string tool_id
		{
			get
			{
				return this._tool_id;
			}
			set
			{
				if ((this._tool_id != value))
				{
					this._tool_id = value;
				}
			}
		}
		
		[Column(Storage="_assigned_to", DbType="NVarChar(50)")]
		public string assigned_to
		{
			get
			{
				return this._assigned_to;
			}
			set
			{
				if ((this._assigned_to != value))
				{
					this._assigned_to = value;
				}
			}
		}
		
		[Column(Storage="_assigned_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> assigned_dt
		{
			get
			{
				return this._assigned_dt;
			}
			set
			{
				if ((this._assigned_dt != value))
				{
					this._assigned_dt = value;
				}
			}
		}
		
		[Column(Storage="_return_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> return_dt
		{
			get
			{
				return this._return_dt;
			}
			set
			{
				if ((this._return_dt != value))
				{
					this._return_dt = value;
				}
			}
		}
		
		[Column(Storage="_asgn_cond_descr", DbType="NVarChar(15)")]
		public string asgn_cond_descr
		{
			get
			{
				return this._asgn_cond_descr;
			}
			set
			{
				if ((this._asgn_cond_descr != value))
				{
					this._asgn_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_ret_cond_descr", DbType="NVarChar(15)")]
		public string ret_cond_descr
		{
			get
			{
				return this._ret_cond_descr;
			}
			set
			{
				if ((this._ret_cond_descr != value))
				{
					this._ret_cond_descr = value;
				}
			}
		}
		
		[Column(Storage="_assign_id", DbType="Int NOT NULL")]
		public int assign_id
		{
			get
			{
				return this._assign_id;
			}
			set
			{
				if ((this._assign_id != value))
				{
					this._assign_id = value;
				}
			}
		}
		
		[Column(Storage="_tools_type_descr", DbType="NVarChar(25)")]
		public string tools_type_descr
		{
			get
			{
				return this._tools_type_descr;
			}
			set
			{
				if ((this._tools_type_descr != value))
				{
					this._tools_type_descr = value;
				}
			}
		}
		
		[Column(Storage="_tools_descr_descr", DbType="NVarChar(50)")]
		public string tools_descr_descr
		{
			get
			{
				return this._tools_descr_descr;
			}
			set
			{
				if ((this._tools_descr_descr != value))
				{
					this._tools_descr_descr = value;
				}
			}
		}
		
		[Column(Storage="_size_descr", DbType="NVarChar(50)")]
		public string size_descr
		{
			get
			{
				return this._size_descr;
			}
			set
			{
				if ((this._size_descr != value))
				{
					this._size_descr = value;
				}
			}
		}
		
		[Column(Storage="_tool_mfg_descr", DbType="NVarChar(50)")]
		public string tool_mfg_descr
		{
			get
			{
				return this._tool_mfg_descr;
			}
			set
			{
				if ((this._tool_mfg_descr != value))
				{
					this._tool_mfg_descr = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
